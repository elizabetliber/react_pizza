{"ast":null,"code":"'use strict';\n\nconst open = require('opn');\n\nconst isAbsoluteUrl = require('is-absolute-url');\n\nfunction runOpen(uri, options, log) {\n  // https://github.com/webpack/webpack-dev-server/issues/1990\n  let openOptions = {\n    wait: false\n  };\n  let openOptionValue = '';\n\n  if (typeof options.open === 'string') {\n    openOptions = Object.assign({}, openOptions, {\n      app: options.open\n    });\n    openOptionValue = `: \"${options.open}\"`;\n  } else if (typeof options.open === 'object') {\n    openOptions = options.open;\n    openOptionValue = `: \"${JSON.stringify(options.open)}\"`;\n  }\n\n  const pages = typeof options.openPage === 'string' ? [options.openPage] : options.openPage || [''];\n  return Promise.all(pages.map(page => {\n    const pageUrl = page && isAbsoluteUrl(page) ? page : `${uri}${page}`;\n    return open(pageUrl, openOptions).catch(() => {\n      log.warn(`Unable to open \"${pageUrl}\" in browser${openOptionValue}. If you are running in a headless environment, please do not use the --open flag`);\n    });\n  }));\n}\n\nmodule.exports = runOpen;","map":{"version":3,"sources":["/home/lisa/VSProjects/react-pizza/react_pizza/node_modules/webpack-dev-server/lib/utils/runOpen.js"],"names":["open","require","isAbsoluteUrl","runOpen","uri","options","log","openOptions","wait","openOptionValue","Object","assign","app","JSON","stringify","pages","openPage","Promise","all","map","page","pageUrl","catch","warn","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,KAAD,CAApB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA7B;;AAEA,SAASE,OAAT,CAAiBC,GAAjB,EAAsBC,OAAtB,EAA+BC,GAA/B,EAAoC;AAClC;AACA,MAAIC,WAAW,GAAG;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAlB;AACA,MAAIC,eAAe,GAAG,EAAtB;;AAEA,MAAI,OAAOJ,OAAO,CAACL,IAAf,KAAwB,QAA5B,EAAsC;AACpCO,IAAAA,WAAW,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,WAAlB,EAA+B;AAAEK,MAAAA,GAAG,EAAEP,OAAO,CAACL;AAAf,KAA/B,CAAd;AACAS,IAAAA,eAAe,GAAI,MAAKJ,OAAO,CAACL,IAAK,GAArC;AACD,GAHD,MAGO,IAAI,OAAOK,OAAO,CAACL,IAAf,KAAwB,QAA5B,EAAsC;AAC3CO,IAAAA,WAAW,GAAGF,OAAO,CAACL,IAAtB;AACAS,IAAAA,eAAe,GAAI,MAAKI,IAAI,CAACC,SAAL,CAAeT,OAAO,CAACL,IAAvB,CAA6B,GAArD;AACD;;AAED,QAAMe,KAAK,GACT,OAAOV,OAAO,CAACW,QAAf,KAA4B,QAA5B,GACI,CAACX,OAAO,CAACW,QAAT,CADJ,GAEIX,OAAO,CAACW,QAAR,IAAoB,CAAC,EAAD,CAH1B;AAKA,SAAOC,OAAO,CAACC,GAAR,CACLH,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAU;AAClB,UAAMC,OAAO,GAAGD,IAAI,IAAIlB,aAAa,CAACkB,IAAD,CAArB,GAA8BA,IAA9B,GAAsC,GAAEhB,GAAI,GAAEgB,IAAK,EAAnE;AAEA,WAAOpB,IAAI,CAACqB,OAAD,EAAUd,WAAV,CAAJ,CAA2Be,KAA3B,CAAiC,MAAM;AAC5ChB,MAAAA,GAAG,CAACiB,IAAJ,CACG,mBAAkBF,OAAQ,eAAcZ,eAAgB,mFAD3D;AAGD,KAJM,CAAP;AAKD,GARD,CADK,CAAP;AAWD;;AAEDe,MAAM,CAACC,OAAP,GAAiBtB,OAAjB","sourcesContent":["'use strict';\n\nconst open = require('opn');\nconst isAbsoluteUrl = require('is-absolute-url');\n\nfunction runOpen(uri, options, log) {\n  // https://github.com/webpack/webpack-dev-server/issues/1990\n  let openOptions = { wait: false };\n  let openOptionValue = '';\n\n  if (typeof options.open === 'string') {\n    openOptions = Object.assign({}, openOptions, { app: options.open });\n    openOptionValue = `: \"${options.open}\"`;\n  } else if (typeof options.open === 'object') {\n    openOptions = options.open;\n    openOptionValue = `: \"${JSON.stringify(options.open)}\"`;\n  }\n\n  const pages =\n    typeof options.openPage === 'string'\n      ? [options.openPage]\n      : options.openPage || [''];\n\n  return Promise.all(\n    pages.map((page) => {\n      const pageUrl = page && isAbsoluteUrl(page) ? page : `${uri}${page}`;\n\n      return open(pageUrl, openOptions).catch(() => {\n        log.warn(\n          `Unable to open \"${pageUrl}\" in browser${openOptionValue}. If you are running in a headless environment, please do not use the --open flag`\n        );\n      });\n    })\n  );\n}\n\nmodule.exports = runOpen;\n"]},"metadata":{},"sourceType":"script"}