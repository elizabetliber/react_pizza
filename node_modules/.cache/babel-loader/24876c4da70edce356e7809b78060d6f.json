{"ast":null,"code":"\"use strict\";\n\nconst os = require(\"os\");\n\nconst platform = os.platform();\n\nif ([\"android\", \"darwin\", \"freebsd\", \"linux\", \"openbsd\", \"sunos\", \"win32\", \"aix\"].indexOf(platform) !== -1) {\n  let file;\n\n  if (platform === \"aix\") {\n    // AIX `netstat` output is compatible with Solaris\n    file = `${os.type() === \"OS400\" ? \"ibmi\" : \"sunos\"}.js`;\n  } else {\n    file = `${platform}.js`;\n  }\n\n  const m = require(`./${file}`);\n\n  module.exports.v4 = () => m.v4();\n\n  module.exports.v6 = () => m.v6();\n\n  module.exports.v4.sync = () => m.v4.sync();\n\n  module.exports.v6.sync = () => m.v6.sync();\n} else {\n  const unsupported = () => {\n    throw new Error(`Unsupported Platform: ${platform}`);\n  };\n\n  module.exports.v4 = unsupported;\n  module.exports.v6 = unsupported;\n  module.exports.v4.sync = unsupported;\n  module.exports.v6.sync = unsupported;\n}","map":{"version":3,"sources":["/home/lisa/VSProjects/react-pizza/react_pizza/node_modules/default-gateway/index.js"],"names":["os","require","platform","indexOf","file","type","m","module","exports","v4","v6","sync","unsupported","Error"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,QAAQ,GAAGF,EAAE,CAACE,QAAH,EAAjB;;AAEA,IAAI,CACF,SADE,EAEF,QAFE,EAGF,SAHE,EAIF,OAJE,EAKF,SALE,EAMF,OANE,EAOF,OAPE,EAQF,KARE,EASFC,OATE,CASMD,QATN,MASoB,CAAC,CATzB,EAS4B;AAC1B,MAAIE,IAAJ;;AACA,MAAIF,QAAQ,KAAK,KAAjB,EAAwB;AACtB;AACAE,IAAAA,IAAI,GAAI,GAAEJ,EAAE,CAACK,IAAH,OAAc,OAAd,GAAwB,MAAxB,GAAiC,OAAQ,KAAnD;AACD,GAHD,MAGO;AACLD,IAAAA,IAAI,GAAI,GAAEF,QAAS,KAAnB;AACD;;AAED,QAAMI,CAAC,GAAGL,OAAO,CAAE,KAAIG,IAAK,EAAX,CAAjB;;AACAG,EAAAA,MAAM,CAACC,OAAP,CAAeC,EAAf,GAAoB,MAAMH,CAAC,CAACG,EAAF,EAA1B;;AACAF,EAAAA,MAAM,CAACC,OAAP,CAAeE,EAAf,GAAoB,MAAMJ,CAAC,CAACI,EAAF,EAA1B;;AACAH,EAAAA,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkBE,IAAlB,GAAyB,MAAML,CAAC,CAACG,EAAF,CAAKE,IAAL,EAA/B;;AACAJ,EAAAA,MAAM,CAACC,OAAP,CAAeE,EAAf,CAAkBC,IAAlB,GAAyB,MAAML,CAAC,CAACI,EAAF,CAAKC,IAAL,EAA/B;AACD,CAvBD,MAuBO;AACL,QAAMC,WAAW,GAAG,MAAM;AAAE,UAAM,IAAIC,KAAJ,CAAW,yBAAwBX,QAAS,EAA5C,CAAN;AAAuD,GAAnF;;AACAK,EAAAA,MAAM,CAACC,OAAP,CAAeC,EAAf,GAAoBG,WAApB;AACAL,EAAAA,MAAM,CAACC,OAAP,CAAeE,EAAf,GAAoBE,WAApB;AACAL,EAAAA,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkBE,IAAlB,GAAyBC,WAAzB;AACAL,EAAAA,MAAM,CAACC,OAAP,CAAeE,EAAf,CAAkBC,IAAlB,GAAyBC,WAAzB;AACD","sourcesContent":["\"use strict\";\n\nconst os = require(\"os\");\nconst platform = os.platform();\n\nif ([\n  \"android\",\n  \"darwin\",\n  \"freebsd\",\n  \"linux\",\n  \"openbsd\",\n  \"sunos\",\n  \"win32\",\n  \"aix\",\n].indexOf(platform) !== -1) {\n  let file;\n  if (platform === \"aix\") {\n    // AIX `netstat` output is compatible with Solaris\n    file = `${os.type() === \"OS400\" ? \"ibmi\" : \"sunos\"}.js`;\n  } else {\n    file = `${platform}.js`;\n  }\n\n  const m = require(`./${file}`);\n  module.exports.v4 = () => m.v4();\n  module.exports.v6 = () => m.v6();\n  module.exports.v4.sync = () => m.v4.sync();\n  module.exports.v6.sync = () => m.v6.sync();\n} else {\n  const unsupported = () => { throw new Error(`Unsupported Platform: ${platform}`); };\n  module.exports.v4 = unsupported;\n  module.exports.v6 = unsupported;\n  module.exports.v4.sync = unsupported;\n  module.exports.v6.sync = unsupported;\n}\n"]},"metadata":{},"sourceType":"script"}