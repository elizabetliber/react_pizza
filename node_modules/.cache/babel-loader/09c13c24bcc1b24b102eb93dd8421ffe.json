{"ast":null,"code":"var hpack = require('../hpack');\n\nvar utils = hpack.utils;\nvar decoder = hpack.decoder;\nvar table = hpack.table;\nvar assert = utils.assert;\n\nvar inherits = require('inherits');\n\nvar Duplex = require('readable-stream').Duplex;\n\nfunction Decompressor(options) {\n  Duplex.call(this, {\n    readableObjectMode: true\n  });\n  this._decoder = decoder.create();\n  this._table = table.create(options.table);\n}\n\ninherits(Decompressor, Duplex);\nmodule.exports = Decompressor;\n\nDecompressor.create = function create(options) {\n  return new Decompressor(options);\n};\n\nDecompressor.prototype._read = function _read() {// We only push!\n};\n\nDecompressor.prototype._write = function _write(data, enc, cb) {\n  this._decoder.push(data);\n\n  cb(null);\n};\n\nDecompressor.prototype.execute = function execute(cb) {\n  while (!this._decoder.isEmpty()) {\n    try {\n      this._execute();\n    } catch (err) {\n      if (cb) return done(err);else return this.emit('error', err);\n    }\n  }\n\n  if (cb) done(null);\n\n  function done(err) {\n    process.nextTick(function () {\n      cb(err);\n    });\n  }\n};\n\nDecompressor.prototype.updateTableSize = function updateTableSize(size) {\n  this._table.updateSize(size);\n};\n\nDecompressor.prototype._execute = function _execute() {\n  var isIndexed = this._decoder.decodeBit();\n\n  if (isIndexed) return this._processIndexed();\n\n  var isIncremental = this._decoder.decodeBit();\n\n  var neverIndex = 0;\n\n  if (!isIncremental) {\n    var isUpdate = this._decoder.decodeBit();\n\n    if (isUpdate) return this._processUpdate();\n    neverIndex = this._decoder.decodeBit();\n  }\n\n  this._processLiteral(isIncremental, neverIndex);\n};\n\nDecompressor.prototype._processIndexed = function _processIndexed() {\n  var index = this._decoder.decodeInt();\n\n  var lookup = this._table.lookup(index);\n\n  this.push({\n    name: lookup.name,\n    value: lookup.value,\n    neverIndex: false\n  });\n};\n\nDecompressor.prototype._processLiteral = function _processLiteral(inc, never) {\n  var index = this._decoder.decodeInt();\n\n  var name;\n  var nameSize; // Literal header-name too\n\n  if (index === 0) {\n    name = this._decoder.decodeStr();\n    nameSize = name.length;\n    name = utils.stringify(name);\n  } else {\n    var lookup = this._table.lookup(index);\n\n    nameSize = lookup.nameSize;\n    name = lookup.name;\n  }\n\n  var value = this._decoder.decodeStr();\n\n  var valueSize = value.length;\n  value = utils.stringify(value);\n  if (inc) this._table.add(name, value, nameSize, valueSize);\n  this.push({\n    name: name,\n    value: value,\n    neverIndex: never !== 0\n  });\n};\n\nDecompressor.prototype._processUpdate = function _processUpdate() {\n  var size = this._decoder.decodeInt();\n\n  this.updateTableSize(size);\n};","map":{"version":3,"sources":["/home/lisa/VSProjects/react-pizza/react_pizza/node_modules/hpack.js/lib/hpack/decompressor.js"],"names":["hpack","require","utils","decoder","table","assert","inherits","Duplex","Decompressor","options","call","readableObjectMode","_decoder","create","_table","module","exports","prototype","_read","_write","data","enc","cb","push","execute","isEmpty","_execute","err","done","emit","process","nextTick","updateTableSize","size","updateSize","isIndexed","decodeBit","_processIndexed","isIncremental","neverIndex","isUpdate","_processUpdate","_processLiteral","index","decodeInt","lookup","name","value","inc","never","nameSize","decodeStr","length","stringify","valueSize","add"],"mappings":"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","sourcesContent":["var hpack = require('../hpack');\nvar utils = hpack.utils;\nvar decoder = hpack.decoder;\nvar table = hpack.table;\nvar assert = utils.assert;\n\nvar inherits = require('inherits');\nvar Duplex = require('readable-stream').Duplex;\n\nfunction Decompressor(options) {\n  Duplex.call(this, {\n    readableObjectMode: true\n  });\n\n  this._decoder = decoder.create();\n  this._table = table.create(options.table);\n}\ninherits(Decompressor, Duplex);\nmodule.exports = Decompressor;\n\nDecompressor.create = function create(options) {\n  return new Decompressor(options);\n};\n\nDecompressor.prototype._read = function _read() {\n  // We only push!\n};\n\nDecompressor.prototype._write = function _write(data, enc, cb) {\n  this._decoder.push(data);\n\n  cb(null);\n};\n\nDecompressor.prototype.execute = function execute(cb) {\n  while (!this._decoder.isEmpty()) {\n    try {\n      this._execute();\n    } catch (err) {\n      if (cb)\n        return done(err);\n      else\n        return this.emit('error', err);\n    }\n  }\n\n  if (cb)\n    done(null);\n\n  function done(err) {\n    process.nextTick(function() {\n      cb(err);\n    });\n  }\n};\n\nDecompressor.prototype.updateTableSize = function updateTableSize(size) {\n  this._table.updateSize(size);\n};\n\nDecompressor.prototype._execute = function _execute() {\n  var isIndexed = this._decoder.decodeBit();\n  if (isIndexed)\n    return this._processIndexed();\n\n  var isIncremental = this._decoder.decodeBit();\n  var neverIndex = 0;\n  if (!isIncremental) {\n    var isUpdate = this._decoder.decodeBit();\n    if (isUpdate)\n      return this._processUpdate();\n\n    neverIndex = this._decoder.decodeBit();\n  }\n\n  this._processLiteral(isIncremental, neverIndex);\n};\n\nDecompressor.prototype._processIndexed = function _processIndexed() {\n  var index = this._decoder.decodeInt();\n\n  var lookup = this._table.lookup(index);\n  this.push({ name: lookup.name, value: lookup.value, neverIndex: false });\n};\n\nDecompressor.prototype._processLiteral = function _processLiteral(inc, never) {\n  var index = this._decoder.decodeInt();\n\n  var name;\n  var nameSize;\n\n  // Literal header-name too\n  if (index === 0) {\n    name = this._decoder.decodeStr();\n    nameSize = name.length;\n    name = utils.stringify(name);\n  } else {\n    var lookup = this._table.lookup(index);\n    nameSize = lookup.nameSize;\n    name = lookup.name;\n  }\n\n  var value = this._decoder.decodeStr();\n  var valueSize = value.length;\n  value = utils.stringify(value);\n\n  if (inc)\n    this._table.add(name, value, nameSize, valueSize);\n\n  this.push({ name: name, value: value, neverIndex: never !== 0});\n};\n\nDecompressor.prototype._processUpdate = function _processUpdate() {\n  var size = this._decoder.decodeInt();\n  this.updateTableSize(size);\n};\n"]},"metadata":{},"sourceType":"script"}