{"ast":null,"code":"var hpack = require('../hpack');\n\nvar utils = hpack.utils;\nvar assert = utils.assert;\n\nfunction Table(options) {\n  this['static'] = hpack['static-table'];\n  this.dynamic = [];\n  this.size = 0;\n  this.maxSize = 0;\n  this.length = this['static'].table.length;\n  this.protocolMaxSize = options.maxSize;\n  this.maxSize = this.protocolMaxSize;\n  this.lookupDepth = options.lookupDepth || 32;\n}\n\nmodule.exports = Table;\n\nTable.create = function create(options) {\n  return new Table(options);\n};\n\nTable.prototype.lookup = function lookup(index) {\n  assert(index !== 0, 'Zero indexed field');\n  assert(index <= this.length, 'Indexed field OOB');\n  if (index <= this['static'].table.length) return this['static'].table[index - 1];else return this.dynamic[this.length - index];\n};\n\nTable.prototype.reverseLookup = function reverseLookup(name, value) {\n  var staticEntry = this['static'].map[name];\n  if (staticEntry && staticEntry.values[value]) return staticEntry.values[value]; // Reverse search dynamic table (new items are at the end of it)\n\n  var limit = Math.max(0, this.dynamic.length - this.lookupDepth);\n\n  for (var i = this.dynamic.length - 1; i >= limit; i--) {\n    var entry = this.dynamic[i];\n    if (entry.name === name && entry.value === value) return this.length - i;\n\n    if (entry.name === name) {\n      // Prefer smaller index\n      if (staticEntry) break;\n      return -(this.length - i);\n    }\n  }\n\n  if (staticEntry) return -staticEntry.index;\n  return 0;\n};\n\nTable.prototype.add = function add(name, value, nameSize, valueSize) {\n  var totalSize = nameSize + valueSize + 32;\n  this.dynamic.push({\n    name: name,\n    value: value,\n    nameSize: nameSize,\n    totalSize: totalSize\n  });\n  this.size += totalSize;\n  this.length++;\n  this.evict();\n};\n\nTable.prototype.evict = function evict() {\n  while (this.size > this.maxSize) {\n    var entry = this.dynamic.shift();\n    this.size -= entry.totalSize;\n    this.length--;\n  }\n\n  assert(this.size >= 0, 'Table size sanity check failed');\n};\n\nTable.prototype.updateSize = function updateSize(size) {\n  assert(size <= this.protocolMaxSize, 'Table size bigger than maximum');\n  this.maxSize = size;\n  this.evict();\n};","map":{"version":3,"sources":["/home/lisa/VSProjects/react-pizza/react_pizza/node_modules/hpack.js/lib/hpack/table.js"],"names":["hpack","require","utils","assert","Table","options","dynamic","size","maxSize","length","table","protocolMaxSize","lookupDepth","module","exports","create","prototype","lookup","index","reverseLookup","name","value","staticEntry","map","values","limit","Math","max","i","entry","add","nameSize","valueSize","totalSize","push","evict","shift","updateSize"],"mappings":"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","sourcesContent":["var hpack = require('../hpack');\nvar utils = hpack.utils;\nvar assert = utils.assert;\n\nfunction Table(options) {\n  this['static'] = hpack['static-table'];\n  this.dynamic = [];\n  this.size = 0;\n  this.maxSize = 0;\n  this.length = this['static'].table.length;\n  this.protocolMaxSize = options.maxSize;\n  this.maxSize = this.protocolMaxSize;\n  this.lookupDepth = options.lookupDepth || 32;\n}\nmodule.exports = Table;\n\nTable.create = function create(options) {\n  return new Table(options);\n};\n\nTable.prototype.lookup = function lookup(index) {\n  assert(index !== 0, 'Zero indexed field');\n  assert(index <= this.length, 'Indexed field OOB')\n\n  if (index <= this['static'].table.length)\n    return this['static'].table[index - 1];\n  else\n    return this.dynamic[this.length - index];\n};\n\nTable.prototype.reverseLookup = function reverseLookup(name, value) {\n  var staticEntry = this['static'].map[name];\n  if (staticEntry && staticEntry.values[value])\n    return staticEntry.values[value];\n\n  // Reverse search dynamic table (new items are at the end of it)\n  var limit = Math.max(0, this.dynamic.length - this.lookupDepth);\n  for (var i = this.dynamic.length - 1; i >= limit; i--) {\n    var entry = this.dynamic[i];\n    if (entry.name === name && entry.value === value)\n      return this.length - i;\n\n    if (entry.name === name) {\n      // Prefer smaller index\n      if (staticEntry)\n        break;\n      return -(this.length - i);\n    }\n  }\n\n  if (staticEntry)\n    return -staticEntry.index;\n\n  return 0;\n};\n\nTable.prototype.add = function add(name, value, nameSize, valueSize) {\n  var totalSize = nameSize + valueSize + 32;\n\n  this.dynamic.push({\n    name: name,\n    value: value,\n    nameSize: nameSize,\n    totalSize: totalSize\n  });\n  this.size += totalSize;\n  this.length++;\n\n  this.evict();\n};\n\nTable.prototype.evict = function evict() {\n  while (this.size > this.maxSize) {\n    var entry = this.dynamic.shift();\n    this.size -= entry.totalSize;\n    this.length--;\n  }\n  assert(this.size >= 0, 'Table size sanity check failed');\n};\n\nTable.prototype.updateSize = function updateSize(size) {\n  assert(size <= this.protocolMaxSize, 'Table size bigger than maximum');\n  this.maxSize = size;\n  this.evict();\n};\n"]},"metadata":{},"sourceType":"script"}