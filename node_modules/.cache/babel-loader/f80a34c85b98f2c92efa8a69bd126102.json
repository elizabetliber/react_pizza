{"ast":null,"code":"'use strict';\n\nconst selfsigned = require('selfsigned');\n\nfunction createCertificate(attributes) {\n  return selfsigned.generate(attributes, {\n    algorithm: 'sha256',\n    days: 30,\n    keySize: 2048,\n    extensions: [// {\n    //   name: 'basicConstraints',\n    //   cA: true,\n    // },\n    {\n      name: 'keyUsage',\n      keyCertSign: true,\n      digitalSignature: true,\n      nonRepudiation: true,\n      keyEncipherment: true,\n      dataEncipherment: true\n    }, {\n      name: 'extKeyUsage',\n      serverAuth: true,\n      clientAuth: true,\n      codeSigning: true,\n      timeStamping: true\n    }, {\n      name: 'subjectAltName',\n      altNames: [{\n        // type 2 is DNS\n        type: 2,\n        value: 'localhost'\n      }, {\n        type: 2,\n        value: 'localhost.localdomain'\n      }, {\n        type: 2,\n        value: 'lvh.me'\n      }, {\n        type: 2,\n        value: '*.lvh.me'\n      }, {\n        type: 2,\n        value: '[::1]'\n      }, {\n        // type 7 is IP\n        type: 7,\n        ip: '127.0.0.1'\n      }, {\n        type: 7,\n        ip: 'fe80::1'\n      }]\n    }]\n  });\n}\n\nmodule.exports = createCertificate;","map":{"version":3,"sources":["/home/lisa/VSProjects/react-pizza/react_pizza/node_modules/webpack-dev-server/lib/utils/createCertificate.js"],"names":["selfsigned","require","createCertificate","attributes","generate","algorithm","days","keySize","extensions","name","keyCertSign","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","serverAuth","clientAuth","codeSigning","timeStamping","altNames","type","value","ip","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAEA,SAASC,iBAAT,CAA2BC,UAA3B,EAAuC;AACrC,SAAOH,UAAU,CAACI,QAAX,CAAoBD,UAApB,EAAgC;AACrCE,IAAAA,SAAS,EAAE,QAD0B;AAErCC,IAAAA,IAAI,EAAE,EAF+B;AAGrCC,IAAAA,OAAO,EAAE,IAH4B;AAIrCC,IAAAA,UAAU,EAAE,CACV;AACA;AACA;AACA;AACA;AACEC,MAAAA,IAAI,EAAE,UADR;AAEEC,MAAAA,WAAW,EAAE,IAFf;AAGEC,MAAAA,gBAAgB,EAAE,IAHpB;AAIEC,MAAAA,cAAc,EAAE,IAJlB;AAKEC,MAAAA,eAAe,EAAE,IALnB;AAMEC,MAAAA,gBAAgB,EAAE;AANpB,KALU,EAaV;AACEL,MAAAA,IAAI,EAAE,aADR;AAEEM,MAAAA,UAAU,EAAE,IAFd;AAGEC,MAAAA,UAAU,EAAE,IAHd;AAIEC,MAAAA,WAAW,EAAE,IAJf;AAKEC,MAAAA,YAAY,EAAE;AALhB,KAbU,EAoBV;AACET,MAAAA,IAAI,EAAE,gBADR;AAEEU,MAAAA,QAAQ,EAAE,CACR;AACE;AACAC,QAAAA,IAAI,EAAE,CAFR;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADQ,EAMR;AACED,QAAAA,IAAI,EAAE,CADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OANQ,EAUR;AACED,QAAAA,IAAI,EAAE,CADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAVQ,EAcR;AACED,QAAAA,IAAI,EAAE,CADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAdQ,EAkBR;AACED,QAAAA,IAAI,EAAE,CADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAlBQ,EAsBR;AACE;AACAD,QAAAA,IAAI,EAAE,CAFR;AAGEE,QAAAA,EAAE,EAAE;AAHN,OAtBQ,EA2BR;AACEF,QAAAA,IAAI,EAAE,CADR;AAEEE,QAAAA,EAAE,EAAE;AAFN,OA3BQ;AAFZ,KApBU;AAJyB,GAAhC,CAAP;AA6DD;;AAEDC,MAAM,CAACC,OAAP,GAAiBtB,iBAAjB","sourcesContent":["'use strict';\n\nconst selfsigned = require('selfsigned');\n\nfunction createCertificate(attributes) {\n  return selfsigned.generate(attributes, {\n    algorithm: 'sha256',\n    days: 30,\n    keySize: 2048,\n    extensions: [\n      // {\n      //   name: 'basicConstraints',\n      //   cA: true,\n      // },\n      {\n        name: 'keyUsage',\n        keyCertSign: true,\n        digitalSignature: true,\n        nonRepudiation: true,\n        keyEncipherment: true,\n        dataEncipherment: true,\n      },\n      {\n        name: 'extKeyUsage',\n        serverAuth: true,\n        clientAuth: true,\n        codeSigning: true,\n        timeStamping: true,\n      },\n      {\n        name: 'subjectAltName',\n        altNames: [\n          {\n            // type 2 is DNS\n            type: 2,\n            value: 'localhost',\n          },\n          {\n            type: 2,\n            value: 'localhost.localdomain',\n          },\n          {\n            type: 2,\n            value: 'lvh.me',\n          },\n          {\n            type: 2,\n            value: '*.lvh.me',\n          },\n          {\n            type: 2,\n            value: '[::1]',\n          },\n          {\n            // type 7 is IP\n            type: 7,\n            ip: '127.0.0.1',\n          },\n          {\n            type: 7,\n            ip: 'fe80::1',\n          },\n        ],\n      },\n    ],\n  });\n}\n\nmodule.exports = createCertificate;\n"]},"metadata":{},"sourceType":"script"}