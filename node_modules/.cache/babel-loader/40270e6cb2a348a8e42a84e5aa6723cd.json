{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var GenericReceiver,\n      MAP,\n      ResponseReceiver,\n      Session,\n      SockJSConnection,\n      Transport,\n      closeFrame,\n      register,\n      stream,\n      utils,\n      uuidv4,\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  stream = require('stream');\n  uuidv4 = require('uuid/v4');\n  utils = require('./utils');\n\n  Transport = function () {\n    function Transport() {}\n\n    return Transport;\n  }();\n\n  Transport.CONNECTING = 0;\n  Transport.OPEN = 1;\n  Transport.CLOSING = 2;\n  Transport.CLOSED = 3;\n\n  closeFrame = function (status, reason) {\n    return 'c' + JSON.stringify([status, reason]);\n  };\n\n  SockJSConnection = function (superClass) {\n    extend(SockJSConnection, superClass);\n\n    function SockJSConnection(_session) {\n      this._session = _session;\n      this.id = uuidv4();\n      this.headers = {};\n      this.prefix = this._session.prefix;\n    }\n\n    SockJSConnection.prototype.toString = function () {\n      return '<SockJSConnection ' + this.id + '>';\n    };\n\n    SockJSConnection.prototype.write = function (string) {\n      return this._session.send('' + string);\n    };\n\n    SockJSConnection.prototype.end = function (string) {\n      if (string) {\n        this.write(string);\n      }\n\n      this.close();\n      return null;\n    };\n\n    SockJSConnection.prototype.close = function (code, reason) {\n      return this._session.close(code, reason);\n    };\n\n    SockJSConnection.prototype.destroy = function () {\n      this.end();\n      return this.removeAllListeners();\n    };\n\n    SockJSConnection.prototype.destroySoon = function () {\n      return this.destroy();\n    };\n\n    return SockJSConnection;\n  }(stream.Stream);\n\n  SockJSConnection.prototype.__defineGetter__('readable', function () {\n    return this._session.readyState === Transport.OPEN;\n  });\n\n  SockJSConnection.prototype.__defineGetter__('writable', function () {\n    return this._session.readyState === Transport.OPEN;\n  });\n\n  SockJSConnection.prototype.__defineGetter__('readyState', function () {\n    return this._session.readyState;\n  });\n\n  MAP = {};\n\n  Session = function () {\n    function Session(session_id1, server) {\n      this.session_id = session_id1;\n      this.heartbeat_delay = server.options.heartbeat_delay;\n      this.disconnect_delay = server.options.disconnect_delay;\n      this.prefix = server.options.prefix;\n      this.send_buffer = [];\n      this.is_closing = false;\n      this.readyState = Transport.CONNECTING;\n\n      if (this.session_id) {\n        MAP[this.session_id] = this;\n      }\n\n      this.timeout_cb = function (_this) {\n        return function () {\n          return _this.didTimeout();\n        };\n      }(this);\n\n      this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n      this.connection = new SockJSConnection(this);\n\n      this.emit_open = function (_this) {\n        return function () {\n          _this.emit_open = null;\n          return server.emit('connection', _this.connection);\n        };\n      }(this);\n    }\n\n    Session.prototype.register = function (req, recv) {\n      if (this.recv) {\n        recv.doSendFrame(closeFrame(2010, \"Another connection still open\"));\n        recv.didClose();\n        return;\n      }\n\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n        this.to_tref = null;\n      }\n\n      if (this.readyState === Transport.CLOSING) {\n        this.flushToRecv(recv);\n        recv.doSendFrame(this.close_frame);\n        recv.didClose();\n        this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n        return;\n      }\n\n      this.recv = recv;\n      this.recv.session = this;\n      this.decorateConnection(req);\n\n      if (this.readyState === Transport.CONNECTING) {\n        this.recv.doSendFrame('o');\n        this.readyState = Transport.OPEN;\n        process.nextTick(this.emit_open);\n      }\n\n      if (!this.recv) {\n        return;\n      }\n\n      this.tryFlush();\n    };\n\n    Session.prototype.decorateConnection = function (req) {\n      var address, headers, i, key, len, ref, remoteAddress, remotePort, socket, x;\n\n      if (!(socket = this.recv.connection)) {\n        socket = this.recv.response.connection;\n      }\n\n      try {\n        remoteAddress = socket.remoteAddress;\n        remotePort = socket.remotePort;\n        address = socket.address();\n      } catch (error) {\n        x = error;\n      }\n\n      if (remoteAddress) {\n        this.connection.remoteAddress = remoteAddress;\n        this.connection.remotePort = remotePort;\n        this.connection.address = address;\n      }\n\n      this.connection.url = req.url;\n      this.connection.pathname = req.pathname;\n      this.connection.protocol = this.recv.protocol;\n      headers = {};\n      ref = ['referer', 'x-client-ip', 'x-forwarded-for', 'x-forwarded-host', 'x-forwarded-port', 'x-cluster-client-ip', 'via', 'x-real-ip', 'x-forwarded-proto', 'x-ssl', 'dnt', 'host', 'user-agent', 'accept-language'];\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        key = ref[i];\n\n        if (req.headers[key]) {\n          headers[key] = req.headers[key];\n        }\n      }\n\n      if (headers) {\n        return this.connection.headers = headers;\n      }\n    };\n\n    Session.prototype.unregister = function () {\n      var delay;\n      delay = this.recv.delay_disconnect;\n      this.recv.session = null;\n      this.recv = null;\n\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n      }\n\n      if (delay) {\n        return this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n      } else {\n        return this.timeout_cb();\n      }\n    };\n\n    Session.prototype.flushToRecv = function (recv) {\n      var ref, sb;\n\n      if (this.send_buffer.length > 0) {\n        ref = [this.send_buffer, []], sb = ref[0], this.send_buffer = ref[1];\n        recv.doSendBulk(sb);\n        return true;\n      }\n\n      return false;\n    };\n\n    Session.prototype.tryFlush = function () {\n      var x;\n\n      if (!this.flushToRecv(this.recv) || !this.to_tref) {\n        if (this.to_tref) {\n          clearTimeout(this.to_tref);\n        }\n\n        x = function (_this) {\n          return function () {\n            if (_this.recv) {\n              _this.to_tref = setTimeout(x, _this.heartbeat_delay);\n              return _this.recv.heartbeat();\n            }\n          };\n        }(this);\n\n        this.to_tref = setTimeout(x, this.heartbeat_delay);\n      }\n    };\n\n    Session.prototype.didTimeout = function () {\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n        this.to_tref = null;\n      }\n\n      if (this.readyState !== Transport.CONNECTING && this.readyState !== Transport.OPEN && this.readyState !== Transport.CLOSING) {\n        throw Error('INVALID_STATE_ERR');\n      }\n\n      if (this.recv) {\n        throw Error('RECV_STILL_THERE');\n      }\n\n      this.readyState = Transport.CLOSED;\n      this.connection.emit('end');\n      this.connection.emit('close');\n      this.connection = null;\n\n      if (this.session_id) {\n        delete MAP[this.session_id];\n        return this.session_id = null;\n      }\n    };\n\n    Session.prototype.didMessage = function (payload) {\n      if (this.readyState === Transport.OPEN) {\n        this.connection.emit('data', payload);\n      }\n    };\n\n    Session.prototype.send = function (payload) {\n      if (this.readyState !== Transport.OPEN) {\n        return false;\n      }\n\n      this.send_buffer.push('' + payload);\n\n      if (this.recv) {\n        this.tryFlush();\n      }\n\n      return true;\n    };\n\n    Session.prototype.close = function (status, reason) {\n      if (status == null) {\n        status = 1000;\n      }\n\n      if (reason == null) {\n        reason = \"Normal closure\";\n      }\n\n      if (this.readyState !== Transport.OPEN) {\n        return false;\n      }\n\n      this.readyState = Transport.CLOSING;\n      this.close_frame = closeFrame(status, reason);\n\n      if (this.recv) {\n        this.recv.doSendFrame(this.close_frame);\n\n        if (this.recv) {\n          this.recv.didClose();\n        }\n\n        if (this.recv) {\n          this.unregister();\n        }\n      }\n\n      return true;\n    };\n\n    return Session;\n  }();\n\n  Session.bySessionId = function (session_id) {\n    if (!session_id) {\n      return null;\n    }\n\n    return MAP[session_id] || null;\n  };\n\n  register = function (req, server, session_id, receiver) {\n    var session;\n    session = Session.bySessionId(session_id);\n\n    if (!session) {\n      session = new Session(session_id, server);\n    }\n\n    session.register(req, receiver);\n    return session;\n  };\n\n  exports.register = function (req, server, receiver) {\n    return register(req, server, req.session, receiver);\n  };\n\n  exports.registerNoSession = function (req, server, receiver) {\n    return register(req, server, void 0, receiver);\n  };\n\n  GenericReceiver = function () {\n    function GenericReceiver(thingy) {\n      this.thingy = thingy;\n      this.setUp(this.thingy);\n    }\n\n    GenericReceiver.prototype.setUp = function () {\n      this.thingy_end_cb = function (_this) {\n        return function () {\n          return _this.didAbort();\n        };\n      }(this);\n\n      this.thingy.addListener('close', this.thingy_end_cb);\n      return this.thingy.addListener('end', this.thingy_end_cb);\n    };\n\n    GenericReceiver.prototype.tearDown = function () {\n      this.thingy.removeListener('close', this.thingy_end_cb);\n      this.thingy.removeListener('end', this.thingy_end_cb);\n      return this.thingy_end_cb = null;\n    };\n\n    GenericReceiver.prototype.didAbort = function () {\n      this.delay_disconnect = false;\n      return this.didClose();\n    };\n\n    GenericReceiver.prototype.didClose = function () {\n      if (this.thingy) {\n        this.tearDown(this.thingy);\n        this.thingy = null;\n      }\n\n      if (this.session) {\n        return this.session.unregister();\n      }\n    };\n\n    GenericReceiver.prototype.doSendBulk = function (messages) {\n      var m, q_msgs;\n\n      q_msgs = function () {\n        var i, len, results;\n        results = [];\n\n        for (i = 0, len = messages.length; i < len; i++) {\n          m = messages[i];\n          results.push(utils.quote(m));\n        }\n\n        return results;\n      }();\n\n      return this.doSendFrame('a' + '[' + q_msgs.join(',') + ']');\n    };\n\n    GenericReceiver.prototype.heartbeat = function () {\n      return this.doSendFrame('h');\n    };\n\n    return GenericReceiver;\n  }();\n\n  ResponseReceiver = function (superClass) {\n    extend(ResponseReceiver, superClass);\n    ResponseReceiver.prototype.max_response_size = void 0;\n    ResponseReceiver.prototype.delay_disconnect = true;\n\n    function ResponseReceiver(request, response, options) {\n      var x;\n      this.request = request;\n      this.response = response;\n      this.options = options;\n      this.curr_response_size = 0;\n\n      try {\n        this.request.connection.setKeepAlive(true, 5000);\n      } catch (error) {\n        x = error;\n      }\n\n      ResponseReceiver.__super__.constructor.call(this, this.request.connection);\n\n      if (this.max_response_size === void 0) {\n        this.max_response_size = this.options.response_limit;\n      }\n    }\n\n    ResponseReceiver.prototype.doSendFrame = function (payload) {\n      var r, x;\n      this.curr_response_size += payload.length;\n      r = false;\n\n      try {\n        this.response.write(payload);\n        r = true;\n      } catch (error) {\n        x = error;\n      }\n\n      if (this.max_response_size && this.curr_response_size >= this.max_response_size) {\n        this.didClose();\n      }\n\n      return r;\n    };\n\n    ResponseReceiver.prototype.didClose = function () {\n      var x;\n\n      ResponseReceiver.__super__.didClose.apply(this, arguments);\n\n      try {\n        this.response.end();\n      } catch (error) {\n        x = error;\n      }\n\n      return this.response = null;\n    };\n\n    return ResponseReceiver;\n  }(GenericReceiver);\n\n  exports.GenericReceiver = GenericReceiver;\n  exports.Transport = Transport;\n  exports.Session = Session;\n  exports.ResponseReceiver = ResponseReceiver;\n  exports.SockJSConnection = SockJSConnection;\n}).call(this);","map":{"version":3,"sources":["/home/lisa/VSProjects/react-pizza/react_pizza/node_modules/sockjs/lib/transport.js"],"names":["GenericReceiver","MAP","ResponseReceiver","Session","SockJSConnection","Transport","closeFrame","register","stream","utils","uuidv4","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","CONNECTING","OPEN","CLOSING","CLOSED","status","reason","JSON","stringify","superClass","_session","id","headers","prefix","toString","write","string","send","end","close","code","destroy","removeAllListeners","destroySoon","Stream","__defineGetter__","readyState","session_id1","server","session_id","heartbeat_delay","options","disconnect_delay","send_buffer","is_closing","timeout_cb","_this","didTimeout","to_tref","setTimeout","connection","emit_open","emit","req","recv","doSendFrame","didClose","clearTimeout","flushToRecv","close_frame","session","decorateConnection","process","nextTick","tryFlush","address","i","len","ref","remoteAddress","remotePort","socket","x","response","error","url","pathname","protocol","length","unregister","delay","delay_disconnect","sb","doSendBulk","heartbeat","Error","didMessage","payload","push","bySessionId","receiver","exports","registerNoSession","thingy","setUp","thingy_end_cb","didAbort","addListener","tearDown","removeListener","messages","m","q_msgs","results","quote","join","max_response_size","request","curr_response_size","setKeepAlive","response_limit","r","apply","arguments"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var GenericReceiver, MAP, ResponseReceiver, Session, SockJSConnection, Transport, closeFrame, register, stream, utils, uuidv4,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  stream = require('stream');\n\n  uuidv4 = require('uuid/v4');\n\n  utils = require('./utils');\n\n  Transport = (function() {\n    function Transport() {}\n\n    return Transport;\n\n  })();\n\n  Transport.CONNECTING = 0;\n\n  Transport.OPEN = 1;\n\n  Transport.CLOSING = 2;\n\n  Transport.CLOSED = 3;\n\n  closeFrame = function(status, reason) {\n    return 'c' + JSON.stringify([status, reason]);\n  };\n\n  SockJSConnection = (function(superClass) {\n    extend(SockJSConnection, superClass);\n\n    function SockJSConnection(_session) {\n      this._session = _session;\n      this.id = uuidv4();\n      this.headers = {};\n      this.prefix = this._session.prefix;\n    }\n\n    SockJSConnection.prototype.toString = function() {\n      return '<SockJSConnection ' + this.id + '>';\n    };\n\n    SockJSConnection.prototype.write = function(string) {\n      return this._session.send('' + string);\n    };\n\n    SockJSConnection.prototype.end = function(string) {\n      if (string) {\n        this.write(string);\n      }\n      this.close();\n      return null;\n    };\n\n    SockJSConnection.prototype.close = function(code, reason) {\n      return this._session.close(code, reason);\n    };\n\n    SockJSConnection.prototype.destroy = function() {\n      this.end();\n      return this.removeAllListeners();\n    };\n\n    SockJSConnection.prototype.destroySoon = function() {\n      return this.destroy();\n    };\n\n    return SockJSConnection;\n\n  })(stream.Stream);\n\n  SockJSConnection.prototype.__defineGetter__('readable', function() {\n    return this._session.readyState === Transport.OPEN;\n  });\n\n  SockJSConnection.prototype.__defineGetter__('writable', function() {\n    return this._session.readyState === Transport.OPEN;\n  });\n\n  SockJSConnection.prototype.__defineGetter__('readyState', function() {\n    return this._session.readyState;\n  });\n\n  MAP = {};\n\n  Session = (function() {\n    function Session(session_id1, server) {\n      this.session_id = session_id1;\n      this.heartbeat_delay = server.options.heartbeat_delay;\n      this.disconnect_delay = server.options.disconnect_delay;\n      this.prefix = server.options.prefix;\n      this.send_buffer = [];\n      this.is_closing = false;\n      this.readyState = Transport.CONNECTING;\n      if (this.session_id) {\n        MAP[this.session_id] = this;\n      }\n      this.timeout_cb = (function(_this) {\n        return function() {\n          return _this.didTimeout();\n        };\n      })(this);\n      this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n      this.connection = new SockJSConnection(this);\n      this.emit_open = (function(_this) {\n        return function() {\n          _this.emit_open = null;\n          return server.emit('connection', _this.connection);\n        };\n      })(this);\n    }\n\n    Session.prototype.register = function(req, recv) {\n      if (this.recv) {\n        recv.doSendFrame(closeFrame(2010, \"Another connection still open\"));\n        recv.didClose();\n        return;\n      }\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n        this.to_tref = null;\n      }\n      if (this.readyState === Transport.CLOSING) {\n        this.flushToRecv(recv);\n        recv.doSendFrame(this.close_frame);\n        recv.didClose();\n        this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n        return;\n      }\n      this.recv = recv;\n      this.recv.session = this;\n      this.decorateConnection(req);\n      if (this.readyState === Transport.CONNECTING) {\n        this.recv.doSendFrame('o');\n        this.readyState = Transport.OPEN;\n        process.nextTick(this.emit_open);\n      }\n      if (!this.recv) {\n        return;\n      }\n      this.tryFlush();\n    };\n\n    Session.prototype.decorateConnection = function(req) {\n      var address, headers, i, key, len, ref, remoteAddress, remotePort, socket, x;\n      if (!(socket = this.recv.connection)) {\n        socket = this.recv.response.connection;\n      }\n      try {\n        remoteAddress = socket.remoteAddress;\n        remotePort = socket.remotePort;\n        address = socket.address();\n      } catch (error) {\n        x = error;\n      }\n      if (remoteAddress) {\n        this.connection.remoteAddress = remoteAddress;\n        this.connection.remotePort = remotePort;\n        this.connection.address = address;\n      }\n      this.connection.url = req.url;\n      this.connection.pathname = req.pathname;\n      this.connection.protocol = this.recv.protocol;\n      headers = {};\n      ref = ['referer', 'x-client-ip', 'x-forwarded-for', 'x-forwarded-host', 'x-forwarded-port', 'x-cluster-client-ip', 'via', 'x-real-ip', 'x-forwarded-proto', 'x-ssl', 'dnt', 'host', 'user-agent', 'accept-language'];\n      for (i = 0, len = ref.length; i < len; i++) {\n        key = ref[i];\n        if (req.headers[key]) {\n          headers[key] = req.headers[key];\n        }\n      }\n      if (headers) {\n        return this.connection.headers = headers;\n      }\n    };\n\n    Session.prototype.unregister = function() {\n      var delay;\n      delay = this.recv.delay_disconnect;\n      this.recv.session = null;\n      this.recv = null;\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n      }\n      if (delay) {\n        return this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n      } else {\n        return this.timeout_cb();\n      }\n    };\n\n    Session.prototype.flushToRecv = function(recv) {\n      var ref, sb;\n      if (this.send_buffer.length > 0) {\n        ref = [this.send_buffer, []], sb = ref[0], this.send_buffer = ref[1];\n        recv.doSendBulk(sb);\n        return true;\n      }\n      return false;\n    };\n\n    Session.prototype.tryFlush = function() {\n      var x;\n      if (!this.flushToRecv(this.recv) || !this.to_tref) {\n        if (this.to_tref) {\n          clearTimeout(this.to_tref);\n        }\n        x = (function(_this) {\n          return function() {\n            if (_this.recv) {\n              _this.to_tref = setTimeout(x, _this.heartbeat_delay);\n              return _this.recv.heartbeat();\n            }\n          };\n        })(this);\n        this.to_tref = setTimeout(x, this.heartbeat_delay);\n      }\n    };\n\n    Session.prototype.didTimeout = function() {\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n        this.to_tref = null;\n      }\n      if (this.readyState !== Transport.CONNECTING && this.readyState !== Transport.OPEN && this.readyState !== Transport.CLOSING) {\n        throw Error('INVALID_STATE_ERR');\n      }\n      if (this.recv) {\n        throw Error('RECV_STILL_THERE');\n      }\n      this.readyState = Transport.CLOSED;\n      this.connection.emit('end');\n      this.connection.emit('close');\n      this.connection = null;\n      if (this.session_id) {\n        delete MAP[this.session_id];\n        return this.session_id = null;\n      }\n    };\n\n    Session.prototype.didMessage = function(payload) {\n      if (this.readyState === Transport.OPEN) {\n        this.connection.emit('data', payload);\n      }\n    };\n\n    Session.prototype.send = function(payload) {\n      if (this.readyState !== Transport.OPEN) {\n        return false;\n      }\n      this.send_buffer.push('' + payload);\n      if (this.recv) {\n        this.tryFlush();\n      }\n      return true;\n    };\n\n    Session.prototype.close = function(status, reason) {\n      if (status == null) {\n        status = 1000;\n      }\n      if (reason == null) {\n        reason = \"Normal closure\";\n      }\n      if (this.readyState !== Transport.OPEN) {\n        return false;\n      }\n      this.readyState = Transport.CLOSING;\n      this.close_frame = closeFrame(status, reason);\n      if (this.recv) {\n        this.recv.doSendFrame(this.close_frame);\n        if (this.recv) {\n          this.recv.didClose();\n        }\n        if (this.recv) {\n          this.unregister();\n        }\n      }\n      return true;\n    };\n\n    return Session;\n\n  })();\n\n  Session.bySessionId = function(session_id) {\n    if (!session_id) {\n      return null;\n    }\n    return MAP[session_id] || null;\n  };\n\n  register = function(req, server, session_id, receiver) {\n    var session;\n    session = Session.bySessionId(session_id);\n    if (!session) {\n      session = new Session(session_id, server);\n    }\n    session.register(req, receiver);\n    return session;\n  };\n\n  exports.register = function(req, server, receiver) {\n    return register(req, server, req.session, receiver);\n  };\n\n  exports.registerNoSession = function(req, server, receiver) {\n    return register(req, server, void 0, receiver);\n  };\n\n  GenericReceiver = (function() {\n    function GenericReceiver(thingy) {\n      this.thingy = thingy;\n      this.setUp(this.thingy);\n    }\n\n    GenericReceiver.prototype.setUp = function() {\n      this.thingy_end_cb = (function(_this) {\n        return function() {\n          return _this.didAbort();\n        };\n      })(this);\n      this.thingy.addListener('close', this.thingy_end_cb);\n      return this.thingy.addListener('end', this.thingy_end_cb);\n    };\n\n    GenericReceiver.prototype.tearDown = function() {\n      this.thingy.removeListener('close', this.thingy_end_cb);\n      this.thingy.removeListener('end', this.thingy_end_cb);\n      return this.thingy_end_cb = null;\n    };\n\n    GenericReceiver.prototype.didAbort = function() {\n      this.delay_disconnect = false;\n      return this.didClose();\n    };\n\n    GenericReceiver.prototype.didClose = function() {\n      if (this.thingy) {\n        this.tearDown(this.thingy);\n        this.thingy = null;\n      }\n      if (this.session) {\n        return this.session.unregister();\n      }\n    };\n\n    GenericReceiver.prototype.doSendBulk = function(messages) {\n      var m, q_msgs;\n      q_msgs = (function() {\n        var i, len, results;\n        results = [];\n        for (i = 0, len = messages.length; i < len; i++) {\n          m = messages[i];\n          results.push(utils.quote(m));\n        }\n        return results;\n      })();\n      return this.doSendFrame('a' + '[' + q_msgs.join(',') + ']');\n    };\n\n    GenericReceiver.prototype.heartbeat = function() {\n      return this.doSendFrame('h');\n    };\n\n    return GenericReceiver;\n\n  })();\n\n  ResponseReceiver = (function(superClass) {\n    extend(ResponseReceiver, superClass);\n\n    ResponseReceiver.prototype.max_response_size = void 0;\n\n    ResponseReceiver.prototype.delay_disconnect = true;\n\n    function ResponseReceiver(request, response, options) {\n      var x;\n      this.request = request;\n      this.response = response;\n      this.options = options;\n      this.curr_response_size = 0;\n      try {\n        this.request.connection.setKeepAlive(true, 5000);\n      } catch (error) {\n        x = error;\n      }\n      ResponseReceiver.__super__.constructor.call(this, this.request.connection);\n      if (this.max_response_size === void 0) {\n        this.max_response_size = this.options.response_limit;\n      }\n    }\n\n    ResponseReceiver.prototype.doSendFrame = function(payload) {\n      var r, x;\n      this.curr_response_size += payload.length;\n      r = false;\n      try {\n        this.response.write(payload);\n        r = true;\n      } catch (error) {\n        x = error;\n      }\n      if (this.max_response_size && this.curr_response_size >= this.max_response_size) {\n        this.didClose();\n      }\n      return r;\n    };\n\n    ResponseReceiver.prototype.didClose = function() {\n      var x;\n      ResponseReceiver.__super__.didClose.apply(this, arguments);\n      try {\n        this.response.end();\n      } catch (error) {\n        x = error;\n      }\n      return this.response = null;\n    };\n\n    return ResponseReceiver;\n\n  })(GenericReceiver);\n\n  exports.GenericReceiver = GenericReceiver;\n\n  exports.Transport = Transport;\n\n  exports.Session = Session;\n\n  exports.ResponseReceiver = ResponseReceiver;\n\n  exports.SockJSConnection = SockJSConnection;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}