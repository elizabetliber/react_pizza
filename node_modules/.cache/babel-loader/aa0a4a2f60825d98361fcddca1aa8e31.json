{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar StreamReader = function () {\n  this._queue = [];\n  this._queueSize = 0;\n  this._offset = 0;\n};\n\nStreamReader.prototype.put = function (buffer) {\n  if (!buffer || buffer.length === 0) return;\n  if (!Buffer.isBuffer(buffer)) buffer = Buffer.from(buffer);\n\n  this._queue.push(buffer);\n\n  this._queueSize += buffer.length;\n};\n\nStreamReader.prototype.read = function (length) {\n  if (length > this._queueSize) return null;\n  if (length === 0) return Buffer.alloc(0);\n  this._queueSize -= length;\n  var queue = this._queue,\n      remain = length,\n      first = queue[0],\n      buffers,\n      buffer;\n\n  if (first.length >= length) {\n    if (first.length === length) {\n      return queue.shift();\n    } else {\n      buffer = first.slice(0, length);\n      queue[0] = first.slice(length);\n      return buffer;\n    }\n  }\n\n  for (var i = 0, n = queue.length; i < n; i++) {\n    if (remain < queue[i].length) break;\n    remain -= queue[i].length;\n  }\n\n  buffers = queue.splice(0, i);\n\n  if (remain > 0 && queue.length > 0) {\n    buffers.push(queue[0].slice(0, remain));\n    queue[0] = queue[0].slice(remain);\n  }\n\n  return Buffer.concat(buffers, length);\n};\n\nStreamReader.prototype.eachByte = function (callback, context) {\n  var buffer, n, index;\n\n  while (this._queue.length > 0) {\n    buffer = this._queue[0];\n    n = buffer.length;\n\n    while (this._offset < n) {\n      index = this._offset;\n      this._offset += 1;\n      callback.call(context, buffer[index]);\n    }\n\n    this._offset = 0;\n\n    this._queue.shift();\n  }\n};\n\nmodule.exports = StreamReader;","map":{"version":3,"sources":["/home/lisa/VSProjects/react-pizza/react_pizza/node_modules/websocket-driver/lib/websocket/driver/stream_reader.js"],"names":["Buffer","require","StreamReader","_queue","_queueSize","_offset","prototype","put","buffer","length","isBuffer","from","push","read","alloc","queue","remain","first","buffers","shift","slice","i","n","splice","concat","eachByte","callback","context","index","call","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar StreamReader = function() {\n  this._queue     = [];\n  this._queueSize = 0;\n  this._offset    = 0;\n};\n\nStreamReader.prototype.put = function(buffer) {\n  if (!buffer || buffer.length === 0) return;\n  if (!Buffer.isBuffer(buffer)) buffer = Buffer.from(buffer);\n  this._queue.push(buffer);\n  this._queueSize += buffer.length;\n};\n\nStreamReader.prototype.read = function(length) {\n  if (length > this._queueSize) return null;\n  if (length === 0) return Buffer.alloc(0);\n\n  this._queueSize -= length;\n\n  var queue  = this._queue,\n      remain = length,\n      first  = queue[0],\n      buffers, buffer;\n\n  if (first.length >= length) {\n    if (first.length === length) {\n      return queue.shift();\n    } else {\n      buffer = first.slice(0, length);\n      queue[0] = first.slice(length);\n      return buffer;\n    }\n  }\n\n  for (var i = 0, n = queue.length; i < n; i++) {\n    if (remain < queue[i].length) break;\n    remain -= queue[i].length;\n  }\n  buffers = queue.splice(0, i);\n\n  if (remain > 0 && queue.length > 0) {\n    buffers.push(queue[0].slice(0, remain));\n    queue[0] = queue[0].slice(remain);\n  }\n  return Buffer.concat(buffers, length);\n};\n\nStreamReader.prototype.eachByte = function(callback, context) {\n  var buffer, n, index;\n\n  while (this._queue.length > 0) {\n    buffer = this._queue[0];\n    n = buffer.length;\n\n    while (this._offset < n) {\n      index = this._offset;\n      this._offset += 1;\n      callback.call(context, buffer[index]);\n    }\n    this._offset = 0;\n    this._queue.shift();\n  }\n};\n\nmodule.exports = StreamReader;\n"]},"metadata":{},"sourceType":"script"}