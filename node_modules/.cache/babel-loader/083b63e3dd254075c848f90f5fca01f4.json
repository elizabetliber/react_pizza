{"ast":null,"code":"'use strict';\n\nvar Cell = require('./cell'),\n    Pledge = require('./pledge');\n\nvar Pipeline = function (sessions) {\n  this._cells = sessions.map(function (session) {\n    return new Cell(session);\n  });\n  this._stopped = {\n    incoming: false,\n    outgoing: false\n  };\n};\n\nPipeline.prototype.processIncomingMessage = function (message, callback, context) {\n  if (this._stopped.incoming) return;\n\n  this._loop('incoming', this._cells.length - 1, -1, -1, message, callback, context);\n};\n\nPipeline.prototype.processOutgoingMessage = function (message, callback, context) {\n  if (this._stopped.outgoing) return;\n\n  this._loop('outgoing', 0, this._cells.length, 1, message, callback, context);\n};\n\nPipeline.prototype.close = function (callback, context) {\n  this._stopped = {\n    incoming: true,\n    outgoing: true\n  };\n\n  var closed = this._cells.map(function (a) {\n    return a.close();\n  });\n\n  if (callback) Pledge.all(closed).then(function () {\n    callback.call(context);\n  });\n};\n\nPipeline.prototype._loop = function (direction, start, end, step, message, callback, context) {\n  var cells = this._cells,\n      n = cells.length,\n      self = this;\n\n  while (n--) cells[n].pending(direction);\n\n  var pipe = function (index, error, msg) {\n    if (index === end) return callback.call(context, error, msg);\n    cells[index][direction](error, msg, function (err, m) {\n      if (err) self._stopped[direction] = true;\n      pipe(index + step, err, m);\n    });\n  };\n\n  pipe(start, null, message);\n};\n\nmodule.exports = Pipeline;","map":{"version":3,"sources":["/home/lisa/VSProjects/react-pizza/react_pizza/node_modules/websocket-extensions/lib/pipeline/index.js"],"names":["Cell","require","Pledge","Pipeline","sessions","_cells","map","session","_stopped","incoming","outgoing","prototype","processIncomingMessage","message","callback","context","_loop","length","processOutgoingMessage","close","closed","a","all","then","call","direction","start","end","step","cells","n","self","pending","pipe","index","error","msg","err","m","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Cell   = require('./cell'),\n    Pledge = require('./pledge');\n\nvar Pipeline = function(sessions) {\n  this._cells   = sessions.map(function(session) { return new Cell(session) });\n  this._stopped = { incoming: false, outgoing: false };\n};\n\nPipeline.prototype.processIncomingMessage = function(message, callback, context) {\n  if (this._stopped.incoming) return;\n  this._loop('incoming', this._cells.length - 1, -1, -1, message, callback, context);\n};\n\nPipeline.prototype.processOutgoingMessage = function(message, callback, context) {\n  if (this._stopped.outgoing) return;\n  this._loop('outgoing', 0, this._cells.length, 1, message, callback, context);\n};\n\nPipeline.prototype.close = function(callback, context) {\n  this._stopped = { incoming: true, outgoing: true };\n\n  var closed = this._cells.map(function(a) { return a.close() });\n  if (callback)\n    Pledge.all(closed).then(function() { callback.call(context) });\n};\n\nPipeline.prototype._loop = function(direction, start, end, step, message, callback, context) {\n  var cells = this._cells,\n      n     = cells.length,\n      self  = this;\n\n  while (n--) cells[n].pending(direction);\n\n  var pipe = function(index, error, msg) {\n    if (index === end) return callback.call(context, error, msg);\n\n    cells[index][direction](error, msg, function(err, m) {\n      if (err) self._stopped[direction] = true;\n      pipe(index + step, err, m);\n    });\n  };\n  pipe(start, null, message);\n};\n\nmodule.exports = Pipeline;\n"]},"metadata":{},"sourceType":"script"}