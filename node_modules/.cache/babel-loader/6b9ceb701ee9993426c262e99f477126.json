{"ast":null,"code":"\"use strict\";\n\nconst net = require(\"net\");\n\nconst execa = require(\"execa\");\n\nconst args = {\n  v4: [\"-4\", \"r\"],\n  v6: [\"-6\", \"r\"]\n};\n\nconst parse = stdout => {\n  let result;\n  (stdout || \"\").trim().split(\"\\n\").some(line => {\n    const results = /default via (.+?) dev (.+?)( |$)/.exec(line) || [];\n    const gateway = results[1];\n    const iface = results[2];\n\n    if (gateway && net.isIP(gateway)) {\n      result = {\n        gateway,\n        interface: iface ? iface : null\n      };\n      return true;\n    }\n  });\n\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n\n  return result;\n};\n\nconst promise = family => {\n  return execa.stdout(\"ip\", args[family]).then(stdout => {\n    return parse(stdout);\n  });\n};\n\nconst sync = family => {\n  const result = execa.sync(\"ip\", args[family]);\n  return parse(result.stdout);\n};\n\nmodule.exports.v4 = () => promise(\"v4\");\n\nmodule.exports.v6 = () => promise(\"v6\");\n\nmodule.exports.v4.sync = () => sync(\"v4\");\n\nmodule.exports.v6.sync = () => sync(\"v6\");","map":{"version":3,"sources":["/home/lisa/VSProjects/react-pizza/react_pizza/node_modules/default-gateway/android.js"],"names":["net","require","execa","args","v4","v6","parse","stdout","result","trim","split","some","line","results","exec","gateway","iface","isIP","interface","Error","promise","family","then","sync","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAME,IAAI,GAAG;AACXC,EAAAA,EAAE,EAAE,CAAC,IAAD,EAAO,GAAP,CADO;AAEXC,EAAAA,EAAE,EAAE,CAAC,IAAD,EAAO,GAAP;AAFO,CAAb;;AAKA,MAAMC,KAAK,GAAGC,MAAM,IAAI;AACtB,MAAIC,MAAJ;AAEA,GAACD,MAAM,IAAI,EAAX,EAAeE,IAAf,GAAsBC,KAAtB,CAA4B,IAA5B,EAAkCC,IAAlC,CAAuCC,IAAI,IAAI;AAC7C,UAAMC,OAAO,GAAG,mCAAmCC,IAAnC,CAAwCF,IAAxC,KAAiD,EAAjE;AACA,UAAMG,OAAO,GAAGF,OAAO,CAAC,CAAD,CAAvB;AACA,UAAMG,KAAK,GAAGH,OAAO,CAAC,CAAD,CAArB;;AACA,QAAIE,OAAO,IAAIf,GAAG,CAACiB,IAAJ,CAASF,OAAT,CAAf,EAAkC;AAChCP,MAAAA,MAAM,GAAG;AAACO,QAAAA,OAAD;AAAUG,QAAAA,SAAS,EAAGF,KAAK,GAAGA,KAAH,GAAW;AAAtC,OAAT;AACA,aAAO,IAAP;AACD;AACF,GARD;;AAUA,MAAI,CAACR,MAAL,EAAa;AACX,UAAM,IAAIW,KAAJ,CAAU,qCAAV,CAAN;AACD;;AAED,SAAOX,MAAP;AACD,CAlBD;;AAoBA,MAAMY,OAAO,GAAGC,MAAM,IAAI;AACxB,SAAOnB,KAAK,CAACK,MAAN,CAAa,IAAb,EAAmBJ,IAAI,CAACkB,MAAD,CAAvB,EAAiCC,IAAjC,CAAsCf,MAAM,IAAI;AACrD,WAAOD,KAAK,CAACC,MAAD,CAAZ;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,MAAMgB,IAAI,GAAGF,MAAM,IAAI;AACrB,QAAMb,MAAM,GAAGN,KAAK,CAACqB,IAAN,CAAW,IAAX,EAAiBpB,IAAI,CAACkB,MAAD,CAArB,CAAf;AACA,SAAOf,KAAK,CAACE,MAAM,CAACD,MAAR,CAAZ;AACD,CAHD;;AAKAiB,MAAM,CAACC,OAAP,CAAerB,EAAf,GAAoB,MAAMgB,OAAO,CAAC,IAAD,CAAjC;;AACAI,MAAM,CAACC,OAAP,CAAepB,EAAf,GAAoB,MAAMe,OAAO,CAAC,IAAD,CAAjC;;AAEAI,MAAM,CAACC,OAAP,CAAerB,EAAf,CAAkBmB,IAAlB,GAAyB,MAAMA,IAAI,CAAC,IAAD,CAAnC;;AACAC,MAAM,CAACC,OAAP,CAAepB,EAAf,CAAkBkB,IAAlB,GAAyB,MAAMA,IAAI,CAAC,IAAD,CAAnC","sourcesContent":["\"use strict\";\n\nconst net = require(\"net\");\nconst execa = require(\"execa\");\n\nconst args = {\n  v4: [\"-4\", \"r\"],\n  v6: [\"-6\", \"r\"],\n};\n\nconst parse = stdout => {\n  let result;\n\n  (stdout || \"\").trim().split(\"\\n\").some(line => {\n    const results = /default via (.+?) dev (.+?)( |$)/.exec(line) || [];\n    const gateway = results[1];\n    const iface = results[2];\n    if (gateway && net.isIP(gateway)) {\n      result = {gateway, interface: (iface ? iface : null)};\n      return true;\n    }\n  });\n\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n\n  return result;\n};\n\nconst promise = family => {\n  return execa.stdout(\"ip\", args[family]).then(stdout => {\n    return parse(stdout);\n  });\n};\n\nconst sync = family => {\n  const result = execa.sync(\"ip\", args[family]);\n  return parse(result.stdout);\n};\n\nmodule.exports.v4 = () => promise(\"v4\");\nmodule.exports.v6 = () => promise(\"v6\");\n\nmodule.exports.v4.sync = () => sync(\"v4\");\nmodule.exports.v6.sync = () => sync(\"v6\");\n"]},"metadata":{},"sourceType":"script"}