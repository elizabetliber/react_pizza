{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar transport = require('../spdy-transport');\n\nvar debug = {\n  server: require('debug')('spdy:connection:server'),\n  client: require('debug')('spdy:connection:client')\n};\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar Stream = transport.Stream;\n\nfunction Connection(socket, options) {\n  EventEmitter.call(this);\n  var state = {};\n  this._spdyState = state; // NOTE: There's a big trick here. Connection is used as a `this` argument\n  // to the wrapped `connection` event listener.\n  // socket end doesn't necessarly mean connection drop\n\n  this.httpAllowHalfOpen = true;\n  state.timeout = new transport.utils.Timeout(this); // Protocol info\n\n  state.protocol = transport.protocol[options.protocol];\n  state.version = null;\n  state.constants = state.protocol.constants;\n  state.pair = null;\n  state.isServer = options.isServer; // Root of priority tree (i.e. stream id = 0)\n\n  state.priorityRoot = new transport.Priority({\n    defaultWeight: state.constants.DEFAULT_WEIGHT,\n    maxCount: transport.protocol.base.constants.MAX_PRIORITY_STREAMS\n  }); // Defaults\n\n  state.maxStreams = options.maxStreams || state.constants.MAX_CONCURRENT_STREAMS;\n  state.autoSpdy31 = options.protocol.name !== 'h2' && options.autoSpdy31;\n  state.acceptPush = options.acceptPush === undefined ? !state.isServer : options.acceptPush;\n\n  if (options.maxChunk === false) {\n    state.maxChunk = Infinity;\n  } else if (options.maxChunk === undefined) {\n    state.maxChunk = transport.protocol.base.constants.DEFAULT_MAX_CHUNK;\n  } else {\n    state.maxChunk = options.maxChunk;\n  } // Connection-level flow control\n\n\n  var windowSize = options.windowSize || 1 << 20;\n  state.window = new transport.Window({\n    id: 0,\n    isServer: state.isServer,\n    recv: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    },\n    send: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    }\n  }); // It starts with DEFAULT_WINDOW, update must be sent to change it on client\n\n  state.window.recv.setMax(windowSize); // Boilerplate for Stream constructor\n\n  state.streamWindow = new transport.Window({\n    id: -1,\n    isServer: state.isServer,\n    recv: {\n      size: windowSize,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    },\n    send: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    }\n  }); // Various state info\n\n  state.pool = state.protocol.compressionPool.create(options.headerCompression);\n  state.counters = {\n    push: 0,\n    stream: 0\n  }; // Init streams list\n\n  state.stream = {\n    map: {},\n    count: 0,\n    nextId: state.isServer ? 2 : 1,\n    lastId: {\n      both: 0,\n      received: 0\n    }\n  };\n  state.ping = {\n    nextId: state.isServer ? 2 : 1,\n    map: {}\n  };\n  state.goaway = false; // Debug\n\n  state.debug = state.isServer ? debug.server : debug.client; // X-Forwarded feature\n\n  state.xForward = null; // Create parser and hole for framer\n\n  state.parser = state.protocol.parser.create({\n    // NOTE: needed to distinguish ping from ping ACK in SPDY\n    isServer: state.isServer,\n    window: state.window\n  });\n  state.framer = state.protocol.framer.create({\n    window: state.window,\n    timeout: state.timeout\n  }); // SPDY has PUSH enabled on servers\n\n  if (state.protocol.name === 'spdy') {\n    state.framer.enablePush(state.isServer);\n  }\n\n  if (!state.isServer) {\n    state.parser.skipPreface();\n  }\n\n  this.socket = socket;\n\n  this._init();\n}\n\nutil.inherits(Connection, EventEmitter);\nexports.Connection = Connection;\n\nConnection.create = function create(socket, options) {\n  return new Connection(socket, options);\n};\n\nConnection.prototype._init = function init() {\n  var self = this;\n  var state = this._spdyState;\n  var pool = state.pool; // Initialize session window\n\n  state.window.recv.on('drain', function () {\n    self._onSessionWindowDrain();\n  }); // Initialize parser\n\n  state.parser.on('data', function (frame) {\n    self._handleFrame(frame);\n  });\n  state.parser.once('version', function (version) {\n    self._onVersion(version);\n  }); // Propagate parser errors\n\n  state.parser.on('error', function (err) {\n    self._onParserError(err);\n  }); // Propagate framer errors\n\n  state.framer.on('error', function (err) {\n    self.emit('error', err);\n  });\n  this.socket.pipe(state.parser);\n  state.framer.pipe(this.socket); // Allow high-level api to catch socket errors\n\n  this.socket.on('error', function onSocketError(e) {\n    self.emit('error', e);\n  });\n  this.socket.once('close', function onclose(hadError) {\n    var err;\n\n    if (hadError) {\n      err = new Error('socket hang up');\n      err.code = 'ECONNRESET';\n    }\n\n    self.destroyStreams(err);\n    self.emit('close');\n\n    if (state.pair) {\n      pool.put(state.pair);\n    }\n\n    state.framer.resume();\n  }); // Reset timeout on close\n\n  this.once('close', function () {\n    self.setTimeout(0);\n  });\n\n  function _onWindowOverflow() {\n    self._onWindowOverflow();\n  }\n\n  state.window.recv.on('overflow', _onWindowOverflow);\n  state.window.send.on('overflow', _onWindowOverflow); // Do not allow half-open connections\n\n  this.socket.allowHalfOpen = false;\n};\n\nConnection.prototype._onVersion = function _onVersion(version) {\n  var state = this._spdyState;\n  var prev = state.version;\n  var parser = state.parser;\n  var framer = state.framer;\n  var pool = state.pool;\n  state.version = version;\n  state.debug('id=0 version=%d', version); // Ignore transition to 3.1\n\n  if (!prev) {\n    state.pair = pool.get(version);\n    parser.setCompression(state.pair);\n    framer.setCompression(state.pair);\n  }\n\n  framer.setVersion(version);\n\n  if (!state.isServer) {\n    framer.prefaceFrame();\n\n    if (state.xForward !== null) {\n      framer.xForwardedFor({\n        host: state.xForward\n      });\n    }\n  } // Send preface+settings frame (once)\n\n\n  framer.settingsFrame({\n    max_header_list_size: state.constants.DEFAULT_MAX_HEADER_LIST_SIZE,\n    max_concurrent_streams: state.maxStreams,\n    enable_push: state.acceptPush ? 1 : 0,\n    initial_window_size: state.window.recv.max\n  }); // Update session window\n\n  if (state.version >= 3.1 || state.isServer && state.autoSpdy31) {\n    this._onSessionWindowDrain();\n  }\n\n  this.emit('version', version);\n};\n\nConnection.prototype._onParserError = function _onParserError(err) {\n  var state = this._spdyState; // Prevent further errors\n\n  state.parser.kill(); // Send GOAWAY\n\n  if (err instanceof transport.protocol.base.utils.ProtocolError) {\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: err.code,\n      extra: err.message,\n      send: true\n    });\n  }\n\n  this.emit('error', err);\n};\n\nConnection.prototype._handleFrame = function _handleFrame(frame) {\n  var state = this._spdyState;\n  state.debug('id=0 frame', frame);\n  state.timeout.reset(); // For testing purposes\n\n  this.emit('frame', frame);\n  var stream; // Session window update\n\n  if (frame.type === 'WINDOW_UPDATE' && frame.id === 0) {\n    if (state.version < 3.1 && state.autoSpdy31) {\n      state.debug('id=0 switch version to 3.1');\n      state.version = 3.1;\n      this.emit('version', 3.1);\n    }\n\n    state.window.send.update(frame.delta);\n    return;\n  }\n\n  if (state.isServer && frame.type === 'PUSH_PROMISE') {\n    state.debug('id=0 server PUSH_PROMISE');\n\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: 'PROTOCOL_ERROR',\n      send: true\n    });\n\n    return;\n  }\n\n  if (!stream && frame.id !== undefined) {\n    // Load created one\n    stream = state.stream.map[frame.id]; // Fail if not found\n\n    if (!stream && frame.type !== 'HEADERS' && frame.type !== 'PRIORITY' && frame.type !== 'RST') {\n      // Other side should destroy the stream upon receiving GOAWAY\n      if (this._isGoaway(frame.id)) {\n        return;\n      }\n\n      state.debug('id=0 stream=%d not found', frame.id);\n      state.framer.rstFrame({\n        id: frame.id,\n        code: 'INVALID_STREAM'\n      });\n      return;\n    }\n  } // Create new stream\n\n\n  if (!stream && frame.type === 'HEADERS') {\n    this._handleHeaders(frame);\n\n    return;\n  }\n\n  if (stream) {\n    stream._handleFrame(frame);\n  } else if (frame.type === 'SETTINGS') {\n    this._handleSettings(frame.settings);\n  } else if (frame.type === 'ACK_SETTINGS') {// TODO(indutny): handle it one day\n  } else if (frame.type === 'PING') {\n    this._handlePing(frame);\n  } else if (frame.type === 'GOAWAY') {\n    this._handleGoaway(frame);\n  } else if (frame.type === 'X_FORWARDED_FOR') {\n    // Set X-Forwarded-For only once\n    if (state.xForward === null) {\n      state.xForward = frame.host;\n    }\n  } else if (frame.type === 'PRIORITY') {// TODO(indutny): handle this\n  } else {\n    state.debug('id=0 unknown frame type: %s', frame.type);\n  }\n};\n\nConnection.prototype._onWindowOverflow = function _onWindowOverflow() {\n  var state = this._spdyState;\n  state.debug('id=0 window overflow');\n\n  this._goaway({\n    lastId: state.stream.lastId.both,\n    code: 'FLOW_CONTROL_ERROR',\n    send: true\n  });\n};\n\nConnection.prototype._isGoaway = function _isGoaway(id) {\n  var state = this._spdyState;\n\n  if (state.goaway !== false && state.goaway < id) {\n    return true;\n  }\n\n  return false;\n};\n\nConnection.prototype._getId = function _getId() {\n  var state = this._spdyState;\n  var id = state.stream.nextId;\n  state.stream.nextId += 2;\n  return id;\n};\n\nConnection.prototype._createStream = function _createStream(uri) {\n  var state = this._spdyState;\n  var id = uri.id;\n\n  if (id === undefined) {\n    id = this._getId();\n  }\n\n  var isGoaway = this._isGoaway(id);\n\n  if (uri.push && !state.acceptPush) {\n    state.debug('id=0 push disabled promisedId=%d', id); // Fatal error\n\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: 'PROTOCOL_ERROR',\n      send: true\n    });\n\n    isGoaway = true;\n  }\n\n  var stream = new Stream(this, {\n    id: id,\n    request: uri.request !== false,\n    method: uri.method,\n    path: uri.path,\n    host: uri.host,\n    priority: uri.priority,\n    headers: uri.headers,\n    parent: uri.parent,\n    readable: !isGoaway && uri.readable,\n    writable: !isGoaway && uri.writable\n  });\n  var self = this; // Just an empty stream for API consistency\n\n  if (isGoaway) {\n    return stream;\n  }\n\n  state.stream.lastId.both = Math.max(state.stream.lastId.both, id);\n  state.debug('id=0 add stream=%d', stream.id);\n  state.stream.map[stream.id] = stream;\n  state.stream.count++;\n  state.counters.stream++;\n\n  if (stream.parent !== null) {\n    state.counters.push++;\n  }\n\n  stream.once('close', function () {\n    self._removeStream(stream);\n  });\n  return stream;\n};\n\nConnection.prototype._handleHeaders = function _handleHeaders(frame) {\n  var state = this._spdyState; // Must be HEADERS frame after stream close\n\n  if (frame.id <= state.stream.lastId.received) {\n    return;\n  } // Someone is using our ids!\n\n\n  if ((frame.id + state.stream.nextId) % 2 === 0) {\n    state.framer.rstFrame({\n      id: frame.id,\n      code: 'PROTOCOL_ERROR'\n    });\n    return;\n  }\n\n  var stream = this._createStream({\n    id: frame.id,\n    request: false,\n    method: frame.headers[':method'],\n    path: frame.headers[':path'],\n    host: frame.headers[':authority'],\n    priority: frame.priority,\n    headers: frame.headers,\n    writable: frame.writable\n  }); // GOAWAY\n\n\n  if (this._isGoaway(stream.id)) {\n    return;\n  }\n\n  state.stream.lastId.received = Math.max(state.stream.lastId.received, stream.id); // TODO(indutny) handle stream limit\n\n  if (!this.emit('stream', stream)) {\n    // No listeners was set - abort the stream\n    stream.abort();\n    return;\n  } // Create fake frame to simulate end of the data\n\n\n  if (frame.fin) {\n    stream._handleFrame({\n      type: 'FIN',\n      fin: true\n    });\n  }\n\n  return stream;\n};\n\nConnection.prototype._onSessionWindowDrain = function _onSessionWindowDrain() {\n  var state = this._spdyState;\n\n  if (state.version < 3.1 && !(state.isServer && state.autoSpdy31)) {\n    return;\n  }\n\n  var delta = state.window.recv.getDelta();\n\n  if (delta === 0) {\n    return;\n  }\n\n  state.debug('id=0 session window drain, update by %d', delta);\n  state.framer.windowUpdateFrame({\n    id: 0,\n    delta: delta\n  });\n  state.window.recv.update(delta);\n};\n\nConnection.prototype.start = function start(version) {\n  this._spdyState.parser.setVersion(version);\n}; // Mostly for testing\n\n\nConnection.prototype.getVersion = function getVersion() {\n  return this._spdyState.version;\n};\n\nConnection.prototype._handleSettings = function _handleSettings(settings) {\n  var state = this._spdyState;\n  state.framer.ackSettingsFrame();\n\n  this._setDefaultWindow(settings);\n\n  if (settings.max_frame_size) {\n    state.framer.setMaxFrameSize(settings.max_frame_size);\n  } // TODO(indutny): handle max_header_list_size\n\n\n  if (settings.header_table_size) {\n    try {\n      state.pair.compress.updateTableSize(settings.header_table_size);\n    } catch (e) {\n      this._goaway({\n        lastId: 0,\n        code: 'PROTOCOL_ERROR',\n        send: true\n      });\n\n      return;\n    }\n  } // HTTP2 clients needs to enable PUSH streams explicitly\n\n\n  if (state.protocol.name !== 'spdy') {\n    if (settings.enable_push === undefined) {\n      state.framer.enablePush(state.isServer);\n    } else {\n      state.framer.enablePush(settings.enable_push === 1);\n    }\n  } // TODO(indutny): handle max_concurrent_streams\n\n};\n\nConnection.prototype._setDefaultWindow = function _setDefaultWindow(settings) {\n  if (settings.initial_window_size === undefined) {\n    return;\n  }\n\n  var state = this._spdyState; // Update defaults\n\n  var window = state.streamWindow;\n  window.send.setMax(settings.initial_window_size); // Update existing streams\n\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id];\n    var window = stream._spdyState.window;\n    window.send.updateMax(settings.initial_window_size);\n  });\n};\n\nConnection.prototype._handlePing = function handlePing(frame) {\n  var self = this;\n  var state = this._spdyState; // Handle incoming PING\n\n  if (!frame.ack) {\n    state.framer.pingFrame({\n      opaque: frame.opaque,\n      ack: true\n    });\n    self.emit('ping', frame.opaque);\n    return;\n  } // Handle reply PING\n\n\n  var hex = frame.opaque.toString('hex');\n\n  if (!state.ping.map[hex]) {\n    return;\n  }\n\n  var ping = state.ping.map[hex];\n  delete state.ping.map[hex];\n\n  if (ping.cb) {\n    ping.cb(null);\n  }\n};\n\nConnection.prototype._handleGoaway = function handleGoaway(frame) {\n  this._goaway({\n    lastId: frame.lastId,\n    code: frame.code,\n    send: false\n  });\n};\n\nConnection.prototype.ping = function ping(callback) {\n  var state = this._spdyState; // HTTP2 is using 8-byte opaque\n\n  var opaque = Buffer.alloc(state.constants.PING_OPAQUE_SIZE);\n  opaque.fill(0);\n  opaque.writeUInt32BE(state.ping.nextId, opaque.length - 4);\n  state.ping.nextId += 2;\n  state.ping.map[opaque.toString('hex')] = {\n    cb: callback\n  };\n  state.framer.pingFrame({\n    opaque: opaque,\n    ack: false\n  });\n};\n\nConnection.prototype.getCounter = function getCounter(name) {\n  return this._spdyState.counters[name];\n};\n\nConnection.prototype.reserveStream = function reserveStream(uri, callback) {\n  var stream = this._createStream(uri); // GOAWAY\n\n\n  if (this._isGoaway(stream.id)) {\n    var err = new Error('Can\\'t send request after GOAWAY');\n    process.nextTick(function () {\n      if (callback) {\n        callback(err);\n      } else {\n        stream.emit('error', err);\n      }\n    });\n    return stream;\n  }\n\n  if (callback) {\n    process.nextTick(function () {\n      callback(null, stream);\n    });\n  }\n\n  return stream;\n};\n\nConnection.prototype.request = function request(uri, callback) {\n  var stream = this.reserveStream(uri, function (err) {\n    if (err) {\n      if (callback) {\n        callback(err);\n      } else {\n        stream.emit('error', err);\n      }\n\n      return;\n    }\n\n    if (stream._wasSent()) {\n      if (callback) {\n        callback(null, stream);\n      }\n\n      return;\n    }\n\n    stream.send(function (err) {\n      if (err) {\n        if (callback) {\n          return callback(err);\n        } else {\n          return stream.emit('error', err);\n        }\n      }\n\n      if (callback) {\n        callback(null, stream);\n      }\n    });\n  });\n  return stream;\n};\n\nConnection.prototype._removeStream = function _removeStream(stream) {\n  var state = this._spdyState;\n  state.debug('id=0 remove stream=%d', stream.id);\n  delete state.stream.map[stream.id];\n  state.stream.count--;\n\n  if (state.stream.count === 0) {\n    this.emit('_streamDrain');\n  }\n};\n\nConnection.prototype._goaway = function _goaway(params) {\n  var state = this._spdyState;\n  var self = this;\n  state.goaway = params.lastId;\n  state.debug('id=0 goaway from=%d', state.goaway);\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id]; // Abort every stream started after GOAWAY\n\n    if (stream.id <= params.lastId) {\n      return;\n    }\n\n    stream.abort();\n    stream.emit('error', new Error('New stream after GOAWAY'));\n  });\n\n  function finish() {\n    // Destroy socket if there are no streams\n    if (state.stream.count === 0 || params.code !== 'OK') {\n      // No further frames should be processed\n      state.parser.kill();\n      process.nextTick(function () {\n        var err = new Error('Fatal error: ' + params.code);\n\n        self._onStreamDrain(err);\n      });\n      return;\n    }\n\n    self.on('_streamDrain', self._onStreamDrain);\n  }\n\n  if (params.send) {\n    // Make sure that GOAWAY frame is sent before dumping framer\n    state.framer.goawayFrame({\n      lastId: params.lastId,\n      code: params.code,\n      extra: params.extra\n    }, finish);\n  } else {\n    finish();\n  }\n};\n\nConnection.prototype._onStreamDrain = function _onStreamDrain(error) {\n  var state = this._spdyState;\n  state.debug('id=0 _onStreamDrain');\n  state.framer.dump();\n  state.framer.unpipe(this.socket);\n  state.framer.resume();\n\n  if (this.socket.destroySoon) {\n    this.socket.destroySoon();\n  }\n\n  this.emit('close', error);\n};\n\nConnection.prototype.end = function end(callback) {\n  var state = this._spdyState;\n\n  if (callback) {\n    this.once('close', callback);\n  }\n\n  this._goaway({\n    lastId: state.stream.lastId.both,\n    code: 'OK',\n    send: true\n  });\n};\n\nConnection.prototype.destroyStreams = function destroyStreams(err) {\n  var state = this._spdyState;\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id];\n    stream.destroy();\n\n    if (err) {\n      stream.emit('error', err);\n    }\n  });\n};\n\nConnection.prototype.isServer = function isServer() {\n  return this._spdyState.isServer;\n};\n\nConnection.prototype.getXForwardedFor = function getXForwardFor() {\n  return this._spdyState.xForward;\n};\n\nConnection.prototype.sendXForwardedFor = function sendXForwardedFor(host) {\n  var state = this._spdyState;\n\n  if (state.version !== null) {\n    state.framer.xForwardedFor({\n      host: host\n    });\n  } else {\n    state.xForward = host;\n  }\n};\n\nConnection.prototype.pushPromise = function pushPromise(parent, uri, callback) {\n  var state = this._spdyState;\n\n  var stream = this._createStream({\n    request: false,\n    parent: parent,\n    method: uri.method,\n    path: uri.path,\n    host: uri.host,\n    priority: uri.priority,\n    headers: uri.headers,\n    readable: false\n  });\n\n  var err; // TODO(indutny): deduplicate this logic somehow\n\n  if (this._isGoaway(stream.id)) {\n    err = new Error('Can\\'t send PUSH_PROMISE after GOAWAY');\n    process.nextTick(function () {\n      if (callback) {\n        callback(err);\n      } else {\n        stream.emit('error', err);\n      }\n    });\n    return stream;\n  }\n\n  if (uri.push && !state.acceptPush) {\n    err = new Error('Can\\'t send PUSH_PROMISE, other side won\\'t accept it');\n    process.nextTick(function () {\n      if (callback) {\n        callback(err);\n      } else {\n        stream.emit('error', err);\n      }\n    });\n    return stream;\n  }\n\n  stream._sendPush(uri.status, uri.response, function (err) {\n    if (!callback) {\n      if (err) {\n        stream.emit('error', err);\n      }\n\n      return;\n    }\n\n    if (err) {\n      return callback(err);\n    }\n\n    callback(null, stream);\n  });\n\n  return stream;\n};\n\nConnection.prototype.setTimeout = function setTimeout(delay, callback) {\n  var state = this._spdyState;\n  state.timeout.set(delay, callback);\n};","map":{"version":3,"sources":["/home/lisa/VSProjects/react-pizza/react_pizza/node_modules/spdy-transport/lib/spdy-transport/connection.js"],"names":["util","require","transport","debug","server","client","EventEmitter","Stream","Connection","socket","options","call","state","_spdyState","httpAllowHalfOpen","timeout","utils","Timeout","protocol","version","constants","pair","isServer","priorityRoot","Priority","defaultWeight","DEFAULT_WEIGHT","maxCount","base","MAX_PRIORITY_STREAMS","maxStreams","MAX_CONCURRENT_STREAMS","autoSpdy31","name","acceptPush","undefined","maxChunk","Infinity","DEFAULT_MAX_CHUNK","windowSize","window","Window","id","recv","size","DEFAULT_WINDOW","max","MAX_INITIAL_WINDOW_SIZE","send","setMax","streamWindow","pool","compressionPool","create","headerCompression","counters","push","stream","map","count","nextId","lastId","both","received","ping","goaway","xForward","parser","framer","enablePush","skipPreface","_init","inherits","exports","prototype","init","self","on","_onSessionWindowDrain","frame","_handleFrame","once","_onVersion","err","_onParserError","emit","pipe","onSocketError","e","onclose","hadError","Error","code","destroyStreams","put","resume","setTimeout","_onWindowOverflow","allowHalfOpen","prev","get","setCompression","setVersion","prefaceFrame","xForwardedFor","host","settingsFrame","max_header_list_size","DEFAULT_MAX_HEADER_LIST_SIZE","max_concurrent_streams","enable_push","initial_window_size","kill","ProtocolError","_goaway","extra","message","reset","type","update","delta","_isGoaway","rstFrame","_handleHeaders","_handleSettings","settings","_handlePing","_handleGoaway","_getId","_createStream","uri","isGoaway","request","method","path","priority","headers","parent","readable","writable","Math","_removeStream","abort","fin","getDelta","windowUpdateFrame","start","getVersion","ackSettingsFrame","_setDefaultWindow","max_frame_size","setMaxFrameSize","header_table_size","compress","updateTableSize","Object","keys","forEach","updateMax","handlePing","ack","pingFrame","opaque","hex","toString","cb","handleGoaway","callback","Buffer","alloc","PING_OPAQUE_SIZE","fill","writeUInt32BE","length","getCounter","reserveStream","process","nextTick","_wasSent","params","finish","_onStreamDrain","goawayFrame","error","dump","unpipe","destroySoon","end","destroy","getXForwardedFor","getXForwardFor","sendXForwardedFor","pushPromise","_sendPush","status","response","delay","set"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAvB;;AAEA,IAAIE,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAEH,OAAO,CAAC,OAAD,CAAP,CAAiB,wBAAjB,CADE;AAEVI,EAAAA,MAAM,EAAEJ,OAAO,CAAC,OAAD,CAAP,CAAiB,wBAAjB;AAFE,CAAZ;;AAIA,IAAIK,YAAY,GAAGL,OAAO,CAAC,QAAD,CAAP,CAAkBK,YAArC;;AAEA,IAAIC,MAAM,GAAGL,SAAS,CAACK,MAAvB;;AAEA,SAASC,UAAT,CAAqBC,MAArB,EAA6BC,OAA7B,EAAsC;AACpCJ,EAAAA,YAAY,CAACK,IAAb,CAAkB,IAAlB;AAEA,MAAIC,KAAK,GAAG,EAAZ;AACA,OAAKC,UAAL,GAAkBD,KAAlB,CAJoC,CAMpC;AACA;AACA;;AACA,OAAKE,iBAAL,GAAyB,IAAzB;AAEAF,EAAAA,KAAK,CAACG,OAAN,GAAgB,IAAIb,SAAS,CAACc,KAAV,CAAgBC,OAApB,CAA4B,IAA5B,CAAhB,CAXoC,CAapC;;AACAL,EAAAA,KAAK,CAACM,QAAN,GAAiBhB,SAAS,CAACgB,QAAV,CAAmBR,OAAO,CAACQ,QAA3B,CAAjB;AACAN,EAAAA,KAAK,CAACO,OAAN,GAAgB,IAAhB;AACAP,EAAAA,KAAK,CAACQ,SAAN,GAAkBR,KAAK,CAACM,QAAN,CAAeE,SAAjC;AACAR,EAAAA,KAAK,CAACS,IAAN,GAAa,IAAb;AACAT,EAAAA,KAAK,CAACU,QAAN,GAAiBZ,OAAO,CAACY,QAAzB,CAlBoC,CAoBpC;;AACAV,EAAAA,KAAK,CAACW,YAAN,GAAqB,IAAIrB,SAAS,CAACsB,QAAd,CAAuB;AAC1CC,IAAAA,aAAa,EAAEb,KAAK,CAACQ,SAAN,CAAgBM,cADW;AAE1CC,IAAAA,QAAQ,EAAEzB,SAAS,CAACgB,QAAV,CAAmBU,IAAnB,CAAwBR,SAAxB,CAAkCS;AAFF,GAAvB,CAArB,CArBoC,CA0BpC;;AACAjB,EAAAA,KAAK,CAACkB,UAAN,GAAmBpB,OAAO,CAACoB,UAAR,IACAlB,KAAK,CAACQ,SAAN,CAAgBW,sBADnC;AAGAnB,EAAAA,KAAK,CAACoB,UAAN,GAAmBtB,OAAO,CAACQ,QAAR,CAAiBe,IAAjB,KAA0B,IAA1B,IAAkCvB,OAAO,CAACsB,UAA7D;AACApB,EAAAA,KAAK,CAACsB,UAAN,GAAmBxB,OAAO,CAACwB,UAAR,KAAuBC,SAAvB,GACf,CAACvB,KAAK,CAACU,QADQ,GAEfZ,OAAO,CAACwB,UAFZ;;AAIA,MAAIxB,OAAO,CAAC0B,QAAR,KAAqB,KAAzB,EAAgC;AAAExB,IAAAA,KAAK,CAACwB,QAAN,GAAiBC,QAAjB;AAA2B,GAA7D,MAAmE,IAAI3B,OAAO,CAAC0B,QAAR,KAAqBD,SAAzB,EAAoC;AAAEvB,IAAAA,KAAK,CAACwB,QAAN,GAAiBlC,SAAS,CAACgB,QAAV,CAAmBU,IAAnB,CAAwBR,SAAxB,CAAkCkB,iBAAnD;AAAsE,GAA5G,MAAkH;AACnL1B,IAAAA,KAAK,CAACwB,QAAN,GAAiB1B,OAAO,CAAC0B,QAAzB;AACD,GArCmC,CAuCpC;;;AACA,MAAIG,UAAU,GAAG7B,OAAO,CAAC6B,UAAR,IAAsB,KAAK,EAA5C;AACA3B,EAAAA,KAAK,CAAC4B,MAAN,GAAe,IAAItC,SAAS,CAACuC,MAAd,CAAqB;AAClCC,IAAAA,EAAE,EAAE,CAD8B;AAElCpB,IAAAA,QAAQ,EAAEV,KAAK,CAACU,QAFkB;AAGlCqB,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEhC,KAAK,CAACQ,SAAN,CAAgByB,cADlB;AAEJC,MAAAA,GAAG,EAAElC,KAAK,CAACQ,SAAN,CAAgB2B;AAFjB,KAH4B;AAOlCC,IAAAA,IAAI,EAAE;AACJJ,MAAAA,IAAI,EAAEhC,KAAK,CAACQ,SAAN,CAAgByB,cADlB;AAEJC,MAAAA,GAAG,EAAElC,KAAK,CAACQ,SAAN,CAAgB2B;AAFjB;AAP4B,GAArB,CAAf,CAzCoC,CAsDpC;;AACAnC,EAAAA,KAAK,CAAC4B,MAAN,CAAaG,IAAb,CAAkBM,MAAlB,CAAyBV,UAAzB,EAvDoC,CAyDpC;;AACA3B,EAAAA,KAAK,CAACsC,YAAN,GAAqB,IAAIhD,SAAS,CAACuC,MAAd,CAAqB;AACxCC,IAAAA,EAAE,EAAE,CAAC,CADmC;AAExCpB,IAAAA,QAAQ,EAAEV,KAAK,CAACU,QAFwB;AAGxCqB,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEL,UADF;AAEJO,MAAAA,GAAG,EAAElC,KAAK,CAACQ,SAAN,CAAgB2B;AAFjB,KAHkC;AAOxCC,IAAAA,IAAI,EAAE;AACJJ,MAAAA,IAAI,EAAEhC,KAAK,CAACQ,SAAN,CAAgByB,cADlB;AAEJC,MAAAA,GAAG,EAAElC,KAAK,CAACQ,SAAN,CAAgB2B;AAFjB;AAPkC,GAArB,CAArB,CA1DoC,CAuEpC;;AACAnC,EAAAA,KAAK,CAACuC,IAAN,GAAavC,KAAK,CAACM,QAAN,CAAekC,eAAf,CAA+BC,MAA/B,CAAsC3C,OAAO,CAAC4C,iBAA9C,CAAb;AACA1C,EAAAA,KAAK,CAAC2C,QAAN,GAAiB;AACfC,IAAAA,IAAI,EAAE,CADS;AAEfC,IAAAA,MAAM,EAAE;AAFO,GAAjB,CAzEoC,CA8EpC;;AACA7C,EAAAA,KAAK,CAAC6C,MAAN,GAAe;AACbC,IAAAA,GAAG,EAAE,EADQ;AAEbC,IAAAA,KAAK,EAAE,CAFM;AAGbC,IAAAA,MAAM,EAAEhD,KAAK,CAACU,QAAN,GAAiB,CAAjB,GAAqB,CAHhB;AAIbuC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,QAAQ,EAAE;AAFJ;AAJK,GAAf;AASAnD,EAAAA,KAAK,CAACoD,IAAN,GAAa;AACXJ,IAAAA,MAAM,EAAEhD,KAAK,CAACU,QAAN,GAAiB,CAAjB,GAAqB,CADlB;AAEXoC,IAAAA,GAAG,EAAE;AAFM,GAAb;AAIA9C,EAAAA,KAAK,CAACqD,MAAN,GAAe,KAAf,CA5FoC,CA8FpC;;AACArD,EAAAA,KAAK,CAACT,KAAN,GAAcS,KAAK,CAACU,QAAN,GAAiBnB,KAAK,CAACC,MAAvB,GAAgCD,KAAK,CAACE,MAApD,CA/FoC,CAiGpC;;AACAO,EAAAA,KAAK,CAACsD,QAAN,GAAiB,IAAjB,CAlGoC,CAoGpC;;AACAtD,EAAAA,KAAK,CAACuD,MAAN,GAAevD,KAAK,CAACM,QAAN,CAAeiD,MAAf,CAAsBd,MAAtB,CAA6B;AAC1C;AACA/B,IAAAA,QAAQ,EAAEV,KAAK,CAACU,QAF0B;AAG1CkB,IAAAA,MAAM,EAAE5B,KAAK,CAAC4B;AAH4B,GAA7B,CAAf;AAKA5B,EAAAA,KAAK,CAACwD,MAAN,GAAexD,KAAK,CAACM,QAAN,CAAekD,MAAf,CAAsBf,MAAtB,CAA6B;AAC1Cb,IAAAA,MAAM,EAAE5B,KAAK,CAAC4B,MAD4B;AAE1CzB,IAAAA,OAAO,EAAEH,KAAK,CAACG;AAF2B,GAA7B,CAAf,CA1GoC,CA+GpC;;AACA,MAAIH,KAAK,CAACM,QAAN,CAAee,IAAf,KAAwB,MAA5B,EAAoC;AAClCrB,IAAAA,KAAK,CAACwD,MAAN,CAAaC,UAAb,CAAwBzD,KAAK,CAACU,QAA9B;AACD;;AAED,MAAI,CAACV,KAAK,CAACU,QAAX,EAAqB;AAAEV,IAAAA,KAAK,CAACuD,MAAN,CAAaG,WAAb;AAA4B;;AAEnD,OAAK7D,MAAL,GAAcA,MAAd;;AAEA,OAAK8D,KAAL;AACD;;AACDvE,IAAI,CAACwE,QAAL,CAAchE,UAAd,EAA0BF,YAA1B;AACAmE,OAAO,CAACjE,UAAR,GAAqBA,UAArB;;AAEAA,UAAU,CAAC6C,MAAX,GAAoB,SAASA,MAAT,CAAiB5C,MAAjB,EAAyBC,OAAzB,EAAkC;AACpD,SAAO,IAAIF,UAAJ,CAAeC,MAAf,EAAuBC,OAAvB,CAAP;AACD,CAFD;;AAIAF,UAAU,CAACkE,SAAX,CAAqBH,KAArB,GAA6B,SAASI,IAAT,GAAiB;AAC5C,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIhE,KAAK,GAAG,KAAKC,UAAjB;AACA,MAAIsC,IAAI,GAAGvC,KAAK,CAACuC,IAAjB,CAH4C,CAK5C;;AACAvC,EAAAA,KAAK,CAAC4B,MAAN,CAAaG,IAAb,CAAkBkC,EAAlB,CAAqB,OAArB,EAA8B,YAAY;AACxCD,IAAAA,IAAI,CAACE,qBAAL;AACD,GAFD,EAN4C,CAU5C;;AACAlE,EAAAA,KAAK,CAACuD,MAAN,CAAaU,EAAb,CAAgB,MAAhB,EAAwB,UAAUE,KAAV,EAAiB;AACvCH,IAAAA,IAAI,CAACI,YAAL,CAAkBD,KAAlB;AACD,GAFD;AAGAnE,EAAAA,KAAK,CAACuD,MAAN,CAAac,IAAb,CAAkB,SAAlB,EAA6B,UAAU9D,OAAV,EAAmB;AAC9CyD,IAAAA,IAAI,CAACM,UAAL,CAAgB/D,OAAhB;AACD,GAFD,EAd4C,CAkB5C;;AACAP,EAAAA,KAAK,CAACuD,MAAN,CAAaU,EAAb,CAAgB,OAAhB,EAAyB,UAAUM,GAAV,EAAe;AACtCP,IAAAA,IAAI,CAACQ,cAAL,CAAoBD,GAApB;AACD,GAFD,EAnB4C,CAuB5C;;AACAvE,EAAAA,KAAK,CAACwD,MAAN,CAAaS,EAAb,CAAgB,OAAhB,EAAyB,UAAUM,GAAV,EAAe;AACtCP,IAAAA,IAAI,CAACS,IAAL,CAAU,OAAV,EAAmBF,GAAnB;AACD,GAFD;AAIA,OAAK1E,MAAL,CAAY6E,IAAZ,CAAiB1E,KAAK,CAACuD,MAAvB;AACAvD,EAAAA,KAAK,CAACwD,MAAN,CAAakB,IAAb,CAAkB,KAAK7E,MAAvB,EA7B4C,CA+B5C;;AACA,OAAKA,MAAL,CAAYoE,EAAZ,CAAe,OAAf,EAAwB,SAASU,aAAT,CAAwBC,CAAxB,EAA2B;AACjDZ,IAAAA,IAAI,CAACS,IAAL,CAAU,OAAV,EAAmBG,CAAnB;AACD,GAFD;AAIA,OAAK/E,MAAL,CAAYwE,IAAZ,CAAiB,OAAjB,EAA0B,SAASQ,OAAT,CAAkBC,QAAlB,EAA4B;AACpD,QAAIP,GAAJ;;AACA,QAAIO,QAAJ,EAAc;AACZP,MAAAA,GAAG,GAAG,IAAIQ,KAAJ,CAAU,gBAAV,CAAN;AACAR,MAAAA,GAAG,CAACS,IAAJ,GAAW,YAAX;AACD;;AAEDhB,IAAAA,IAAI,CAACiB,cAAL,CAAoBV,GAApB;AACAP,IAAAA,IAAI,CAACS,IAAL,CAAU,OAAV;;AAEA,QAAIzE,KAAK,CAACS,IAAV,EAAgB;AACd8B,MAAAA,IAAI,CAAC2C,GAAL,CAASlF,KAAK,CAACS,IAAf;AACD;;AAEDT,IAAAA,KAAK,CAACwD,MAAN,CAAa2B,MAAb;AACD,GAfD,EApC4C,CAqD5C;;AACA,OAAKd,IAAL,CAAU,OAAV,EAAmB,YAAY;AAC7BL,IAAAA,IAAI,CAACoB,UAAL,CAAgB,CAAhB;AACD,GAFD;;AAIA,WAASC,iBAAT,GAA8B;AAC5BrB,IAAAA,IAAI,CAACqB,iBAAL;AACD;;AAEDrF,EAAAA,KAAK,CAAC4B,MAAN,CAAaG,IAAb,CAAkBkC,EAAlB,CAAqB,UAArB,EAAiCoB,iBAAjC;AACArF,EAAAA,KAAK,CAAC4B,MAAN,CAAaQ,IAAb,CAAkB6B,EAAlB,CAAqB,UAArB,EAAiCoB,iBAAjC,EA/D4C,CAiE5C;;AACA,OAAKxF,MAAL,CAAYyF,aAAZ,GAA4B,KAA5B;AACD,CAnED;;AAqEA1F,UAAU,CAACkE,SAAX,CAAqBQ,UAArB,GAAkC,SAASA,UAAT,CAAqB/D,OAArB,EAA8B;AAC9D,MAAIP,KAAK,GAAG,KAAKC,UAAjB;AACA,MAAIsF,IAAI,GAAGvF,KAAK,CAACO,OAAjB;AACA,MAAIgD,MAAM,GAAGvD,KAAK,CAACuD,MAAnB;AACA,MAAIC,MAAM,GAAGxD,KAAK,CAACwD,MAAnB;AACA,MAAIjB,IAAI,GAAGvC,KAAK,CAACuC,IAAjB;AAEAvC,EAAAA,KAAK,CAACO,OAAN,GAAgBA,OAAhB;AACAP,EAAAA,KAAK,CAACT,KAAN,CAAY,iBAAZ,EAA+BgB,OAA/B,EAR8D,CAU9D;;AACA,MAAI,CAACgF,IAAL,EAAW;AACTvF,IAAAA,KAAK,CAACS,IAAN,GAAa8B,IAAI,CAACiD,GAAL,CAASjF,OAAT,CAAb;AACAgD,IAAAA,MAAM,CAACkC,cAAP,CAAsBzF,KAAK,CAACS,IAA5B;AACA+C,IAAAA,MAAM,CAACiC,cAAP,CAAsBzF,KAAK,CAACS,IAA5B;AACD;;AACD+C,EAAAA,MAAM,CAACkC,UAAP,CAAkBnF,OAAlB;;AAEA,MAAI,CAACP,KAAK,CAACU,QAAX,EAAqB;AACnB8C,IAAAA,MAAM,CAACmC,YAAP;;AACA,QAAI3F,KAAK,CAACsD,QAAN,KAAmB,IAAvB,EAA6B;AAC3BE,MAAAA,MAAM,CAACoC,aAAP,CAAqB;AAAEC,QAAAA,IAAI,EAAE7F,KAAK,CAACsD;AAAd,OAArB;AACD;AACF,GAvB6D,CAyB9D;;;AACAE,EAAAA,MAAM,CAACsC,aAAP,CAAqB;AACnBC,IAAAA,oBAAoB,EAAE/F,KAAK,CAACQ,SAAN,CAAgBwF,4BADnB;AAEnBC,IAAAA,sBAAsB,EAAEjG,KAAK,CAACkB,UAFX;AAGnBgF,IAAAA,WAAW,EAAElG,KAAK,CAACsB,UAAN,GAAmB,CAAnB,GAAuB,CAHjB;AAInB6E,IAAAA,mBAAmB,EAAEnG,KAAK,CAAC4B,MAAN,CAAaG,IAAb,CAAkBG;AAJpB,GAArB,EA1B8D,CAiC9D;;AACA,MAAIlC,KAAK,CAACO,OAAN,IAAiB,GAAjB,IAAyBP,KAAK,CAACU,QAAN,IAAkBV,KAAK,CAACoB,UAArD,EAAkE;AAAE,SAAK8C,qBAAL;AAA8B;;AAElG,OAAKO,IAAL,CAAU,SAAV,EAAqBlE,OAArB;AACD,CArCD;;AAuCAX,UAAU,CAACkE,SAAX,CAAqBU,cAArB,GAAsC,SAASA,cAAT,CAAyBD,GAAzB,EAA8B;AAClE,MAAIvE,KAAK,GAAG,KAAKC,UAAjB,CADkE,CAGlE;;AACAD,EAAAA,KAAK,CAACuD,MAAN,CAAa6C,IAAb,GAJkE,CAMlE;;AACA,MAAI7B,GAAG,YAAYjF,SAAS,CAACgB,QAAV,CAAmBU,IAAnB,CAAwBZ,KAAxB,CAA8BiG,aAAjD,EAAgE;AAC9D,SAAKC,OAAL,CAAa;AACXrD,MAAAA,MAAM,EAAEjD,KAAK,CAAC6C,MAAN,CAAaI,MAAb,CAAoBC,IADjB;AAEX8B,MAAAA,IAAI,EAAET,GAAG,CAACS,IAFC;AAGXuB,MAAAA,KAAK,EAAEhC,GAAG,CAACiC,OAHA;AAIXpE,MAAAA,IAAI,EAAE;AAJK,KAAb;AAMD;;AAED,OAAKqC,IAAL,CAAU,OAAV,EAAmBF,GAAnB;AACD,CAjBD;;AAmBA3E,UAAU,CAACkE,SAAX,CAAqBM,YAArB,GAAoC,SAASA,YAAT,CAAuBD,KAAvB,EAA8B;AAChE,MAAInE,KAAK,GAAG,KAAKC,UAAjB;AAEAD,EAAAA,KAAK,CAACT,KAAN,CAAY,YAAZ,EAA0B4E,KAA1B;AACAnE,EAAAA,KAAK,CAACG,OAAN,CAAcsG,KAAd,GAJgE,CAMhE;;AACA,OAAKhC,IAAL,CAAU,OAAV,EAAmBN,KAAnB;AAEA,MAAItB,MAAJ,CATgE,CAWhE;;AACA,MAAIsB,KAAK,CAACuC,IAAN,KAAe,eAAf,IAAkCvC,KAAK,CAACrC,EAAN,KAAa,CAAnD,EAAsD;AACpD,QAAI9B,KAAK,CAACO,OAAN,GAAgB,GAAhB,IAAuBP,KAAK,CAACoB,UAAjC,EAA6C;AAC3CpB,MAAAA,KAAK,CAACT,KAAN,CAAY,4BAAZ;AACAS,MAAAA,KAAK,CAACO,OAAN,GAAgB,GAAhB;AACA,WAAKkE,IAAL,CAAU,SAAV,EAAqB,GAArB;AACD;;AACDzE,IAAAA,KAAK,CAAC4B,MAAN,CAAaQ,IAAb,CAAkBuE,MAAlB,CAAyBxC,KAAK,CAACyC,KAA/B;AACA;AACD;;AAED,MAAI5G,KAAK,CAACU,QAAN,IAAkByD,KAAK,CAACuC,IAAN,KAAe,cAArC,EAAqD;AACnD1G,IAAAA,KAAK,CAACT,KAAN,CAAY,0BAAZ;;AACA,SAAK+G,OAAL,CAAa;AACXrD,MAAAA,MAAM,EAAEjD,KAAK,CAAC6C,MAAN,CAAaI,MAAb,CAAoBC,IADjB;AAEX8B,MAAAA,IAAI,EAAE,gBAFK;AAGX5C,MAAAA,IAAI,EAAE;AAHK,KAAb;;AAKA;AACD;;AAED,MAAI,CAACS,MAAD,IAAWsB,KAAK,CAACrC,EAAN,KAAaP,SAA5B,EAAuC;AACrC;AACAsB,IAAAA,MAAM,GAAG7C,KAAK,CAAC6C,MAAN,CAAaC,GAAb,CAAiBqB,KAAK,CAACrC,EAAvB,CAAT,CAFqC,CAIrC;;AACA,QAAI,CAACe,MAAD,IACAsB,KAAK,CAACuC,IAAN,KAAe,SADf,IAEAvC,KAAK,CAACuC,IAAN,KAAe,UAFf,IAGAvC,KAAK,CAACuC,IAAN,KAAe,KAHnB,EAG0B;AACxB;AACA,UAAI,KAAKG,SAAL,CAAe1C,KAAK,CAACrC,EAArB,CAAJ,EAA8B;AAAE;AAAQ;;AAExC9B,MAAAA,KAAK,CAACT,KAAN,CAAY,0BAAZ,EAAwC4E,KAAK,CAACrC,EAA9C;AACA9B,MAAAA,KAAK,CAACwD,MAAN,CAAasD,QAAb,CAAsB;AAAEhF,QAAAA,EAAE,EAAEqC,KAAK,CAACrC,EAAZ;AAAgBkD,QAAAA,IAAI,EAAE;AAAtB,OAAtB;AACA;AACD;AACF,GAhD+D,CAkDhE;;;AACA,MAAI,CAACnC,MAAD,IAAWsB,KAAK,CAACuC,IAAN,KAAe,SAA9B,EAAyC;AACvC,SAAKK,cAAL,CAAoB5C,KAApB;;AACA;AACD;;AAED,MAAItB,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACuB,YAAP,CAAoBD,KAApB;AACD,GAFD,MAEO,IAAIA,KAAK,CAACuC,IAAN,KAAe,UAAnB,EAA+B;AACpC,SAAKM,eAAL,CAAqB7C,KAAK,CAAC8C,QAA3B;AACD,GAFM,MAEA,IAAI9C,KAAK,CAACuC,IAAN,KAAe,cAAnB,EAAmC,CACxC;AACD,GAFM,MAEA,IAAIvC,KAAK,CAACuC,IAAN,KAAe,MAAnB,EAA2B;AAChC,SAAKQ,WAAL,CAAiB/C,KAAjB;AACD,GAFM,MAEA,IAAIA,KAAK,CAACuC,IAAN,KAAe,QAAnB,EAA6B;AAClC,SAAKS,aAAL,CAAmBhD,KAAnB;AACD,GAFM,MAEA,IAAIA,KAAK,CAACuC,IAAN,KAAe,iBAAnB,EAAsC;AAC3C;AACA,QAAI1G,KAAK,CAACsD,QAAN,KAAmB,IAAvB,EAA6B;AAC3BtD,MAAAA,KAAK,CAACsD,QAAN,GAAiBa,KAAK,CAAC0B,IAAvB;AACD;AACF,GALM,MAKA,IAAI1B,KAAK,CAACuC,IAAN,KAAe,UAAnB,EAA+B,CACpC;AACD,GAFM,MAEA;AACL1G,IAAAA,KAAK,CAACT,KAAN,CAAY,6BAAZ,EAA2C4E,KAAK,CAACuC,IAAjD;AACD;AACF,CA5ED;;AA8EA9G,UAAU,CAACkE,SAAX,CAAqBuB,iBAArB,GAAyC,SAASA,iBAAT,GAA8B;AACrE,MAAIrF,KAAK,GAAG,KAAKC,UAAjB;AACAD,EAAAA,KAAK,CAACT,KAAN,CAAY,sBAAZ;;AACA,OAAK+G,OAAL,CAAa;AACXrD,IAAAA,MAAM,EAAEjD,KAAK,CAAC6C,MAAN,CAAaI,MAAb,CAAoBC,IADjB;AAEX8B,IAAAA,IAAI,EAAE,oBAFK;AAGX5C,IAAAA,IAAI,EAAE;AAHK,GAAb;AAKD,CARD;;AAUAxC,UAAU,CAACkE,SAAX,CAAqB+C,SAArB,GAAiC,SAASA,SAAT,CAAoB/E,EAApB,EAAwB;AACvD,MAAI9B,KAAK,GAAG,KAAKC,UAAjB;;AACA,MAAID,KAAK,CAACqD,MAAN,KAAiB,KAAjB,IAA0BrD,KAAK,CAACqD,MAAN,GAAevB,EAA7C,EAAiD;AAAE,WAAO,IAAP;AAAa;;AAChE,SAAO,KAAP;AACD,CAJD;;AAMAlC,UAAU,CAACkE,SAAX,CAAqBsD,MAArB,GAA8B,SAASA,MAAT,GAAmB;AAC/C,MAAIpH,KAAK,GAAG,KAAKC,UAAjB;AAEA,MAAI6B,EAAE,GAAG9B,KAAK,CAAC6C,MAAN,CAAaG,MAAtB;AACAhD,EAAAA,KAAK,CAAC6C,MAAN,CAAaG,MAAb,IAAuB,CAAvB;AACA,SAAOlB,EAAP;AACD,CAND;;AAQAlC,UAAU,CAACkE,SAAX,CAAqBuD,aAArB,GAAqC,SAASA,aAAT,CAAwBC,GAAxB,EAA6B;AAChE,MAAItH,KAAK,GAAG,KAAKC,UAAjB;AACA,MAAI6B,EAAE,GAAGwF,GAAG,CAACxF,EAAb;;AACA,MAAIA,EAAE,KAAKP,SAAX,EAAsB;AAAEO,IAAAA,EAAE,GAAG,KAAKsF,MAAL,EAAL;AAAoB;;AAE5C,MAAIG,QAAQ,GAAG,KAAKV,SAAL,CAAe/E,EAAf,CAAf;;AAEA,MAAIwF,GAAG,CAAC1E,IAAJ,IAAY,CAAC5C,KAAK,CAACsB,UAAvB,EAAmC;AACjCtB,IAAAA,KAAK,CAACT,KAAN,CAAY,kCAAZ,EAAgDuC,EAAhD,EADiC,CAGjC;;AACA,SAAKwE,OAAL,CAAa;AACXrD,MAAAA,MAAM,EAAEjD,KAAK,CAAC6C,MAAN,CAAaI,MAAb,CAAoBC,IADjB;AAEX8B,MAAAA,IAAI,EAAE,gBAFK;AAGX5C,MAAAA,IAAI,EAAE;AAHK,KAAb;;AAKAmF,IAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,MAAI1E,MAAM,GAAG,IAAIlD,MAAJ,CAAW,IAAX,EAAiB;AAC5BmC,IAAAA,EAAE,EAAEA,EADwB;AAE5B0F,IAAAA,OAAO,EAAEF,GAAG,CAACE,OAAJ,KAAgB,KAFG;AAG5BC,IAAAA,MAAM,EAAEH,GAAG,CAACG,MAHgB;AAI5BC,IAAAA,IAAI,EAAEJ,GAAG,CAACI,IAJkB;AAK5B7B,IAAAA,IAAI,EAAEyB,GAAG,CAACzB,IALkB;AAM5B8B,IAAAA,QAAQ,EAAEL,GAAG,CAACK,QANc;AAO5BC,IAAAA,OAAO,EAAEN,GAAG,CAACM,OAPe;AAQ5BC,IAAAA,MAAM,EAAEP,GAAG,CAACO,MARgB;AAS5BC,IAAAA,QAAQ,EAAE,CAACP,QAAD,IAAaD,GAAG,CAACQ,QATC;AAU5BC,IAAAA,QAAQ,EAAE,CAACR,QAAD,IAAaD,GAAG,CAACS;AAVC,GAAjB,CAAb;AAYA,MAAI/D,IAAI,GAAG,IAAX,CA/BgE,CAiChE;;AACA,MAAIuD,QAAJ,EAAc;AACZ,WAAO1E,MAAP;AACD;;AAED7C,EAAAA,KAAK,CAAC6C,MAAN,CAAaI,MAAb,CAAoBC,IAApB,GAA2B8E,IAAI,CAAC9F,GAAL,CAASlC,KAAK,CAAC6C,MAAN,CAAaI,MAAb,CAAoBC,IAA7B,EAAmCpB,EAAnC,CAA3B;AAEA9B,EAAAA,KAAK,CAACT,KAAN,CAAY,oBAAZ,EAAkCsD,MAAM,CAACf,EAAzC;AACA9B,EAAAA,KAAK,CAAC6C,MAAN,CAAaC,GAAb,CAAiBD,MAAM,CAACf,EAAxB,IAA8Be,MAA9B;AACA7C,EAAAA,KAAK,CAAC6C,MAAN,CAAaE,KAAb;AACA/C,EAAAA,KAAK,CAAC2C,QAAN,CAAeE,MAAf;;AACA,MAAIA,MAAM,CAACgF,MAAP,KAAkB,IAAtB,EAA4B;AAC1B7H,IAAAA,KAAK,CAAC2C,QAAN,CAAeC,IAAf;AACD;;AAEDC,EAAAA,MAAM,CAACwB,IAAP,CAAY,OAAZ,EAAqB,YAAY;AAC/BL,IAAAA,IAAI,CAACiE,aAAL,CAAmBpF,MAAnB;AACD,GAFD;AAIA,SAAOA,MAAP;AACD,CArDD;;AAuDAjD,UAAU,CAACkE,SAAX,CAAqBiD,cAArB,GAAsC,SAASA,cAAT,CAAyB5C,KAAzB,EAAgC;AACpE,MAAInE,KAAK,GAAG,KAAKC,UAAjB,CADoE,CAGpE;;AACA,MAAIkE,KAAK,CAACrC,EAAN,IAAY9B,KAAK,CAAC6C,MAAN,CAAaI,MAAb,CAAoBE,QAApC,EAA8C;AAAE;AAAQ,GAJY,CAMpE;;;AACA,MAAI,CAACgB,KAAK,CAACrC,EAAN,GAAW9B,KAAK,CAAC6C,MAAN,CAAaG,MAAzB,IAAmC,CAAnC,KAAyC,CAA7C,EAAgD;AAC9ChD,IAAAA,KAAK,CAACwD,MAAN,CAAasD,QAAb,CAAsB;AAAEhF,MAAAA,EAAE,EAAEqC,KAAK,CAACrC,EAAZ;AAAgBkD,MAAAA,IAAI,EAAE;AAAtB,KAAtB;AACA;AACD;;AAED,MAAInC,MAAM,GAAG,KAAKwE,aAAL,CAAmB;AAC9BvF,IAAAA,EAAE,EAAEqC,KAAK,CAACrC,EADoB;AAE9B0F,IAAAA,OAAO,EAAE,KAFqB;AAG9BC,IAAAA,MAAM,EAAEtD,KAAK,CAACyD,OAAN,CAAc,SAAd,CAHsB;AAI9BF,IAAAA,IAAI,EAAEvD,KAAK,CAACyD,OAAN,CAAc,OAAd,CAJwB;AAK9B/B,IAAAA,IAAI,EAAE1B,KAAK,CAACyD,OAAN,CAAc,YAAd,CALwB;AAM9BD,IAAAA,QAAQ,EAAExD,KAAK,CAACwD,QANc;AAO9BC,IAAAA,OAAO,EAAEzD,KAAK,CAACyD,OAPe;AAQ9BG,IAAAA,QAAQ,EAAE5D,KAAK,CAAC4D;AARc,GAAnB,CAAb,CAZoE,CAuBpE;;;AACA,MAAI,KAAKlB,SAAL,CAAehE,MAAM,CAACf,EAAtB,CAAJ,EAA+B;AAC7B;AACD;;AAED9B,EAAAA,KAAK,CAAC6C,MAAN,CAAaI,MAAb,CAAoBE,QAApB,GAA+B6E,IAAI,CAAC9F,GAAL,CAC7BlC,KAAK,CAAC6C,MAAN,CAAaI,MAAb,CAAoBE,QADS,EAE7BN,MAAM,CAACf,EAFsB,CAA/B,CA5BoE,CAiCpE;;AACA,MAAI,CAAC,KAAK2C,IAAL,CAAU,QAAV,EAAoB5B,MAApB,CAAL,EAAkC;AAChC;AACAA,IAAAA,MAAM,CAACqF,KAAP;AACA;AACD,GAtCmE,CAwCpE;;;AACA,MAAI/D,KAAK,CAACgE,GAAV,EAAe;AACbtF,IAAAA,MAAM,CAACuB,YAAP,CAAoB;AAAEsC,MAAAA,IAAI,EAAE,KAAR;AAAeyB,MAAAA,GAAG,EAAE;AAApB,KAApB;AACD;;AAED,SAAOtF,MAAP;AACD,CA9CD;;AAgDAjD,UAAU,CAACkE,SAAX,CAAqBI,qBAArB,GAA6C,SAASA,qBAAT,GAAkC;AAC7E,MAAIlE,KAAK,GAAG,KAAKC,UAAjB;;AACA,MAAID,KAAK,CAACO,OAAN,GAAgB,GAAhB,IAAuB,EAAEP,KAAK,CAACU,QAAN,IAAkBV,KAAK,CAACoB,UAA1B,CAA3B,EAAkE;AAChE;AACD;;AAED,MAAIwF,KAAK,GAAG5G,KAAK,CAAC4B,MAAN,CAAaG,IAAb,CAAkBqG,QAAlB,EAAZ;;AACA,MAAIxB,KAAK,KAAK,CAAd,EAAiB;AACf;AACD;;AAED5G,EAAAA,KAAK,CAACT,KAAN,CAAY,yCAAZ,EAAuDqH,KAAvD;AAEA5G,EAAAA,KAAK,CAACwD,MAAN,CAAa6E,iBAAb,CAA+B;AAC7BvG,IAAAA,EAAE,EAAE,CADyB;AAE7B8E,IAAAA,KAAK,EAAEA;AAFsB,GAA/B;AAIA5G,EAAAA,KAAK,CAAC4B,MAAN,CAAaG,IAAb,CAAkB4E,MAAlB,CAAyBC,KAAzB;AACD,CAlBD;;AAoBAhH,UAAU,CAACkE,SAAX,CAAqBwE,KAArB,GAA6B,SAASA,KAAT,CAAgB/H,OAAhB,EAAyB;AACpD,OAAKN,UAAL,CAAgBsD,MAAhB,CAAuBmC,UAAvB,CAAkCnF,OAAlC;AACD,CAFD,C,CAIA;;;AACAX,UAAU,CAACkE,SAAX,CAAqByE,UAArB,GAAkC,SAASA,UAAT,GAAuB;AACvD,SAAO,KAAKtI,UAAL,CAAgBM,OAAvB;AACD,CAFD;;AAIAX,UAAU,CAACkE,SAAX,CAAqBkD,eAArB,GAAuC,SAASA,eAAT,CAA0BC,QAA1B,EAAoC;AACzE,MAAIjH,KAAK,GAAG,KAAKC,UAAjB;AAEAD,EAAAA,KAAK,CAACwD,MAAN,CAAagF,gBAAb;;AAEA,OAAKC,iBAAL,CAAuBxB,QAAvB;;AACA,MAAIA,QAAQ,CAACyB,cAAb,EAA6B;AAAE1I,IAAAA,KAAK,CAACwD,MAAN,CAAamF,eAAb,CAA6B1B,QAAQ,CAACyB,cAAtC;AAAuD,GANb,CAQzE;;;AACA,MAAIzB,QAAQ,CAAC2B,iBAAb,EAAgC;AAC9B,QAAI;AACF5I,MAAAA,KAAK,CAACS,IAAN,CAAWoI,QAAX,CAAoBC,eAApB,CAAoC7B,QAAQ,CAAC2B,iBAA7C;AACD,KAFD,CAEE,OAAOhE,CAAP,EAAU;AACV,WAAK0B,OAAL,CAAa;AACXrD,QAAAA,MAAM,EAAE,CADG;AAEX+B,QAAAA,IAAI,EAAE,gBAFK;AAGX5C,QAAAA,IAAI,EAAE;AAHK,OAAb;;AAKA;AACD;AACF,GApBwE,CAsBzE;;;AACA,MAAIpC,KAAK,CAACM,QAAN,CAAee,IAAf,KAAwB,MAA5B,EAAoC;AAClC,QAAI4F,QAAQ,CAACf,WAAT,KAAyB3E,SAA7B,EAAwC;AACtCvB,MAAAA,KAAK,CAACwD,MAAN,CAAaC,UAAb,CAAwBzD,KAAK,CAACU,QAA9B;AACD,KAFD,MAEO;AACLV,MAAAA,KAAK,CAACwD,MAAN,CAAaC,UAAb,CAAwBwD,QAAQ,CAACf,WAAT,KAAyB,CAAjD;AACD;AACF,GA7BwE,CA+BzE;;AACD,CAhCD;;AAkCAtG,UAAU,CAACkE,SAAX,CAAqB2E,iBAArB,GAAyC,SAASA,iBAAT,CAA4BxB,QAA5B,EAAsC;AAC7E,MAAIA,QAAQ,CAACd,mBAAT,KAAiC5E,SAArC,EAAgD;AAC9C;AACD;;AAED,MAAIvB,KAAK,GAAG,KAAKC,UAAjB,CAL6E,CAO7E;;AACA,MAAI2B,MAAM,GAAG5B,KAAK,CAACsC,YAAnB;AACAV,EAAAA,MAAM,CAACQ,IAAP,CAAYC,MAAZ,CAAmB4E,QAAQ,CAACd,mBAA5B,EAT6E,CAW7E;;AACA4C,EAAAA,MAAM,CAACC,IAAP,CAAYhJ,KAAK,CAAC6C,MAAN,CAAaC,GAAzB,EAA8BmG,OAA9B,CAAsC,UAAUnH,EAAV,EAAc;AAClD,QAAIe,MAAM,GAAG7C,KAAK,CAAC6C,MAAN,CAAaC,GAAb,CAAiBhB,EAAjB,CAAb;AACA,QAAIF,MAAM,GAAGiB,MAAM,CAAC5C,UAAP,CAAkB2B,MAA/B;AAEAA,IAAAA,MAAM,CAACQ,IAAP,CAAY8G,SAAZ,CAAsBjC,QAAQ,CAACd,mBAA/B;AACD,GALD;AAMD,CAlBD;;AAoBAvG,UAAU,CAACkE,SAAX,CAAqBoD,WAArB,GAAmC,SAASiC,UAAT,CAAqBhF,KAArB,EAA4B;AAC7D,MAAIH,IAAI,GAAG,IAAX;AACA,MAAIhE,KAAK,GAAG,KAAKC,UAAjB,CAF6D,CAI7D;;AACA,MAAI,CAACkE,KAAK,CAACiF,GAAX,EAAgB;AACdpJ,IAAAA,KAAK,CAACwD,MAAN,CAAa6F,SAAb,CAAuB;AACrBC,MAAAA,MAAM,EAAEnF,KAAK,CAACmF,MADO;AAErBF,MAAAA,GAAG,EAAE;AAFgB,KAAvB;AAKApF,IAAAA,IAAI,CAACS,IAAL,CAAU,MAAV,EAAkBN,KAAK,CAACmF,MAAxB;AACA;AACD,GAb4D,CAe7D;;;AACA,MAAIC,GAAG,GAAGpF,KAAK,CAACmF,MAAN,CAAaE,QAAb,CAAsB,KAAtB,CAAV;;AACA,MAAI,CAACxJ,KAAK,CAACoD,IAAN,CAAWN,GAAX,CAAeyG,GAAf,CAAL,EAA0B;AACxB;AACD;;AACD,MAAInG,IAAI,GAAGpD,KAAK,CAACoD,IAAN,CAAWN,GAAX,CAAeyG,GAAf,CAAX;AACA,SAAOvJ,KAAK,CAACoD,IAAN,CAAWN,GAAX,CAAeyG,GAAf,CAAP;;AAEA,MAAInG,IAAI,CAACqG,EAAT,EAAa;AACXrG,IAAAA,IAAI,CAACqG,EAAL,CAAQ,IAAR;AACD;AACF,CA1BD;;AA4BA7J,UAAU,CAACkE,SAAX,CAAqBqD,aAArB,GAAqC,SAASuC,YAAT,CAAuBvF,KAAvB,EAA8B;AACjE,OAAKmC,OAAL,CAAa;AACXrD,IAAAA,MAAM,EAAEkB,KAAK,CAAClB,MADH;AAEX+B,IAAAA,IAAI,EAAEb,KAAK,CAACa,IAFD;AAGX5C,IAAAA,IAAI,EAAE;AAHK,GAAb;AAKD,CAND;;AAQAxC,UAAU,CAACkE,SAAX,CAAqBV,IAArB,GAA4B,SAASA,IAAT,CAAeuG,QAAf,EAAyB;AACnD,MAAI3J,KAAK,GAAG,KAAKC,UAAjB,CADmD,CAGnD;;AACA,MAAIqJ,MAAM,GAAGM,MAAM,CAACC,KAAP,CAAa7J,KAAK,CAACQ,SAAN,CAAgBsJ,gBAA7B,CAAb;AACAR,EAAAA,MAAM,CAACS,IAAP,CAAY,CAAZ;AACAT,EAAAA,MAAM,CAACU,aAAP,CAAqBhK,KAAK,CAACoD,IAAN,CAAWJ,MAAhC,EAAwCsG,MAAM,CAACW,MAAP,GAAgB,CAAxD;AACAjK,EAAAA,KAAK,CAACoD,IAAN,CAAWJ,MAAX,IAAqB,CAArB;AAEAhD,EAAAA,KAAK,CAACoD,IAAN,CAAWN,GAAX,CAAewG,MAAM,CAACE,QAAP,CAAgB,KAAhB,CAAf,IAAyC;AAAEC,IAAAA,EAAE,EAAEE;AAAN,GAAzC;AACA3J,EAAAA,KAAK,CAACwD,MAAN,CAAa6F,SAAb,CAAuB;AACrBC,IAAAA,MAAM,EAAEA,MADa;AAErBF,IAAAA,GAAG,EAAE;AAFgB,GAAvB;AAID,CAdD;;AAgBAxJ,UAAU,CAACkE,SAAX,CAAqBoG,UAArB,GAAkC,SAASA,UAAT,CAAqB7I,IAArB,EAA2B;AAC3D,SAAO,KAAKpB,UAAL,CAAgB0C,QAAhB,CAAyBtB,IAAzB,CAAP;AACD,CAFD;;AAIAzB,UAAU,CAACkE,SAAX,CAAqBqG,aAArB,GAAqC,SAASA,aAAT,CAAwB7C,GAAxB,EAA6BqC,QAA7B,EAAuC;AAC1E,MAAI9G,MAAM,GAAG,KAAKwE,aAAL,CAAmBC,GAAnB,CAAb,CAD0E,CAG1E;;;AACA,MAAI,KAAKT,SAAL,CAAehE,MAAM,CAACf,EAAtB,CAAJ,EAA+B;AAC7B,QAAIyC,GAAG,GAAG,IAAIQ,KAAJ,CAAU,kCAAV,CAAV;AACAqF,IAAAA,OAAO,CAACC,QAAR,CAAiB,YAAY;AAC3B,UAAIV,QAAJ,EAAc;AAAEA,QAAAA,QAAQ,CAACpF,GAAD,CAAR;AAAe,OAA/B,MAAqC;AACnC1B,QAAAA,MAAM,CAAC4B,IAAP,CAAY,OAAZ,EAAqBF,GAArB;AACD;AACF,KAJD;AAKA,WAAO1B,MAAP;AACD;;AAED,MAAI8G,QAAJ,EAAc;AACZS,IAAAA,OAAO,CAACC,QAAR,CAAiB,YAAY;AAC3BV,MAAAA,QAAQ,CAAC,IAAD,EAAO9G,MAAP,CAAR;AACD,KAFD;AAGD;;AAED,SAAOA,MAAP;AACD,CArBD;;AAuBAjD,UAAU,CAACkE,SAAX,CAAqB0D,OAArB,GAA+B,SAASA,OAAT,CAAkBF,GAAlB,EAAuBqC,QAAvB,EAAiC;AAC9D,MAAI9G,MAAM,GAAG,KAAKsH,aAAL,CAAmB7C,GAAnB,EAAwB,UAAU/C,GAAV,EAAe;AAClD,QAAIA,GAAJ,EAAS;AACP,UAAIoF,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACpF,GAAD,CAAR;AACD,OAFD,MAEO;AACL1B,QAAAA,MAAM,CAAC4B,IAAP,CAAY,OAAZ,EAAqBF,GAArB;AACD;;AACD;AACD;;AAED,QAAI1B,MAAM,CAACyH,QAAP,EAAJ,EAAuB;AACrB,UAAIX,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAAC,IAAD,EAAO9G,MAAP,CAAR;AACD;;AACD;AACD;;AAEDA,IAAAA,MAAM,CAACT,IAAP,CAAY,UAAUmC,GAAV,EAAe;AACzB,UAAIA,GAAJ,EAAS;AACP,YAAIoF,QAAJ,EAAc;AAAE,iBAAOA,QAAQ,CAACpF,GAAD,CAAf;AAAsB,SAAtC,MAA4C;AAAE,iBAAO1B,MAAM,CAAC4B,IAAP,CAAY,OAAZ,EAAqBF,GAArB,CAAP;AAAkC;AACjF;;AAED,UAAIoF,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAAC,IAAD,EAAO9G,MAAP,CAAR;AACD;AACF,KARD;AASD,GA1BY,CAAb;AA4BA,SAAOA,MAAP;AACD,CA9BD;;AAgCAjD,UAAU,CAACkE,SAAX,CAAqBmE,aAArB,GAAqC,SAASA,aAAT,CAAwBpF,MAAxB,EAAgC;AACnE,MAAI7C,KAAK,GAAG,KAAKC,UAAjB;AAEAD,EAAAA,KAAK,CAACT,KAAN,CAAY,uBAAZ,EAAqCsD,MAAM,CAACf,EAA5C;AACA,SAAO9B,KAAK,CAAC6C,MAAN,CAAaC,GAAb,CAAiBD,MAAM,CAACf,EAAxB,CAAP;AACA9B,EAAAA,KAAK,CAAC6C,MAAN,CAAaE,KAAb;;AAEA,MAAI/C,KAAK,CAAC6C,MAAN,CAAaE,KAAb,KAAuB,CAA3B,EAA8B;AAC5B,SAAK0B,IAAL,CAAU,cAAV;AACD;AACF,CAVD;;AAYA7E,UAAU,CAACkE,SAAX,CAAqBwC,OAArB,GAA+B,SAASA,OAAT,CAAkBiE,MAAlB,EAA0B;AACvD,MAAIvK,KAAK,GAAG,KAAKC,UAAjB;AACA,MAAI+D,IAAI,GAAG,IAAX;AAEAhE,EAAAA,KAAK,CAACqD,MAAN,GAAekH,MAAM,CAACtH,MAAtB;AACAjD,EAAAA,KAAK,CAACT,KAAN,CAAY,qBAAZ,EAAmCS,KAAK,CAACqD,MAAzC;AAEA0F,EAAAA,MAAM,CAACC,IAAP,CAAYhJ,KAAK,CAAC6C,MAAN,CAAaC,GAAzB,EAA8BmG,OAA9B,CAAsC,UAAUnH,EAAV,EAAc;AAClD,QAAIe,MAAM,GAAG7C,KAAK,CAAC6C,MAAN,CAAaC,GAAb,CAAiBhB,EAAjB,CAAb,CADkD,CAGlD;;AACA,QAAIe,MAAM,CAACf,EAAP,IAAayI,MAAM,CAACtH,MAAxB,EAAgC;AAC9B;AACD;;AAEDJ,IAAAA,MAAM,CAACqF,KAAP;AACArF,IAAAA,MAAM,CAAC4B,IAAP,CAAY,OAAZ,EAAqB,IAAIM,KAAJ,CAAU,yBAAV,CAArB;AACD,GAVD;;AAYA,WAASyF,MAAT,GAAmB;AACjB;AACA,QAAIxK,KAAK,CAAC6C,MAAN,CAAaE,KAAb,KAAuB,CAAvB,IAA4BwH,MAAM,CAACvF,IAAP,KAAgB,IAAhD,EAAsD;AACpD;AACAhF,MAAAA,KAAK,CAACuD,MAAN,CAAa6C,IAAb;AAEAgE,MAAAA,OAAO,CAACC,QAAR,CAAiB,YAAY;AAC3B,YAAI9F,GAAG,GAAG,IAAIQ,KAAJ,CAAU,kBAAkBwF,MAAM,CAACvF,IAAnC,CAAV;;AACAhB,QAAAA,IAAI,CAACyG,cAAL,CAAoBlG,GAApB;AACD,OAHD;AAIA;AACD;;AAEDP,IAAAA,IAAI,CAACC,EAAL,CAAQ,cAAR,EAAwBD,IAAI,CAACyG,cAA7B;AACD;;AAED,MAAIF,MAAM,CAACnI,IAAX,EAAiB;AACf;AACApC,IAAAA,KAAK,CAACwD,MAAN,CAAakH,WAAb,CAAyB;AACvBzH,MAAAA,MAAM,EAAEsH,MAAM,CAACtH,MADQ;AAEvB+B,MAAAA,IAAI,EAAEuF,MAAM,CAACvF,IAFU;AAGvBuB,MAAAA,KAAK,EAAEgE,MAAM,CAAChE;AAHS,KAAzB,EAIGiE,MAJH;AAKD,GAPD,MAOO;AACLA,IAAAA,MAAM;AACP;AACF,CA7CD;;AA+CA5K,UAAU,CAACkE,SAAX,CAAqB2G,cAArB,GAAsC,SAASA,cAAT,CAAyBE,KAAzB,EAAgC;AACpE,MAAI3K,KAAK,GAAG,KAAKC,UAAjB;AAEAD,EAAAA,KAAK,CAACT,KAAN,CAAY,qBAAZ;AAEAS,EAAAA,KAAK,CAACwD,MAAN,CAAaoH,IAAb;AACA5K,EAAAA,KAAK,CAACwD,MAAN,CAAaqH,MAAb,CAAoB,KAAKhL,MAAzB;AACAG,EAAAA,KAAK,CAACwD,MAAN,CAAa2B,MAAb;;AAEA,MAAI,KAAKtF,MAAL,CAAYiL,WAAhB,EAA6B;AAC3B,SAAKjL,MAAL,CAAYiL,WAAZ;AACD;;AACD,OAAKrG,IAAL,CAAU,OAAV,EAAmBkG,KAAnB;AACD,CAbD;;AAeA/K,UAAU,CAACkE,SAAX,CAAqBiH,GAArB,GAA2B,SAASA,GAAT,CAAcpB,QAAd,EAAwB;AACjD,MAAI3J,KAAK,GAAG,KAAKC,UAAjB;;AAEA,MAAI0J,QAAJ,EAAc;AACZ,SAAKtF,IAAL,CAAU,OAAV,EAAmBsF,QAAnB;AACD;;AACD,OAAKrD,OAAL,CAAa;AACXrD,IAAAA,MAAM,EAAEjD,KAAK,CAAC6C,MAAN,CAAaI,MAAb,CAAoBC,IADjB;AAEX8B,IAAAA,IAAI,EAAE,IAFK;AAGX5C,IAAAA,IAAI,EAAE;AAHK,GAAb;AAKD,CAXD;;AAaAxC,UAAU,CAACkE,SAAX,CAAqBmB,cAArB,GAAsC,SAASA,cAAT,CAAyBV,GAAzB,EAA8B;AAClE,MAAIvE,KAAK,GAAG,KAAKC,UAAjB;AACA8I,EAAAA,MAAM,CAACC,IAAP,CAAYhJ,KAAK,CAAC6C,MAAN,CAAaC,GAAzB,EAA8BmG,OAA9B,CAAsC,UAAUnH,EAAV,EAAc;AAClD,QAAIe,MAAM,GAAG7C,KAAK,CAAC6C,MAAN,CAAaC,GAAb,CAAiBhB,EAAjB,CAAb;AAEAe,IAAAA,MAAM,CAACmI,OAAP;;AACA,QAAIzG,GAAJ,EAAS;AACP1B,MAAAA,MAAM,CAAC4B,IAAP,CAAY,OAAZ,EAAqBF,GAArB;AACD;AACF,GAPD;AAQD,CAVD;;AAYA3E,UAAU,CAACkE,SAAX,CAAqBpD,QAArB,GAAgC,SAASA,QAAT,GAAqB;AACnD,SAAO,KAAKT,UAAL,CAAgBS,QAAvB;AACD,CAFD;;AAIAd,UAAU,CAACkE,SAAX,CAAqBmH,gBAArB,GAAwC,SAASC,cAAT,GAA2B;AACjE,SAAO,KAAKjL,UAAL,CAAgBqD,QAAvB;AACD,CAFD;;AAIA1D,UAAU,CAACkE,SAAX,CAAqBqH,iBAArB,GAAyC,SAASA,iBAAT,CAA4BtF,IAA5B,EAAkC;AACzE,MAAI7F,KAAK,GAAG,KAAKC,UAAjB;;AACA,MAAID,KAAK,CAACO,OAAN,KAAkB,IAAtB,EAA4B;AAC1BP,IAAAA,KAAK,CAACwD,MAAN,CAAaoC,aAAb,CAA2B;AAAEC,MAAAA,IAAI,EAAEA;AAAR,KAA3B;AACD,GAFD,MAEO;AACL7F,IAAAA,KAAK,CAACsD,QAAN,GAAiBuC,IAAjB;AACD;AACF,CAPD;;AASAjG,UAAU,CAACkE,SAAX,CAAqBsH,WAArB,GAAmC,SAASA,WAAT,CAAsBvD,MAAtB,EAA8BP,GAA9B,EAAmCqC,QAAnC,EAA6C;AAC9E,MAAI3J,KAAK,GAAG,KAAKC,UAAjB;;AAEA,MAAI4C,MAAM,GAAG,KAAKwE,aAAL,CAAmB;AAC9BG,IAAAA,OAAO,EAAE,KADqB;AAE9BK,IAAAA,MAAM,EAAEA,MAFsB;AAG9BJ,IAAAA,MAAM,EAAEH,GAAG,CAACG,MAHkB;AAI9BC,IAAAA,IAAI,EAAEJ,GAAG,CAACI,IAJoB;AAK9B7B,IAAAA,IAAI,EAAEyB,GAAG,CAACzB,IALoB;AAM9B8B,IAAAA,QAAQ,EAAEL,GAAG,CAACK,QANgB;AAO9BC,IAAAA,OAAO,EAAEN,GAAG,CAACM,OAPiB;AAQ9BE,IAAAA,QAAQ,EAAE;AARoB,GAAnB,CAAb;;AAWA,MAAIvD,GAAJ,CAd8E,CAgB9E;;AACA,MAAI,KAAKsC,SAAL,CAAehE,MAAM,CAACf,EAAtB,CAAJ,EAA+B;AAC7ByC,IAAAA,GAAG,GAAG,IAAIQ,KAAJ,CAAU,uCAAV,CAAN;AAEAqF,IAAAA,OAAO,CAACC,QAAR,CAAiB,YAAY;AAC3B,UAAIV,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACpF,GAAD,CAAR;AACD,OAFD,MAEO;AACL1B,QAAAA,MAAM,CAAC4B,IAAP,CAAY,OAAZ,EAAqBF,GAArB;AACD;AACF,KAND;AAOA,WAAO1B,MAAP;AACD;;AAED,MAAIyE,GAAG,CAAC1E,IAAJ,IAAY,CAAC5C,KAAK,CAACsB,UAAvB,EAAmC;AACjCiD,IAAAA,GAAG,GAAG,IAAIQ,KAAJ,CACJ,uDADI,CAAN;AAEAqF,IAAAA,OAAO,CAACC,QAAR,CAAiB,YAAY;AAC3B,UAAIV,QAAJ,EAAc;AAAEA,QAAAA,QAAQ,CAACpF,GAAD,CAAR;AAAe,OAA/B,MAAqC;AACnC1B,QAAAA,MAAM,CAAC4B,IAAP,CAAY,OAAZ,EAAqBF,GAArB;AACD;AACF,KAJD;AAKA,WAAO1B,MAAP;AACD;;AAEDA,EAAAA,MAAM,CAACwI,SAAP,CAAiB/D,GAAG,CAACgE,MAArB,EAA6BhE,GAAG,CAACiE,QAAjC,EAA2C,UAAUhH,GAAV,EAAe;AACxD,QAAI,CAACoF,QAAL,EAAe;AACb,UAAIpF,GAAJ,EAAS;AACP1B,QAAAA,MAAM,CAAC4B,IAAP,CAAY,OAAZ,EAAqBF,GAArB;AACD;;AACD;AACD;;AAED,QAAIA,GAAJ,EAAS;AAAE,aAAOoF,QAAQ,CAACpF,GAAD,CAAf;AAAsB;;AACjCoF,IAAAA,QAAQ,CAAC,IAAD,EAAO9G,MAAP,CAAR;AACD,GAVD;;AAYA,SAAOA,MAAP;AACD,CAtDD;;AAwDAjD,UAAU,CAACkE,SAAX,CAAqBsB,UAArB,GAAkC,SAASA,UAAT,CAAqBoG,KAArB,EAA4B7B,QAA5B,EAAsC;AACtE,MAAI3J,KAAK,GAAG,KAAKC,UAAjB;AAEAD,EAAAA,KAAK,CAACG,OAAN,CAAcsL,GAAd,CAAkBD,KAAlB,EAAyB7B,QAAzB;AACD,CAJD","sourcesContent":["'use strict'\n\nvar util = require('util')\nvar transport = require('../spdy-transport')\n\nvar debug = {\n  server: require('debug')('spdy:connection:server'),\n  client: require('debug')('spdy:connection:client')\n}\nvar EventEmitter = require('events').EventEmitter\n\nvar Stream = transport.Stream\n\nfunction Connection (socket, options) {\n  EventEmitter.call(this)\n\n  var state = {}\n  this._spdyState = state\n\n  // NOTE: There's a big trick here. Connection is used as a `this` argument\n  // to the wrapped `connection` event listener.\n  // socket end doesn't necessarly mean connection drop\n  this.httpAllowHalfOpen = true\n\n  state.timeout = new transport.utils.Timeout(this)\n\n  // Protocol info\n  state.protocol = transport.protocol[options.protocol]\n  state.version = null\n  state.constants = state.protocol.constants\n  state.pair = null\n  state.isServer = options.isServer\n\n  // Root of priority tree (i.e. stream id = 0)\n  state.priorityRoot = new transport.Priority({\n    defaultWeight: state.constants.DEFAULT_WEIGHT,\n    maxCount: transport.protocol.base.constants.MAX_PRIORITY_STREAMS\n  })\n\n  // Defaults\n  state.maxStreams = options.maxStreams ||\n                     state.constants.MAX_CONCURRENT_STREAMS\n\n  state.autoSpdy31 = options.protocol.name !== 'h2' && options.autoSpdy31\n  state.acceptPush = options.acceptPush === undefined\n    ? !state.isServer\n    : options.acceptPush\n\n  if (options.maxChunk === false) { state.maxChunk = Infinity } else if (options.maxChunk === undefined) { state.maxChunk = transport.protocol.base.constants.DEFAULT_MAX_CHUNK } else {\n    state.maxChunk = options.maxChunk\n  }\n\n  // Connection-level flow control\n  var windowSize = options.windowSize || 1 << 20\n  state.window = new transport.Window({\n    id: 0,\n    isServer: state.isServer,\n    recv: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    },\n    send: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    }\n  })\n\n  // It starts with DEFAULT_WINDOW, update must be sent to change it on client\n  state.window.recv.setMax(windowSize)\n\n  // Boilerplate for Stream constructor\n  state.streamWindow = new transport.Window({\n    id: -1,\n    isServer: state.isServer,\n    recv: {\n      size: windowSize,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    },\n    send: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    }\n  })\n\n  // Various state info\n  state.pool = state.protocol.compressionPool.create(options.headerCompression)\n  state.counters = {\n    push: 0,\n    stream: 0\n  }\n\n  // Init streams list\n  state.stream = {\n    map: {},\n    count: 0,\n    nextId: state.isServer ? 2 : 1,\n    lastId: {\n      both: 0,\n      received: 0\n    }\n  }\n  state.ping = {\n    nextId: state.isServer ? 2 : 1,\n    map: {}\n  }\n  state.goaway = false\n\n  // Debug\n  state.debug = state.isServer ? debug.server : debug.client\n\n  // X-Forwarded feature\n  state.xForward = null\n\n  // Create parser and hole for framer\n  state.parser = state.protocol.parser.create({\n    // NOTE: needed to distinguish ping from ping ACK in SPDY\n    isServer: state.isServer,\n    window: state.window\n  })\n  state.framer = state.protocol.framer.create({\n    window: state.window,\n    timeout: state.timeout\n  })\n\n  // SPDY has PUSH enabled on servers\n  if (state.protocol.name === 'spdy') {\n    state.framer.enablePush(state.isServer)\n  }\n\n  if (!state.isServer) { state.parser.skipPreface() }\n\n  this.socket = socket\n\n  this._init()\n}\nutil.inherits(Connection, EventEmitter)\nexports.Connection = Connection\n\nConnection.create = function create (socket, options) {\n  return new Connection(socket, options)\n}\n\nConnection.prototype._init = function init () {\n  var self = this\n  var state = this._spdyState\n  var pool = state.pool\n\n  // Initialize session window\n  state.window.recv.on('drain', function () {\n    self._onSessionWindowDrain()\n  })\n\n  // Initialize parser\n  state.parser.on('data', function (frame) {\n    self._handleFrame(frame)\n  })\n  state.parser.once('version', function (version) {\n    self._onVersion(version)\n  })\n\n  // Propagate parser errors\n  state.parser.on('error', function (err) {\n    self._onParserError(err)\n  })\n\n  // Propagate framer errors\n  state.framer.on('error', function (err) {\n    self.emit('error', err)\n  })\n\n  this.socket.pipe(state.parser)\n  state.framer.pipe(this.socket)\n\n  // Allow high-level api to catch socket errors\n  this.socket.on('error', function onSocketError (e) {\n    self.emit('error', e)\n  })\n\n  this.socket.once('close', function onclose (hadError) {\n    var err\n    if (hadError) {\n      err = new Error('socket hang up')\n      err.code = 'ECONNRESET'\n    }\n\n    self.destroyStreams(err)\n    self.emit('close')\n\n    if (state.pair) {\n      pool.put(state.pair)\n    }\n\n    state.framer.resume()\n  })\n\n  // Reset timeout on close\n  this.once('close', function () {\n    self.setTimeout(0)\n  })\n\n  function _onWindowOverflow () {\n    self._onWindowOverflow()\n  }\n\n  state.window.recv.on('overflow', _onWindowOverflow)\n  state.window.send.on('overflow', _onWindowOverflow)\n\n  // Do not allow half-open connections\n  this.socket.allowHalfOpen = false\n}\n\nConnection.prototype._onVersion = function _onVersion (version) {\n  var state = this._spdyState\n  var prev = state.version\n  var parser = state.parser\n  var framer = state.framer\n  var pool = state.pool\n\n  state.version = version\n  state.debug('id=0 version=%d', version)\n\n  // Ignore transition to 3.1\n  if (!prev) {\n    state.pair = pool.get(version)\n    parser.setCompression(state.pair)\n    framer.setCompression(state.pair)\n  }\n  framer.setVersion(version)\n\n  if (!state.isServer) {\n    framer.prefaceFrame()\n    if (state.xForward !== null) {\n      framer.xForwardedFor({ host: state.xForward })\n    }\n  }\n\n  // Send preface+settings frame (once)\n  framer.settingsFrame({\n    max_header_list_size: state.constants.DEFAULT_MAX_HEADER_LIST_SIZE,\n    max_concurrent_streams: state.maxStreams,\n    enable_push: state.acceptPush ? 1 : 0,\n    initial_window_size: state.window.recv.max\n  })\n\n  // Update session window\n  if (state.version >= 3.1 || (state.isServer && state.autoSpdy31)) { this._onSessionWindowDrain() }\n\n  this.emit('version', version)\n}\n\nConnection.prototype._onParserError = function _onParserError (err) {\n  var state = this._spdyState\n\n  // Prevent further errors\n  state.parser.kill()\n\n  // Send GOAWAY\n  if (err instanceof transport.protocol.base.utils.ProtocolError) {\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: err.code,\n      extra: err.message,\n      send: true\n    })\n  }\n\n  this.emit('error', err)\n}\n\nConnection.prototype._handleFrame = function _handleFrame (frame) {\n  var state = this._spdyState\n\n  state.debug('id=0 frame', frame)\n  state.timeout.reset()\n\n  // For testing purposes\n  this.emit('frame', frame)\n\n  var stream\n\n  // Session window update\n  if (frame.type === 'WINDOW_UPDATE' && frame.id === 0) {\n    if (state.version < 3.1 && state.autoSpdy31) {\n      state.debug('id=0 switch version to 3.1')\n      state.version = 3.1\n      this.emit('version', 3.1)\n    }\n    state.window.send.update(frame.delta)\n    return\n  }\n\n  if (state.isServer && frame.type === 'PUSH_PROMISE') {\n    state.debug('id=0 server PUSH_PROMISE')\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: 'PROTOCOL_ERROR',\n      send: true\n    })\n    return\n  }\n\n  if (!stream && frame.id !== undefined) {\n    // Load created one\n    stream = state.stream.map[frame.id]\n\n    // Fail if not found\n    if (!stream &&\n        frame.type !== 'HEADERS' &&\n        frame.type !== 'PRIORITY' &&\n        frame.type !== 'RST') {\n      // Other side should destroy the stream upon receiving GOAWAY\n      if (this._isGoaway(frame.id)) { return }\n\n      state.debug('id=0 stream=%d not found', frame.id)\n      state.framer.rstFrame({ id: frame.id, code: 'INVALID_STREAM' })\n      return\n    }\n  }\n\n  // Create new stream\n  if (!stream && frame.type === 'HEADERS') {\n    this._handleHeaders(frame)\n    return\n  }\n\n  if (stream) {\n    stream._handleFrame(frame)\n  } else if (frame.type === 'SETTINGS') {\n    this._handleSettings(frame.settings)\n  } else if (frame.type === 'ACK_SETTINGS') {\n    // TODO(indutny): handle it one day\n  } else if (frame.type === 'PING') {\n    this._handlePing(frame)\n  } else if (frame.type === 'GOAWAY') {\n    this._handleGoaway(frame)\n  } else if (frame.type === 'X_FORWARDED_FOR') {\n    // Set X-Forwarded-For only once\n    if (state.xForward === null) {\n      state.xForward = frame.host\n    }\n  } else if (frame.type === 'PRIORITY') {\n    // TODO(indutny): handle this\n  } else {\n    state.debug('id=0 unknown frame type: %s', frame.type)\n  }\n}\n\nConnection.prototype._onWindowOverflow = function _onWindowOverflow () {\n  var state = this._spdyState\n  state.debug('id=0 window overflow')\n  this._goaway({\n    lastId: state.stream.lastId.both,\n    code: 'FLOW_CONTROL_ERROR',\n    send: true\n  })\n}\n\nConnection.prototype._isGoaway = function _isGoaway (id) {\n  var state = this._spdyState\n  if (state.goaway !== false && state.goaway < id) { return true }\n  return false\n}\n\nConnection.prototype._getId = function _getId () {\n  var state = this._spdyState\n\n  var id = state.stream.nextId\n  state.stream.nextId += 2\n  return id\n}\n\nConnection.prototype._createStream = function _createStream (uri) {\n  var state = this._spdyState\n  var id = uri.id\n  if (id === undefined) { id = this._getId() }\n\n  var isGoaway = this._isGoaway(id)\n\n  if (uri.push && !state.acceptPush) {\n    state.debug('id=0 push disabled promisedId=%d', id)\n\n    // Fatal error\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: 'PROTOCOL_ERROR',\n      send: true\n    })\n    isGoaway = true\n  }\n\n  var stream = new Stream(this, {\n    id: id,\n    request: uri.request !== false,\n    method: uri.method,\n    path: uri.path,\n    host: uri.host,\n    priority: uri.priority,\n    headers: uri.headers,\n    parent: uri.parent,\n    readable: !isGoaway && uri.readable,\n    writable: !isGoaway && uri.writable\n  })\n  var self = this\n\n  // Just an empty stream for API consistency\n  if (isGoaway) {\n    return stream\n  }\n\n  state.stream.lastId.both = Math.max(state.stream.lastId.both, id)\n\n  state.debug('id=0 add stream=%d', stream.id)\n  state.stream.map[stream.id] = stream\n  state.stream.count++\n  state.counters.stream++\n  if (stream.parent !== null) {\n    state.counters.push++\n  }\n\n  stream.once('close', function () {\n    self._removeStream(stream)\n  })\n\n  return stream\n}\n\nConnection.prototype._handleHeaders = function _handleHeaders (frame) {\n  var state = this._spdyState\n\n  // Must be HEADERS frame after stream close\n  if (frame.id <= state.stream.lastId.received) { return }\n\n  // Someone is using our ids!\n  if ((frame.id + state.stream.nextId) % 2 === 0) {\n    state.framer.rstFrame({ id: frame.id, code: 'PROTOCOL_ERROR' })\n    return\n  }\n\n  var stream = this._createStream({\n    id: frame.id,\n    request: false,\n    method: frame.headers[':method'],\n    path: frame.headers[':path'],\n    host: frame.headers[':authority'],\n    priority: frame.priority,\n    headers: frame.headers,\n    writable: frame.writable\n  })\n\n  // GOAWAY\n  if (this._isGoaway(stream.id)) {\n    return\n  }\n\n  state.stream.lastId.received = Math.max(\n    state.stream.lastId.received,\n    stream.id\n  )\n\n  // TODO(indutny) handle stream limit\n  if (!this.emit('stream', stream)) {\n    // No listeners was set - abort the stream\n    stream.abort()\n    return\n  }\n\n  // Create fake frame to simulate end of the data\n  if (frame.fin) {\n    stream._handleFrame({ type: 'FIN', fin: true })\n  }\n\n  return stream\n}\n\nConnection.prototype._onSessionWindowDrain = function _onSessionWindowDrain () {\n  var state = this._spdyState\n  if (state.version < 3.1 && !(state.isServer && state.autoSpdy31)) {\n    return\n  }\n\n  var delta = state.window.recv.getDelta()\n  if (delta === 0) {\n    return\n  }\n\n  state.debug('id=0 session window drain, update by %d', delta)\n\n  state.framer.windowUpdateFrame({\n    id: 0,\n    delta: delta\n  })\n  state.window.recv.update(delta)\n}\n\nConnection.prototype.start = function start (version) {\n  this._spdyState.parser.setVersion(version)\n}\n\n// Mostly for testing\nConnection.prototype.getVersion = function getVersion () {\n  return this._spdyState.version\n}\n\nConnection.prototype._handleSettings = function _handleSettings (settings) {\n  var state = this._spdyState\n\n  state.framer.ackSettingsFrame()\n\n  this._setDefaultWindow(settings)\n  if (settings.max_frame_size) { state.framer.setMaxFrameSize(settings.max_frame_size) }\n\n  // TODO(indutny): handle max_header_list_size\n  if (settings.header_table_size) {\n    try {\n      state.pair.compress.updateTableSize(settings.header_table_size)\n    } catch (e) {\n      this._goaway({\n        lastId: 0,\n        code: 'PROTOCOL_ERROR',\n        send: true\n      })\n      return\n    }\n  }\n\n  // HTTP2 clients needs to enable PUSH streams explicitly\n  if (state.protocol.name !== 'spdy') {\n    if (settings.enable_push === undefined) {\n      state.framer.enablePush(state.isServer)\n    } else {\n      state.framer.enablePush(settings.enable_push === 1)\n    }\n  }\n\n  // TODO(indutny): handle max_concurrent_streams\n}\n\nConnection.prototype._setDefaultWindow = function _setDefaultWindow (settings) {\n  if (settings.initial_window_size === undefined) {\n    return\n  }\n\n  var state = this._spdyState\n\n  // Update defaults\n  var window = state.streamWindow\n  window.send.setMax(settings.initial_window_size)\n\n  // Update existing streams\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id]\n    var window = stream._spdyState.window\n\n    window.send.updateMax(settings.initial_window_size)\n  })\n}\n\nConnection.prototype._handlePing = function handlePing (frame) {\n  var self = this\n  var state = this._spdyState\n\n  // Handle incoming PING\n  if (!frame.ack) {\n    state.framer.pingFrame({\n      opaque: frame.opaque,\n      ack: true\n    })\n\n    self.emit('ping', frame.opaque)\n    return\n  }\n\n  // Handle reply PING\n  var hex = frame.opaque.toString('hex')\n  if (!state.ping.map[hex]) {\n    return\n  }\n  var ping = state.ping.map[hex]\n  delete state.ping.map[hex]\n\n  if (ping.cb) {\n    ping.cb(null)\n  }\n}\n\nConnection.prototype._handleGoaway = function handleGoaway (frame) {\n  this._goaway({\n    lastId: frame.lastId,\n    code: frame.code,\n    send: false\n  })\n}\n\nConnection.prototype.ping = function ping (callback) {\n  var state = this._spdyState\n\n  // HTTP2 is using 8-byte opaque\n  var opaque = Buffer.alloc(state.constants.PING_OPAQUE_SIZE)\n  opaque.fill(0)\n  opaque.writeUInt32BE(state.ping.nextId, opaque.length - 4)\n  state.ping.nextId += 2\n\n  state.ping.map[opaque.toString('hex')] = { cb: callback }\n  state.framer.pingFrame({\n    opaque: opaque,\n    ack: false\n  })\n}\n\nConnection.prototype.getCounter = function getCounter (name) {\n  return this._spdyState.counters[name]\n}\n\nConnection.prototype.reserveStream = function reserveStream (uri, callback) {\n  var stream = this._createStream(uri)\n\n  // GOAWAY\n  if (this._isGoaway(stream.id)) {\n    var err = new Error('Can\\'t send request after GOAWAY')\n    process.nextTick(function () {\n      if (callback) { callback(err) } else {\n        stream.emit('error', err)\n      }\n    })\n    return stream\n  }\n\n  if (callback) {\n    process.nextTick(function () {\n      callback(null, stream)\n    })\n  }\n\n  return stream\n}\n\nConnection.prototype.request = function request (uri, callback) {\n  var stream = this.reserveStream(uri, function (err) {\n    if (err) {\n      if (callback) {\n        callback(err)\n      } else {\n        stream.emit('error', err)\n      }\n      return\n    }\n\n    if (stream._wasSent()) {\n      if (callback) {\n        callback(null, stream)\n      }\n      return\n    }\n\n    stream.send(function (err) {\n      if (err) {\n        if (callback) { return callback(err) } else { return stream.emit('error', err) }\n      }\n\n      if (callback) {\n        callback(null, stream)\n      }\n    })\n  })\n\n  return stream\n}\n\nConnection.prototype._removeStream = function _removeStream (stream) {\n  var state = this._spdyState\n\n  state.debug('id=0 remove stream=%d', stream.id)\n  delete state.stream.map[stream.id]\n  state.stream.count--\n\n  if (state.stream.count === 0) {\n    this.emit('_streamDrain')\n  }\n}\n\nConnection.prototype._goaway = function _goaway (params) {\n  var state = this._spdyState\n  var self = this\n\n  state.goaway = params.lastId\n  state.debug('id=0 goaway from=%d', state.goaway)\n\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id]\n\n    // Abort every stream started after GOAWAY\n    if (stream.id <= params.lastId) {\n      return\n    }\n\n    stream.abort()\n    stream.emit('error', new Error('New stream after GOAWAY'))\n  })\n\n  function finish () {\n    // Destroy socket if there are no streams\n    if (state.stream.count === 0 || params.code !== 'OK') {\n      // No further frames should be processed\n      state.parser.kill()\n\n      process.nextTick(function () {\n        var err = new Error('Fatal error: ' + params.code)\n        self._onStreamDrain(err)\n      })\n      return\n    }\n\n    self.on('_streamDrain', self._onStreamDrain)\n  }\n\n  if (params.send) {\n    // Make sure that GOAWAY frame is sent before dumping framer\n    state.framer.goawayFrame({\n      lastId: params.lastId,\n      code: params.code,\n      extra: params.extra\n    }, finish)\n  } else {\n    finish()\n  }\n}\n\nConnection.prototype._onStreamDrain = function _onStreamDrain (error) {\n  var state = this._spdyState\n\n  state.debug('id=0 _onStreamDrain')\n\n  state.framer.dump()\n  state.framer.unpipe(this.socket)\n  state.framer.resume()\n\n  if (this.socket.destroySoon) {\n    this.socket.destroySoon()\n  }\n  this.emit('close', error)\n}\n\nConnection.prototype.end = function end (callback) {\n  var state = this._spdyState\n\n  if (callback) {\n    this.once('close', callback)\n  }\n  this._goaway({\n    lastId: state.stream.lastId.both,\n    code: 'OK',\n    send: true\n  })\n}\n\nConnection.prototype.destroyStreams = function destroyStreams (err) {\n  var state = this._spdyState\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id]\n\n    stream.destroy()\n    if (err) {\n      stream.emit('error', err)\n    }\n  })\n}\n\nConnection.prototype.isServer = function isServer () {\n  return this._spdyState.isServer\n}\n\nConnection.prototype.getXForwardedFor = function getXForwardFor () {\n  return this._spdyState.xForward\n}\n\nConnection.prototype.sendXForwardedFor = function sendXForwardedFor (host) {\n  var state = this._spdyState\n  if (state.version !== null) {\n    state.framer.xForwardedFor({ host: host })\n  } else {\n    state.xForward = host\n  }\n}\n\nConnection.prototype.pushPromise = function pushPromise (parent, uri, callback) {\n  var state = this._spdyState\n\n  var stream = this._createStream({\n    request: false,\n    parent: parent,\n    method: uri.method,\n    path: uri.path,\n    host: uri.host,\n    priority: uri.priority,\n    headers: uri.headers,\n    readable: false\n  })\n\n  var err\n\n  // TODO(indutny): deduplicate this logic somehow\n  if (this._isGoaway(stream.id)) {\n    err = new Error('Can\\'t send PUSH_PROMISE after GOAWAY')\n\n    process.nextTick(function () {\n      if (callback) {\n        callback(err)\n      } else {\n        stream.emit('error', err)\n      }\n    })\n    return stream\n  }\n\n  if (uri.push && !state.acceptPush) {\n    err = new Error(\n      'Can\\'t send PUSH_PROMISE, other side won\\'t accept it')\n    process.nextTick(function () {\n      if (callback) { callback(err) } else {\n        stream.emit('error', err)\n      }\n    })\n    return stream\n  }\n\n  stream._sendPush(uri.status, uri.response, function (err) {\n    if (!callback) {\n      if (err) {\n        stream.emit('error', err)\n      }\n      return\n    }\n\n    if (err) { return callback(err) }\n    callback(null, stream)\n  })\n\n  return stream\n}\n\nConnection.prototype.setTimeout = function setTimeout (delay, callback) {\n  var state = this._spdyState\n\n  state.timeout.set(delay, callback)\n}\n"]},"metadata":{},"sourceType":"script"}