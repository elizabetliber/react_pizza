{"ast":null,"code":"'use strict';\n\nvar Event = require('./event');\n\nvar EventTarget = {\n  onopen: null,\n  onmessage: null,\n  onerror: null,\n  onclose: null,\n  addEventListener: function (eventType, listener, useCapture) {\n    this.on(eventType, listener);\n  },\n  removeEventListener: function (eventType, listener, useCapture) {\n    this.removeListener(eventType, listener);\n  },\n  dispatchEvent: function (event) {\n    event.target = event.currentTarget = this;\n    event.eventPhase = Event.AT_TARGET;\n    if (this['on' + event.type]) this['on' + event.type](event);\n    this.emit(event.type, event);\n  }\n};\nmodule.exports = EventTarget;","map":{"version":3,"sources":["/home/lisa/VSProjects/react-pizza/react_pizza/node_modules/faye-websocket/lib/faye/websocket/api/event_target.js"],"names":["Event","require","EventTarget","onopen","onmessage","onerror","onclose","addEventListener","eventType","listener","useCapture","on","removeEventListener","removeListener","dispatchEvent","event","target","currentTarget","eventPhase","AT_TARGET","type","emit","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAM,IADI;AAEhBC,EAAAA,SAAS,EAAG,IAFI;AAGhBC,EAAAA,OAAO,EAAK,IAHI;AAIhBC,EAAAA,OAAO,EAAK,IAJI;AAMhBC,EAAAA,gBAAgB,EAAE,UAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0C;AAC1D,SAAKC,EAAL,CAAQH,SAAR,EAAmBC,QAAnB;AACD,GARe;AAUhBG,EAAAA,mBAAmB,EAAE,UAASJ,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0C;AAC7D,SAAKG,cAAL,CAAoBL,SAApB,EAA+BC,QAA/B;AACD,GAZe;AAchBK,EAAAA,aAAa,EAAE,UAASC,KAAT,EAAgB;AAC7BA,IAAAA,KAAK,CAACC,MAAN,GAAeD,KAAK,CAACE,aAAN,GAAsB,IAArC;AACAF,IAAAA,KAAK,CAACG,UAAN,GAAmBlB,KAAK,CAACmB,SAAzB;AAEA,QAAI,KAAK,OAAOJ,KAAK,CAACK,IAAlB,CAAJ,EACE,KAAK,OAAOL,KAAK,CAACK,IAAlB,EAAwBL,KAAxB;AAEF,SAAKM,IAAL,CAAUN,KAAK,CAACK,IAAhB,EAAsBL,KAAtB;AACD;AAtBe,CAAlB;AAyBAO,MAAM,CAACC,OAAP,GAAiBrB,WAAjB","sourcesContent":["'use strict';\n\nvar Event = require('./event');\n\nvar EventTarget = {\n  onopen:     null,\n  onmessage:  null,\n  onerror:    null,\n  onclose:    null,\n\n  addEventListener: function(eventType, listener, useCapture) {\n    this.on(eventType, listener);\n  },\n\n  removeEventListener: function(eventType, listener, useCapture) {\n    this.removeListener(eventType, listener);\n  },\n\n  dispatchEvent: function(event) {\n    event.target = event.currentTarget = this;\n    event.eventPhase = Event.AT_TARGET;\n\n    if (this['on' + event.type])\n      this['on' + event.type](event);\n\n    this.emit(event.type, event);\n  }\n};\n\nmodule.exports = EventTarget;\n"]},"metadata":{},"sourceType":"script"}