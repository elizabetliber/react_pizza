{"ast":null,"code":"var types = require('./types');\n\nvar rcodes = require('./rcodes');\n\nvar opcodes = require('./opcodes');\n\nvar ip = require('ip');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar QUERY_FLAG = 0;\nvar RESPONSE_FLAG = 1 << 15;\nvar FLUSH_MASK = 1 << 15;\nvar NOT_FLUSH_MASK = ~FLUSH_MASK;\nvar QU_MASK = 1 << 15;\nvar NOT_QU_MASK = ~QU_MASK;\nvar name = exports.txt = exports.name = {};\n\nname.encode = function (str, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(name.encodingLength(str));\n  if (!offset) offset = 0;\n  var oldOffset = offset; // strip leading and trailing .\n\n  var n = str.replace(/^\\.|\\.$/gm, '');\n\n  if (n.length) {\n    var list = n.split('.');\n\n    for (var i = 0; i < list.length; i++) {\n      var len = buf.write(list[i], offset + 1);\n      buf[offset] = len;\n      offset += len + 1;\n    }\n  }\n\n  buf[offset++] = 0;\n  name.encode.bytes = offset - oldOffset;\n  return buf;\n};\n\nname.encode.bytes = 0;\n\nname.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var list = [];\n  var oldOffset = offset;\n  var len = buf[offset++];\n\n  if (len === 0) {\n    name.decode.bytes = 1;\n    return '.';\n  }\n\n  if (len >= 0xc0) {\n    var res = name.decode(buf, buf.readUInt16BE(offset - 1) - 0xc000);\n    name.decode.bytes = 2;\n    return res;\n  }\n\n  while (len) {\n    if (len >= 0xc0) {\n      list.push(name.decode(buf, buf.readUInt16BE(offset - 1) - 0xc000));\n      offset++;\n      break;\n    }\n\n    list.push(buf.toString('utf-8', offset, offset + len));\n    offset += len;\n    len = buf[offset++];\n  }\n\n  name.decode.bytes = offset - oldOffset;\n  return list.join('.');\n};\n\nname.decode.bytes = 0;\n\nname.encodingLength = function (n) {\n  return Buffer.byteLength(n) + 2;\n};\n\nvar string = {};\n\nstring.encode = function (s, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(string.encodingLength(s));\n  if (!offset) offset = 0;\n  var len = buf.write(s, offset + 1);\n  buf[offset] = len;\n  string.encode.bytes = len + 1;\n  return buf;\n};\n\nstring.encode.bytes = 0;\n\nstring.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var len = buf[offset];\n  var s = buf.toString('utf-8', offset + 1, offset + 1 + len);\n  string.decode.bytes = len + 1;\n  return s;\n};\n\nstring.decode.bytes = 0;\n\nstring.encodingLength = function (s) {\n  return Buffer.byteLength(s) + 1;\n};\n\nvar header = {};\n\nheader.encode = function (h, buf, offset) {\n  if (!buf) buf = header.encodingLength(h);\n  if (!offset) offset = 0;\n  var flags = (h.flags || 0) & 32767;\n  var type = h.type === 'response' ? RESPONSE_FLAG : QUERY_FLAG;\n  buf.writeUInt16BE(h.id || 0, offset);\n  buf.writeUInt16BE(flags | type, offset + 2);\n  buf.writeUInt16BE(h.questions.length, offset + 4);\n  buf.writeUInt16BE(h.answers.length, offset + 6);\n  buf.writeUInt16BE(h.authorities.length, offset + 8);\n  buf.writeUInt16BE(h.additionals.length, offset + 10);\n  return buf;\n};\n\nheader.encode.bytes = 12;\n\nheader.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  if (buf.length < 12) throw new Error('Header must be 12 bytes');\n  var flags = buf.readUInt16BE(offset + 2);\n  return {\n    id: buf.readUInt16BE(offset),\n    type: flags & RESPONSE_FLAG ? 'response' : 'query',\n    flags: flags & 32767,\n    flag_qr: (flags >> 15 & 0x1) === 1,\n    opcode: opcodes.toString(flags >> 11 & 0xf),\n    flag_auth: (flags >> 10 & 0x1) === 1,\n    flag_trunc: (flags >> 9 & 0x1) === 1,\n    flag_rd: (flags >> 8 & 0x1) === 1,\n    flag_ra: (flags >> 7 & 0x1) === 1,\n    flag_z: (flags >> 6 & 0x1) === 1,\n    flag_ad: (flags >> 5 & 0x1) === 1,\n    flag_cd: (flags >> 4 & 0x1) === 1,\n    rcode: rcodes.toString(flags & 0xf),\n    questions: new Array(buf.readUInt16BE(offset + 4)),\n    answers: new Array(buf.readUInt16BE(offset + 6)),\n    authorities: new Array(buf.readUInt16BE(offset + 8)),\n    additionals: new Array(buf.readUInt16BE(offset + 10))\n  };\n};\n\nheader.decode.bytes = 12;\n\nheader.encodingLength = function () {\n  return 12;\n};\n\nvar runknown = exports.unknown = {};\n\nrunknown.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(runknown.encodingLength(data));\n  if (!offset) offset = 0;\n  buf.writeUInt16BE(data.length, offset);\n  data.copy(buf, offset + 2);\n  runknown.encode.bytes = data.length + 2;\n  return buf;\n};\n\nrunknown.encode.bytes = 0;\n\nrunknown.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var len = buf.readUInt16BE(offset);\n  var data = buf.slice(offset + 2, offset + 2 + len);\n  runknown.decode.bytes = len + 2;\n  return data;\n};\n\nrunknown.decode.bytes = 0;\n\nrunknown.encodingLength = function (data) {\n  return data.length + 2;\n};\n\nvar rns = exports.ns = {};\n\nrns.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(rns.encodingLength(data));\n  if (!offset) offset = 0;\n  name.encode(data, buf, offset + 2);\n  buf.writeUInt16BE(name.encode.bytes, offset);\n  rns.encode.bytes = name.encode.bytes + 2;\n  return buf;\n};\n\nrns.encode.bytes = 0;\n\nrns.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var len = buf.readUInt16BE(offset);\n  var dd = name.decode(buf, offset + 2);\n  rns.decode.bytes = len + 2;\n  return dd;\n};\n\nrns.decode.bytes = 0;\n\nrns.encodingLength = function (data) {\n  return name.encodingLength(data) + 2;\n};\n\nvar rsoa = exports.soa = {};\n\nrsoa.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(rsoa.encodingLength(data));\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  offset += 2;\n  name.encode(data.mname, buf, offset);\n  offset += name.encode.bytes;\n  name.encode(data.rname, buf, offset);\n  offset += name.encode.bytes;\n  buf.writeUInt32BE(data.serial || 0, offset);\n  offset += 4;\n  buf.writeUInt32BE(data.refresh || 0, offset);\n  offset += 4;\n  buf.writeUInt32BE(data.retry || 0, offset);\n  offset += 4;\n  buf.writeUInt32BE(data.expire || 0, offset);\n  offset += 4;\n  buf.writeUInt32BE(data.minimum || 0, offset);\n  offset += 4;\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset);\n  rsoa.encode.bytes = offset - oldOffset;\n  return buf;\n};\n\nrsoa.encode.bytes = 0;\n\nrsoa.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  var data = {};\n  offset += 2;\n  data.mname = name.decode(buf, offset);\n  offset += name.decode.bytes;\n  data.rname = name.decode(buf, offset);\n  offset += name.decode.bytes;\n  data.serial = buf.readUInt32BE(offset);\n  offset += 4;\n  data.refresh = buf.readUInt32BE(offset);\n  offset += 4;\n  data.retry = buf.readUInt32BE(offset);\n  offset += 4;\n  data.expire = buf.readUInt32BE(offset);\n  offset += 4;\n  data.minimum = buf.readUInt32BE(offset);\n  offset += 4;\n  rsoa.decode.bytes = offset - oldOffset;\n  return data;\n};\n\nrsoa.decode.bytes = 0;\n\nrsoa.encodingLength = function (data) {\n  return 22 + name.encodingLength(data.mname) + name.encodingLength(data.rname);\n};\n\nvar rtxt = exports.txt = exports.null = {};\nvar rnull = rtxt;\n\nrtxt.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(rtxt.encodingLength(data));\n  if (!offset) offset = 0;\n  if (typeof data === 'string') data = Buffer.from(data);\n  if (!data) data = Buffer.allocUnsafe(0);\n  var oldOffset = offset;\n  offset += 2;\n  var len = data.length;\n  data.copy(buf, offset, 0, len);\n  offset += len;\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset);\n  rtxt.encode.bytes = offset - oldOffset;\n  return buf;\n};\n\nrtxt.encode.bytes = 0;\n\nrtxt.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  var len = buf.readUInt16BE(offset);\n  offset += 2;\n  var data = buf.slice(offset, offset + len);\n  offset += len;\n  rtxt.decode.bytes = offset - oldOffset;\n  return data;\n};\n\nrtxt.decode.bytes = 0;\n\nrtxt.encodingLength = function (data) {\n  if (!data) return 2;\n  return (Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data)) + 2;\n};\n\nvar rhinfo = exports.hinfo = {};\n\nrhinfo.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(rhinfo.encodingLength(data));\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  offset += 2;\n  string.encode(data.cpu, buf, offset);\n  offset += string.encode.bytes;\n  string.encode(data.os, buf, offset);\n  offset += string.encode.bytes;\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset);\n  rhinfo.encode.bytes = offset - oldOffset;\n  return buf;\n};\n\nrhinfo.encode.bytes = 0;\n\nrhinfo.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  var data = {};\n  offset += 2;\n  data.cpu = string.decode(buf, offset);\n  offset += string.decode.bytes;\n  data.os = string.decode(buf, offset);\n  offset += string.decode.bytes;\n  rhinfo.decode.bytes = offset - oldOffset;\n  return data;\n};\n\nrhinfo.decode.bytes = 0;\n\nrhinfo.encodingLength = function (data) {\n  return string.encodingLength(data.cpu) + string.encodingLength(data.os) + 2;\n};\n\nvar rptr = exports.ptr = {};\nvar rcname = exports.cname = rptr;\nvar rdname = exports.dname = rptr;\n\nrptr.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(rptr.encodingLength(data));\n  if (!offset) offset = 0;\n  name.encode(data, buf, offset + 2);\n  buf.writeUInt16BE(name.encode.bytes, offset);\n  rptr.encode.bytes = name.encode.bytes + 2;\n  return buf;\n};\n\nrptr.encode.bytes = 0;\n\nrptr.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var data = name.decode(buf, offset + 2);\n  rptr.decode.bytes = name.decode.bytes + 2;\n  return data;\n};\n\nrptr.decode.bytes = 0;\n\nrptr.encodingLength = function (data) {\n  return name.encodingLength(data) + 2;\n};\n\nvar rsrv = exports.srv = {};\n\nrsrv.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(rsrv.encodingLength(data));\n  if (!offset) offset = 0;\n  buf.writeUInt16BE(data.priority || 0, offset + 2);\n  buf.writeUInt16BE(data.weight || 0, offset + 4);\n  buf.writeUInt16BE(data.port || 0, offset + 6);\n  name.encode(data.target, buf, offset + 8);\n  var len = name.encode.bytes + 6;\n  buf.writeUInt16BE(len, offset);\n  rsrv.encode.bytes = len + 2;\n  return buf;\n};\n\nrsrv.encode.bytes = 0;\n\nrsrv.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var len = buf.readUInt16BE(offset);\n  var data = {};\n  data.priority = buf.readUInt16BE(offset + 2);\n  data.weight = buf.readUInt16BE(offset + 4);\n  data.port = buf.readUInt16BE(offset + 6);\n  data.target = name.decode(buf, offset + 8);\n  rsrv.decode.bytes = len + 2;\n  return data;\n};\n\nrsrv.decode.bytes = 0;\n\nrsrv.encodingLength = function (data) {\n  return 8 + name.encodingLength(data.target);\n};\n\nvar rcaa = exports.caa = {};\nrcaa.ISSUER_CRITICAL = 1 << 7;\n\nrcaa.encode = function (data, buf, offset) {\n  var len = rcaa.encodingLength(data);\n  if (!buf) buf = Buffer.allocUnsafe(rcaa.encodingLength(data));\n  if (!offset) offset = 0;\n\n  if (data.issuerCritical) {\n    data.flags = rcaa.ISSUER_CRITICAL;\n  }\n\n  buf.writeUInt16BE(len - 2, offset);\n  offset += 2;\n  buf.writeUInt8(data.flags || 0, offset);\n  offset += 1;\n  string.encode(data.tag, buf, offset);\n  offset += string.encode.bytes;\n  buf.write(data.value, offset);\n  offset += Buffer.byteLength(data.value);\n  rcaa.encode.bytes = len;\n  return buf;\n};\n\nrcaa.encode.bytes = 0;\n\nrcaa.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var len = buf.readUInt16BE(offset);\n  offset += 2;\n  var oldOffset = offset;\n  var data = {};\n  data.flags = buf.readUInt8(offset);\n  offset += 1;\n  data.tag = string.decode(buf, offset);\n  offset += string.decode.bytes;\n  data.value = buf.toString('utf-8', offset, oldOffset + len);\n  data.issuerCritical = !!(data.flags & rcaa.ISSUER_CRITICAL);\n  rcaa.decode.bytes = len + 2;\n  return data;\n};\n\nrcaa.decode.bytes = 0;\n\nrcaa.encodingLength = function (data) {\n  return string.encodingLength(data.tag) + string.encodingLength(data.value) + 2;\n};\n\nvar ra = exports.a = {};\n\nra.encode = function (host, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(ra.encodingLength(host));\n  if (!offset) offset = 0;\n  buf.writeUInt16BE(4, offset);\n  offset += 2;\n  ip.toBuffer(host, buf, offset);\n  ra.encode.bytes = 6;\n  return buf;\n};\n\nra.encode.bytes = 0;\n\nra.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  offset += 2;\n  var host = ip.toString(buf, offset, 4);\n  ra.decode.bytes = 6;\n  return host;\n};\n\nra.decode.bytes = 0;\n\nra.encodingLength = function () {\n  return 6;\n};\n\nvar raaaa = exports.aaaa = {};\n\nraaaa.encode = function (host, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(raaaa.encodingLength(host));\n  if (!offset) offset = 0;\n  buf.writeUInt16BE(16, offset);\n  offset += 2;\n  ip.toBuffer(host, buf, offset);\n  raaaa.encode.bytes = 18;\n  return buf;\n};\n\nraaaa.encode.bytes = 0;\n\nraaaa.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  offset += 2;\n  var host = ip.toString(buf, offset, 16);\n  raaaa.decode.bytes = 18;\n  return host;\n};\n\nraaaa.decode.bytes = 0;\n\nraaaa.encodingLength = function () {\n  return 18;\n};\n\nvar renc = exports.record = function (type) {\n  switch (type.toUpperCase()) {\n    case 'A':\n      return ra;\n\n    case 'PTR':\n      return rptr;\n\n    case 'CNAME':\n      return rcname;\n\n    case 'DNAME':\n      return rdname;\n\n    case 'TXT':\n      return rtxt;\n\n    case 'NULL':\n      return rnull;\n\n    case 'AAAA':\n      return raaaa;\n\n    case 'SRV':\n      return rsrv;\n\n    case 'HINFO':\n      return rhinfo;\n\n    case 'CAA':\n      return rcaa;\n\n    case 'NS':\n      return rns;\n\n    case 'SOA':\n      return rsoa;\n  }\n\n  return runknown;\n};\n\nvar answer = exports.answer = {};\n\nanswer.encode = function (a, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(answer.encodingLength(a));\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  name.encode(a.name, buf, offset);\n  offset += name.encode.bytes;\n  buf.writeUInt16BE(types.toType(a.type), offset);\n  var klass = a.class === undefined ? 1 : a.class;\n  if (a.flush) klass |= FLUSH_MASK; // the 1st bit of the class is the flush bit\n\n  buf.writeUInt16BE(klass, offset + 2);\n  buf.writeUInt32BE(a.ttl || 0, offset + 4);\n  var enc = renc(a.type);\n  enc.encode(a.data, buf, offset + 8);\n  offset += 8 + enc.encode.bytes;\n  answer.encode.bytes = offset - oldOffset;\n  return buf;\n};\n\nanswer.encode.bytes = 0;\n\nanswer.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var a = {};\n  var oldOffset = offset;\n  a.name = name.decode(buf, offset);\n  offset += name.decode.bytes;\n  a.type = types.toString(buf.readUInt16BE(offset));\n  a.class = buf.readUInt16BE(offset + 2);\n  a.ttl = buf.readUInt32BE(offset + 4);\n  a.flush = !!(a.class & FLUSH_MASK);\n  if (a.flush) a.class &= NOT_FLUSH_MASK;\n  var enc = renc(a.type);\n  a.data = enc.decode(buf, offset + 8);\n  offset += 8 + enc.decode.bytes;\n  answer.decode.bytes = offset - oldOffset;\n  return a;\n};\n\nanswer.decode.bytes = 0;\n\nanswer.encodingLength = function (a) {\n  return name.encodingLength(a.name) + 8 + renc(a.type).encodingLength(a.data);\n};\n\nvar question = exports.question = {};\n\nquestion.encode = function (q, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(question.encodingLength(q));\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  name.encode(q.name, buf, offset);\n  offset += name.encode.bytes;\n  buf.writeUInt16BE(types.toType(q.type), offset);\n  offset += 2;\n  buf.writeUInt16BE(q.class === undefined ? 1 : q.class, offset);\n  offset += 2;\n  question.encode.bytes = offset - oldOffset;\n  return q;\n};\n\nquestion.encode.bytes = 0;\n\nquestion.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  var q = {};\n  q.name = name.decode(buf, offset);\n  offset += name.decode.bytes;\n  q.type = types.toString(buf.readUInt16BE(offset));\n  offset += 2;\n  q.class = buf.readUInt16BE(offset);\n  offset += 2;\n  var qu = !!(q.class & QU_MASK);\n  if (qu) q.class &= NOT_QU_MASK;\n  question.decode.bytes = offset - oldOffset;\n  return q;\n};\n\nquestion.decode.bytes = 0;\n\nquestion.encodingLength = function (q) {\n  return name.encodingLength(q.name) + 4;\n};\n\nexports.AUTHORITATIVE_ANSWER = 1 << 10;\nexports.TRUNCATED_RESPONSE = 1 << 9;\nexports.RECURSION_DESIRED = 1 << 8;\nexports.RECURSION_AVAILABLE = 1 << 7;\nexports.AUTHENTIC_DATA = 1 << 5;\nexports.CHECKING_DISABLED = 1 << 4;\n\nexports.encode = function (result, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(exports.encodingLength(result));\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  if (!result.questions) result.questions = [];\n  if (!result.answers) result.answers = [];\n  if (!result.authorities) result.authorities = [];\n  if (!result.additionals) result.additionals = [];\n  header.encode(result, buf, offset);\n  offset += header.encode.bytes;\n  offset = encodeList(result.questions, question, buf, offset);\n  offset = encodeList(result.answers, answer, buf, offset);\n  offset = encodeList(result.authorities, answer, buf, offset);\n  offset = encodeList(result.additionals, answer, buf, offset);\n  exports.encode.bytes = offset - oldOffset;\n  return buf;\n};\n\nexports.encode.bytes = 0;\n\nexports.decode = function (buf, offset) {\n  if (!offset) offset = 0;\n  var oldOffset = offset;\n  var result = header.decode(buf, offset);\n  offset += header.decode.bytes;\n  offset = decodeList(result.questions, question, buf, offset);\n  offset = decodeList(result.answers, answer, buf, offset);\n  offset = decodeList(result.authorities, answer, buf, offset);\n  offset = decodeList(result.additionals, answer, buf, offset);\n  exports.decode.bytes = offset - oldOffset;\n  return result;\n};\n\nexports.decode.bytes = 0;\n\nexports.encodingLength = function (result) {\n  return header.encodingLength(result) + encodingLengthList(result.questions || [], question) + encodingLengthList(result.answers || [], answer) + encodingLengthList(result.authorities || [], answer) + encodingLengthList(result.additionals || [], answer);\n};\n\nfunction encodingLengthList(list, enc) {\n  var len = 0;\n\n  for (var i = 0; i < list.length; i++) len += enc.encodingLength(list[i]);\n\n  return len;\n}\n\nfunction encodeList(list, enc, buf, offset) {\n  for (var i = 0; i < list.length; i++) {\n    enc.encode(list[i], buf, offset);\n    offset += enc.encode.bytes;\n  }\n\n  return offset;\n}\n\nfunction decodeList(list, enc, buf, offset) {\n  for (var i = 0; i < list.length; i++) {\n    list[i] = enc.decode(buf, offset);\n    offset += enc.decode.bytes;\n  }\n\n  return offset;\n}","map":{"version":3,"sources":["/home/lisa/VSProjects/react-pizza/react_pizza/node_modules/dns-packet/index.js"],"names":["types","require","rcodes","opcodes","ip","Buffer","QUERY_FLAG","RESPONSE_FLAG","FLUSH_MASK","NOT_FLUSH_MASK","QU_MASK","NOT_QU_MASK","name","exports","txt","encode","str","buf","offset","allocUnsafe","encodingLength","oldOffset","n","replace","length","list","split","i","len","write","bytes","decode","res","readUInt16BE","push","toString","join","byteLength","string","s","header","h","flags","type","writeUInt16BE","id","questions","answers","authorities","additionals","Error","flag_qr","opcode","flag_auth","flag_trunc","flag_rd","flag_ra","flag_z","flag_ad","flag_cd","rcode","Array","runknown","unknown","data","copy","slice","rns","ns","dd","rsoa","soa","mname","rname","writeUInt32BE","serial","refresh","retry","expire","minimum","readUInt32BE","rtxt","null","rnull","from","isBuffer","rhinfo","hinfo","cpu","os","rptr","ptr","rcname","cname","rdname","dname","rsrv","srv","priority","weight","port","target","rcaa","caa","ISSUER_CRITICAL","issuerCritical","writeUInt8","tag","value","readUInt8","ra","a","host","toBuffer","raaaa","aaaa","renc","record","toUpperCase","answer","toType","klass","class","undefined","flush","ttl","enc","question","q","qu","AUTHORITATIVE_ANSWER","TRUNCATED_RESPONSE","RECURSION_DESIRED","RECURSION_AVAILABLE","AUTHENTIC_DATA","CHECKING_DISABLED","result","encodeList","decodeList","encodingLengthList"],"mappings":"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","sourcesContent":["var types = require('./types')\nvar rcodes = require('./rcodes')\nvar opcodes = require('./opcodes')\nvar ip = require('ip')\nvar Buffer = require('safe-buffer').Buffer\n\nvar QUERY_FLAG = 0\nvar RESPONSE_FLAG = 1 << 15\nvar FLUSH_MASK = 1 << 15\nvar NOT_FLUSH_MASK = ~FLUSH_MASK\nvar QU_MASK = 1 << 15\nvar NOT_QU_MASK = ~QU_MASK\n\nvar name = exports.txt = exports.name = {}\n\nname.encode = function (str, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(name.encodingLength(str))\n  if (!offset) offset = 0\n  var oldOffset = offset\n\n  // strip leading and trailing .\n  var n = str.replace(/^\\.|\\.$/gm, '')\n  if (n.length) {\n    var list = n.split('.')\n\n    for (var i = 0; i < list.length; i++) {\n      var len = buf.write(list[i], offset + 1)\n      buf[offset] = len\n      offset += len + 1\n    }\n  }\n\n  buf[offset++] = 0\n\n  name.encode.bytes = offset - oldOffset\n  return buf\n}\n\nname.encode.bytes = 0\n\nname.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var list = []\n  var oldOffset = offset\n  var len = buf[offset++]\n\n  if (len === 0) {\n    name.decode.bytes = 1\n    return '.'\n  }\n  if (len >= 0xc0) {\n    var res = name.decode(buf, buf.readUInt16BE(offset - 1) - 0xc000)\n    name.decode.bytes = 2\n    return res\n  }\n\n  while (len) {\n    if (len >= 0xc0) {\n      list.push(name.decode(buf, buf.readUInt16BE(offset - 1) - 0xc000))\n      offset++\n      break\n    }\n\n    list.push(buf.toString('utf-8', offset, offset + len))\n    offset += len\n    len = buf[offset++]\n  }\n\n  name.decode.bytes = offset - oldOffset\n  return list.join('.')\n}\n\nname.decode.bytes = 0\n\nname.encodingLength = function (n) {\n  return Buffer.byteLength(n) + 2\n}\n\nvar string = {}\n\nstring.encode = function (s, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(string.encodingLength(s))\n  if (!offset) offset = 0\n\n  var len = buf.write(s, offset + 1)\n  buf[offset] = len\n  string.encode.bytes = len + 1\n  return buf\n}\n\nstring.encode.bytes = 0\n\nstring.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf[offset]\n  var s = buf.toString('utf-8', offset + 1, offset + 1 + len)\n  string.decode.bytes = len + 1\n  return s\n}\n\nstring.decode.bytes = 0\n\nstring.encodingLength = function (s) {\n  return Buffer.byteLength(s) + 1\n}\n\nvar header = {}\n\nheader.encode = function (h, buf, offset) {\n  if (!buf) buf = header.encodingLength(h)\n  if (!offset) offset = 0\n\n  var flags = (h.flags || 0) & 32767\n  var type = h.type === 'response' ? RESPONSE_FLAG : QUERY_FLAG\n\n  buf.writeUInt16BE(h.id || 0, offset)\n  buf.writeUInt16BE(flags | type, offset + 2)\n  buf.writeUInt16BE(h.questions.length, offset + 4)\n  buf.writeUInt16BE(h.answers.length, offset + 6)\n  buf.writeUInt16BE(h.authorities.length, offset + 8)\n  buf.writeUInt16BE(h.additionals.length, offset + 10)\n\n  return buf\n}\n\nheader.encode.bytes = 12\n\nheader.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  if (buf.length < 12) throw new Error('Header must be 12 bytes')\n  var flags = buf.readUInt16BE(offset + 2)\n\n  return {\n    id: buf.readUInt16BE(offset),\n    type: flags & RESPONSE_FLAG ? 'response' : 'query',\n    flags: flags & 32767,\n    flag_qr: ((flags >> 15) & 0x1) === 1,\n    opcode: opcodes.toString((flags >> 11) & 0xf),\n    flag_auth: ((flags >> 10) & 0x1) === 1,\n    flag_trunc: ((flags >> 9) & 0x1) === 1,\n    flag_rd: ((flags >> 8) & 0x1) === 1,\n    flag_ra: ((flags >> 7) & 0x1) === 1,\n    flag_z: ((flags >> 6) & 0x1) === 1,\n    flag_ad: ((flags >> 5) & 0x1) === 1,\n    flag_cd: ((flags >> 4) & 0x1) === 1,\n    rcode: rcodes.toString(flags & 0xf),\n    questions: new Array(buf.readUInt16BE(offset + 4)),\n    answers: new Array(buf.readUInt16BE(offset + 6)),\n    authorities: new Array(buf.readUInt16BE(offset + 8)),\n    additionals: new Array(buf.readUInt16BE(offset + 10))\n  }\n}\n\nheader.decode.bytes = 12\n\nheader.encodingLength = function () {\n  return 12\n}\n\nvar runknown = exports.unknown = {}\n\nrunknown.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(runknown.encodingLength(data))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(data.length, offset)\n  data.copy(buf, offset + 2)\n\n  runknown.encode.bytes = data.length + 2\n  return buf\n}\n\nrunknown.encode.bytes = 0\n\nrunknown.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf.readUInt16BE(offset)\n  var data = buf.slice(offset + 2, offset + 2 + len)\n  runknown.decode.bytes = len + 2\n  return data\n}\n\nrunknown.decode.bytes = 0\n\nrunknown.encodingLength = function (data) {\n  return data.length + 2\n}\n\nvar rns = exports.ns = {}\n\nrns.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(rns.encodingLength(data))\n  if (!offset) offset = 0\n\n  name.encode(data, buf, offset + 2)\n  buf.writeUInt16BE(name.encode.bytes, offset)\n  rns.encode.bytes = name.encode.bytes + 2\n  return buf\n}\n\nrns.encode.bytes = 0\n\nrns.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf.readUInt16BE(offset)\n  var dd = name.decode(buf, offset + 2)\n\n  rns.decode.bytes = len + 2\n  return dd\n}\n\nrns.decode.bytes = 0\n\nrns.encodingLength = function (data) {\n  return name.encodingLength(data) + 2\n}\n\nvar rsoa = exports.soa = {}\n\nrsoa.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(rsoa.encodingLength(data))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n  offset += 2\n  name.encode(data.mname, buf, offset)\n  offset += name.encode.bytes\n  name.encode(data.rname, buf, offset)\n  offset += name.encode.bytes\n  buf.writeUInt32BE(data.serial || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.refresh || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.retry || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.expire || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.minimum || 0, offset)\n  offset += 4\n\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rsoa.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrsoa.encode.bytes = 0\n\nrsoa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  var data = {}\n  offset += 2\n  data.mname = name.decode(buf, offset)\n  offset += name.decode.bytes\n  data.rname = name.decode(buf, offset)\n  offset += name.decode.bytes\n  data.serial = buf.readUInt32BE(offset)\n  offset += 4\n  data.refresh = buf.readUInt32BE(offset)\n  offset += 4\n  data.retry = buf.readUInt32BE(offset)\n  offset += 4\n  data.expire = buf.readUInt32BE(offset)\n  offset += 4\n  data.minimum = buf.readUInt32BE(offset)\n  offset += 4\n\n  rsoa.decode.bytes = offset - oldOffset\n  return data\n}\n\nrsoa.decode.bytes = 0\n\nrsoa.encodingLength = function (data) {\n  return 22 + name.encodingLength(data.mname) + name.encodingLength(data.rname)\n}\n\nvar rtxt = exports.txt = exports.null = {}\nvar rnull = rtxt\n\nrtxt.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(rtxt.encodingLength(data))\n  if (!offset) offset = 0\n\n  if (typeof data === 'string') data = Buffer.from(data)\n  if (!data) data = Buffer.allocUnsafe(0)\n\n  var oldOffset = offset\n  offset += 2\n\n  var len = data.length\n  data.copy(buf, offset, 0, len)\n  offset += len\n\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rtxt.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrtxt.encode.bytes = 0\n\nrtxt.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  var oldOffset = offset\n  var len = buf.readUInt16BE(offset)\n\n  offset += 2\n\n  var data = buf.slice(offset, offset + len)\n  offset += len\n\n  rtxt.decode.bytes = offset - oldOffset\n  return data\n}\n\nrtxt.decode.bytes = 0\n\nrtxt.encodingLength = function (data) {\n  if (!data) return 2\n  return (Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data)) + 2\n}\n\nvar rhinfo = exports.hinfo = {}\n\nrhinfo.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(rhinfo.encodingLength(data))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n  offset += 2\n  string.encode(data.cpu, buf, offset)\n  offset += string.encode.bytes\n  string.encode(data.os, buf, offset)\n  offset += string.encode.bytes\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rhinfo.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrhinfo.encode.bytes = 0\n\nrhinfo.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  var data = {}\n  offset += 2\n  data.cpu = string.decode(buf, offset)\n  offset += string.decode.bytes\n  data.os = string.decode(buf, offset)\n  offset += string.decode.bytes\n  rhinfo.decode.bytes = offset - oldOffset\n  return data\n}\n\nrhinfo.decode.bytes = 0\n\nrhinfo.encodingLength = function (data) {\n  return string.encodingLength(data.cpu) + string.encodingLength(data.os) + 2\n}\n\nvar rptr = exports.ptr = {}\nvar rcname = exports.cname = rptr\nvar rdname = exports.dname = rptr\n\nrptr.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(rptr.encodingLength(data))\n  if (!offset) offset = 0\n\n  name.encode(data, buf, offset + 2)\n  buf.writeUInt16BE(name.encode.bytes, offset)\n  rptr.encode.bytes = name.encode.bytes + 2\n  return buf\n}\n\nrptr.encode.bytes = 0\n\nrptr.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var data = name.decode(buf, offset + 2)\n  rptr.decode.bytes = name.decode.bytes + 2\n  return data\n}\n\nrptr.decode.bytes = 0\n\nrptr.encodingLength = function (data) {\n  return name.encodingLength(data) + 2\n}\n\nvar rsrv = exports.srv = {}\n\nrsrv.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(rsrv.encodingLength(data))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(data.priority || 0, offset + 2)\n  buf.writeUInt16BE(data.weight || 0, offset + 4)\n  buf.writeUInt16BE(data.port || 0, offset + 6)\n  name.encode(data.target, buf, offset + 8)\n\n  var len = name.encode.bytes + 6\n  buf.writeUInt16BE(len, offset)\n\n  rsrv.encode.bytes = len + 2\n  return buf\n}\n\nrsrv.encode.bytes = 0\n\nrsrv.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf.readUInt16BE(offset)\n\n  var data = {}\n  data.priority = buf.readUInt16BE(offset + 2)\n  data.weight = buf.readUInt16BE(offset + 4)\n  data.port = buf.readUInt16BE(offset + 6)\n  data.target = name.decode(buf, offset + 8)\n\n  rsrv.decode.bytes = len + 2\n  return data\n}\n\nrsrv.decode.bytes = 0\n\nrsrv.encodingLength = function (data) {\n  return 8 + name.encodingLength(data.target)\n}\n\nvar rcaa = exports.caa = {}\n\nrcaa.ISSUER_CRITICAL = 1 << 7\n\nrcaa.encode = function (data, buf, offset) {\n  var len = rcaa.encodingLength(data)\n\n  if (!buf) buf = Buffer.allocUnsafe(rcaa.encodingLength(data))\n  if (!offset) offset = 0\n\n  if (data.issuerCritical) {\n    data.flags = rcaa.ISSUER_CRITICAL\n  }\n\n  buf.writeUInt16BE(len - 2, offset)\n  offset += 2\n  buf.writeUInt8(data.flags || 0, offset)\n  offset += 1\n  string.encode(data.tag, buf, offset)\n  offset += string.encode.bytes\n  buf.write(data.value, offset)\n  offset += Buffer.byteLength(data.value)\n\n  rcaa.encode.bytes = len\n  return buf\n}\n\nrcaa.encode.bytes = 0\n\nrcaa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf.readUInt16BE(offset)\n  offset += 2\n\n  var oldOffset = offset\n  var data = {}\n  data.flags = buf.readUInt8(offset)\n  offset += 1\n  data.tag = string.decode(buf, offset)\n  offset += string.decode.bytes\n  data.value = buf.toString('utf-8', offset, oldOffset + len)\n\n  data.issuerCritical = !!(data.flags & rcaa.ISSUER_CRITICAL)\n\n  rcaa.decode.bytes = len + 2\n\n  return data\n}\n\nrcaa.decode.bytes = 0\n\nrcaa.encodingLength = function (data) {\n  return string.encodingLength(data.tag) + string.encodingLength(data.value) + 2\n}\n\nvar ra = exports.a = {}\n\nra.encode = function (host, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(ra.encodingLength(host))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(4, offset)\n  offset += 2\n  ip.toBuffer(host, buf, offset)\n  ra.encode.bytes = 6\n  return buf\n}\n\nra.encode.bytes = 0\n\nra.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  offset += 2\n  var host = ip.toString(buf, offset, 4)\n  ra.decode.bytes = 6\n  return host\n}\n\nra.decode.bytes = 0\n\nra.encodingLength = function () {\n  return 6\n}\n\nvar raaaa = exports.aaaa = {}\n\nraaaa.encode = function (host, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(raaaa.encodingLength(host))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(16, offset)\n  offset += 2\n  ip.toBuffer(host, buf, offset)\n  raaaa.encode.bytes = 18\n  return buf\n}\n\nraaaa.encode.bytes = 0\n\nraaaa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  offset += 2\n  var host = ip.toString(buf, offset, 16)\n  raaaa.decode.bytes = 18\n  return host\n}\n\nraaaa.decode.bytes = 0\n\nraaaa.encodingLength = function () {\n  return 18\n}\n\nvar renc = exports.record = function (type) {\n  switch (type.toUpperCase()) {\n    case 'A': return ra\n    case 'PTR': return rptr\n    case 'CNAME': return rcname\n    case 'DNAME': return rdname\n    case 'TXT': return rtxt\n    case 'NULL': return rnull\n    case 'AAAA': return raaaa\n    case 'SRV': return rsrv\n    case 'HINFO': return rhinfo\n    case 'CAA': return rcaa\n    case 'NS': return rns\n    case 'SOA': return rsoa\n  }\n  return runknown\n}\n\nvar answer = exports.answer = {}\n\nanswer.encode = function (a, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(answer.encodingLength(a))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  name.encode(a.name, buf, offset)\n  offset += name.encode.bytes\n\n  buf.writeUInt16BE(types.toType(a.type), offset)\n\n  var klass = a.class === undefined ? 1 : a.class\n  if (a.flush) klass |= FLUSH_MASK // the 1st bit of the class is the flush bit\n  buf.writeUInt16BE(klass, offset + 2)\n\n  buf.writeUInt32BE(a.ttl || 0, offset + 4)\n\n  var enc = renc(a.type)\n  enc.encode(a.data, buf, offset + 8)\n  offset += 8 + enc.encode.bytes\n\n  answer.encode.bytes = offset - oldOffset\n  return buf\n}\n\nanswer.encode.bytes = 0\n\nanswer.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var a = {}\n  var oldOffset = offset\n\n  a.name = name.decode(buf, offset)\n  offset += name.decode.bytes\n  a.type = types.toString(buf.readUInt16BE(offset))\n  a.class = buf.readUInt16BE(offset + 2)\n  a.ttl = buf.readUInt32BE(offset + 4)\n\n  a.flush = !!(a.class & FLUSH_MASK)\n  if (a.flush) a.class &= NOT_FLUSH_MASK\n\n  var enc = renc(a.type)\n  a.data = enc.decode(buf, offset + 8)\n  offset += 8 + enc.decode.bytes\n\n  answer.decode.bytes = offset - oldOffset\n  return a\n}\n\nanswer.decode.bytes = 0\n\nanswer.encodingLength = function (a) {\n  return name.encodingLength(a.name) + 8 + renc(a.type).encodingLength(a.data)\n}\n\nvar question = exports.question = {}\n\nquestion.encode = function (q, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(question.encodingLength(q))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  name.encode(q.name, buf, offset)\n  offset += name.encode.bytes\n\n  buf.writeUInt16BE(types.toType(q.type), offset)\n  offset += 2\n\n  buf.writeUInt16BE(q.class === undefined ? 1 : q.class, offset)\n  offset += 2\n\n  question.encode.bytes = offset - oldOffset\n  return q\n}\n\nquestion.encode.bytes = 0\n\nquestion.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n  var q = {}\n\n  q.name = name.decode(buf, offset)\n  offset += name.decode.bytes\n\n  q.type = types.toString(buf.readUInt16BE(offset))\n  offset += 2\n\n  q.class = buf.readUInt16BE(offset)\n  offset += 2\n\n  var qu = !!(q.class & QU_MASK)\n  if (qu) q.class &= NOT_QU_MASK\n\n  question.decode.bytes = offset - oldOffset\n  return q\n}\n\nquestion.decode.bytes = 0\n\nquestion.encodingLength = function (q) {\n  return name.encodingLength(q.name) + 4\n}\n\nexports.AUTHORITATIVE_ANSWER = 1 << 10\nexports.TRUNCATED_RESPONSE = 1 << 9\nexports.RECURSION_DESIRED = 1 << 8\nexports.RECURSION_AVAILABLE = 1 << 7\nexports.AUTHENTIC_DATA = 1 << 5\nexports.CHECKING_DISABLED = 1 << 4\n\nexports.encode = function (result, buf, offset) {\n  if (!buf) buf = Buffer.allocUnsafe(exports.encodingLength(result))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  if (!result.questions) result.questions = []\n  if (!result.answers) result.answers = []\n  if (!result.authorities) result.authorities = []\n  if (!result.additionals) result.additionals = []\n\n  header.encode(result, buf, offset)\n  offset += header.encode.bytes\n\n  offset = encodeList(result.questions, question, buf, offset)\n  offset = encodeList(result.answers, answer, buf, offset)\n  offset = encodeList(result.authorities, answer, buf, offset)\n  offset = encodeList(result.additionals, answer, buf, offset)\n\n  exports.encode.bytes = offset - oldOffset\n\n  return buf\n}\n\nexports.encode.bytes = 0\n\nexports.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n  var result = header.decode(buf, offset)\n  offset += header.decode.bytes\n\n  offset = decodeList(result.questions, question, buf, offset)\n  offset = decodeList(result.answers, answer, buf, offset)\n  offset = decodeList(result.authorities, answer, buf, offset)\n  offset = decodeList(result.additionals, answer, buf, offset)\n\n  exports.decode.bytes = offset - oldOffset\n\n  return result\n}\n\nexports.decode.bytes = 0\n\nexports.encodingLength = function (result) {\n  return header.encodingLength(result) +\n    encodingLengthList(result.questions || [], question) +\n    encodingLengthList(result.answers || [], answer) +\n    encodingLengthList(result.authorities || [], answer) +\n    encodingLengthList(result.additionals || [], answer)\n}\n\nfunction encodingLengthList (list, enc) {\n  var len = 0\n  for (var i = 0; i < list.length; i++) len += enc.encodingLength(list[i])\n  return len\n}\n\nfunction encodeList (list, enc, buf, offset) {\n  for (var i = 0; i < list.length; i++) {\n    enc.encode(list[i], buf, offset)\n    offset += enc.encode.bytes\n  }\n  return offset\n}\n\nfunction decodeList (list, enc, buf, offset) {\n  for (var i = 0; i < list.length; i++) {\n    list[i] = enc.decode(buf, offset)\n    offset += enc.decode.bytes\n  }\n  return offset\n}\n"]},"metadata":{},"sourceType":"script"}