{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar debug = {\n  server: require('debug')('spdy:window:server'),\n  client: require('debug')('spdy:window:client')\n};\n\nfunction Side(window, name, options) {\n  EventEmitter.call(this);\n  this.name = name;\n  this.window = window;\n  this.current = options.size;\n  this.max = options.size;\n  this.limit = options.max;\n  this.lowWaterMark = options.lowWaterMark === undefined ? this.max / 2 : options.lowWaterMark;\n  this._refilling = false;\n  this._refillQueue = [];\n}\n\nutil.inherits(Side, EventEmitter);\n\nSide.prototype.setMax = function setMax(max) {\n  this.window.debug('id=%d side=%s setMax=%d', this.window.id, this.name, max);\n  this.max = max;\n  this.lowWaterMark = this.max / 2;\n};\n\nSide.prototype.updateMax = function updateMax(max) {\n  var delta = max - this.max;\n  this.window.debug('id=%d side=%s updateMax=%d delta=%d', this.window.id, this.name, max, delta);\n  this.max = max;\n  this.lowWaterMark = max / 2;\n  this.update(delta);\n};\n\nSide.prototype.setLowWaterMark = function setLowWaterMark(lwm) {\n  this.lowWaterMark = lwm;\n};\n\nSide.prototype.update = function update(size, callback) {\n  // Not enough space for the update, wait for refill\n  if (size <= 0 && callback && this.isEmpty()) {\n    this.window.debug('id=%d side=%s wait for refill=%d [%d/%d]', this.window.id, this.name, -size, this.current, this.max);\n\n    this._refillQueue.push({\n      size: size,\n      callback: callback\n    });\n\n    return;\n  }\n\n  this.current += size;\n\n  if (this.current > this.limit) {\n    this.emit('overflow');\n    return;\n  }\n\n  this.window.debug('id=%d side=%s update by=%d [%d/%d]', this.window.id, this.name, size, this.current, this.max); // Time to send WINDOW_UPDATE\n\n  if (size < 0 && this.isDraining()) {\n    this.window.debug('id=%d side=%s drained', this.window.id, this.name);\n    this.emit('drain');\n  } // Time to write\n\n\n  if (size > 0 && this.current > 0 && this.current <= size) {\n    this.window.debug('id=%d side=%s full', this.window.id, this.name);\n    this.emit('full');\n  }\n\n  this._processRefillQueue();\n\n  if (callback) {\n    process.nextTick(callback);\n  }\n};\n\nSide.prototype.getCurrent = function getCurrent() {\n  return this.current;\n};\n\nSide.prototype.getMax = function getMax() {\n  return this.max;\n};\n\nSide.prototype.getDelta = function getDelta() {\n  return this.max - this.current;\n};\n\nSide.prototype.isDraining = function isDraining() {\n  return this.current <= this.lowWaterMark;\n};\n\nSide.prototype.isEmpty = function isEmpty() {\n  return this.current <= 0;\n}; // Private\n\n\nSide.prototype._processRefillQueue = function _processRefillQueue() {\n  // Prevent recursion\n  if (this._refilling) {\n    return;\n  }\n\n  this._refilling = true;\n\n  while (this._refillQueue.length > 0) {\n    var item = this._refillQueue[0];\n\n    if (this.isEmpty()) {\n      break;\n    }\n\n    this.window.debug('id=%d side=%s refilled for size=%d', this.window.id, this.name, -item.size);\n\n    this._refillQueue.shift();\n\n    this.update(item.size, item.callback);\n  }\n\n  this._refilling = false;\n};\n\nfunction Window(options) {\n  this.id = options.id;\n  this.isServer = options.isServer;\n  this.debug = this.isServer ? debug.server : debug.client;\n  this.recv = new Side(this, 'recv', options.recv);\n  this.send = new Side(this, 'send', options.send);\n}\n\nmodule.exports = Window;\n\nWindow.prototype.clone = function clone(id) {\n  return new Window({\n    id: id,\n    isServer: this.isServer,\n    recv: {\n      size: this.recv.max,\n      max: this.recv.limit,\n      lowWaterMark: this.recv.lowWaterMark\n    },\n    send: {\n      size: this.send.max,\n      max: this.send.limit,\n      lowWaterMark: this.send.lowWaterMark\n    }\n  });\n};","map":{"version":3,"sources":["/home/lisa/VSProjects/react-pizza/react_pizza/node_modules/spdy-transport/lib/spdy-transport/window.js"],"names":["util","require","EventEmitter","debug","server","client","Side","window","name","options","call","current","size","max","limit","lowWaterMark","undefined","_refilling","_refillQueue","inherits","prototype","setMax","id","updateMax","delta","update","setLowWaterMark","lwm","callback","isEmpty","push","emit","isDraining","_processRefillQueue","process","nextTick","getCurrent","getMax","getDelta","length","item","shift","Window","isServer","recv","send","module","exports","clone"],"mappings":"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","sourcesContent":["'use strict'\n\nvar util = require('util')\nvar EventEmitter = require('events').EventEmitter\nvar debug = {\n  server: require('debug')('spdy:window:server'),\n  client: require('debug')('spdy:window:client')\n}\n\nfunction Side (window, name, options) {\n  EventEmitter.call(this)\n\n  this.name = name\n  this.window = window\n  this.current = options.size\n  this.max = options.size\n  this.limit = options.max\n  this.lowWaterMark = options.lowWaterMark === undefined\n    ? this.max / 2\n    : options.lowWaterMark\n\n  this._refilling = false\n  this._refillQueue = []\n}\nutil.inherits(Side, EventEmitter)\n\nSide.prototype.setMax = function setMax (max) {\n  this.window.debug('id=%d side=%s setMax=%d',\n    this.window.id,\n    this.name,\n    max)\n  this.max = max\n  this.lowWaterMark = this.max / 2\n}\n\nSide.prototype.updateMax = function updateMax (max) {\n  var delta = max - this.max\n  this.window.debug('id=%d side=%s updateMax=%d delta=%d',\n    this.window.id,\n    this.name,\n    max,\n    delta)\n\n  this.max = max\n  this.lowWaterMark = max / 2\n\n  this.update(delta)\n}\n\nSide.prototype.setLowWaterMark = function setLowWaterMark (lwm) {\n  this.lowWaterMark = lwm\n}\n\nSide.prototype.update = function update (size, callback) {\n  // Not enough space for the update, wait for refill\n  if (size <= 0 && callback && this.isEmpty()) {\n    this.window.debug('id=%d side=%s wait for refill=%d [%d/%d]',\n      this.window.id,\n      this.name,\n      -size,\n      this.current,\n      this.max)\n    this._refillQueue.push({\n      size: size,\n      callback: callback\n    })\n    return\n  }\n\n  this.current += size\n\n  if (this.current > this.limit) {\n    this.emit('overflow')\n    return\n  }\n\n  this.window.debug('id=%d side=%s update by=%d [%d/%d]',\n    this.window.id,\n    this.name,\n    size,\n    this.current,\n    this.max)\n\n  // Time to send WINDOW_UPDATE\n  if (size < 0 && this.isDraining()) {\n    this.window.debug('id=%d side=%s drained', this.window.id, this.name)\n    this.emit('drain')\n  }\n\n  // Time to write\n  if (size > 0 && this.current > 0 && this.current <= size) {\n    this.window.debug('id=%d side=%s full', this.window.id, this.name)\n    this.emit('full')\n  }\n\n  this._processRefillQueue()\n\n  if (callback) { process.nextTick(callback) }\n}\n\nSide.prototype.getCurrent = function getCurrent () {\n  return this.current\n}\n\nSide.prototype.getMax = function getMax () {\n  return this.max\n}\n\nSide.prototype.getDelta = function getDelta () {\n  return this.max - this.current\n}\n\nSide.prototype.isDraining = function isDraining () {\n  return this.current <= this.lowWaterMark\n}\n\nSide.prototype.isEmpty = function isEmpty () {\n  return this.current <= 0\n}\n\n// Private\n\nSide.prototype._processRefillQueue = function _processRefillQueue () {\n  // Prevent recursion\n  if (this._refilling) {\n    return\n  }\n  this._refilling = true\n\n  while (this._refillQueue.length > 0) {\n    var item = this._refillQueue[0]\n\n    if (this.isEmpty()) {\n      break\n    }\n\n    this.window.debug('id=%d side=%s refilled for size=%d',\n      this.window.id,\n      this.name,\n      -item.size)\n\n    this._refillQueue.shift()\n    this.update(item.size, item.callback)\n  }\n\n  this._refilling = false\n}\n\nfunction Window (options) {\n  this.id = options.id\n  this.isServer = options.isServer\n  this.debug = this.isServer ? debug.server : debug.client\n\n  this.recv = new Side(this, 'recv', options.recv)\n  this.send = new Side(this, 'send', options.send)\n}\nmodule.exports = Window\n\nWindow.prototype.clone = function clone (id) {\n  return new Window({\n    id: id,\n    isServer: this.isServer,\n    recv: {\n      size: this.recv.max,\n      max: this.recv.limit,\n      lowWaterMark: this.recv.lowWaterMark\n    },\n    send: {\n      size: this.send.max,\n      max: this.send.limit,\n      lowWaterMark: this.send.lowWaterMark\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}